<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PA4.3</title>
      <link href="/2021/12/30/PA4-3/"/>
      <url>/2021/12/30/PA4-3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="05691bee3800cee429dad0dff99b10c9c6b130bd60964a85205064e29418ad5a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> PA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PA4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PA4.2</title>
      <link href="/2021/12/29/PA4-2/"/>
      <url>/2021/12/29/PA4-2/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="bffe60605c8cd3d19ff9be544811951713018186c9af92f57e3ed36867f26e52"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> PA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PA4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PA4.1</title>
      <link href="/2021/12/15/PA4-1/"/>
      <url>/2021/12/15/PA4-1/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1e7a44bc1942e5245883c9df9b9b2e004c557e445297b4eec4fb8651f75749d2"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> PA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PA4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第十次OJ</title>
      <link href="/2021/12/07/%E7%AC%AC%E5%8D%81%E6%AC%A1OJ/"/>
      <url>/2021/12/07/%E7%AC%AC%E5%8D%81%E6%AC%A1OJ/</url>
      
        <content type="html"><![CDATA[<h2 id="A-加密"><a href="#A-加密" class="headerlink" title="A. 加密"></a>A. 加密</h2><h3 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h3><p>题目描述<br>现在有一个这样的加密算法，将原文数字$w$加密为密文$c$：</p><p>Step 1：在$[10^5,10^9]$随机的选择一个正整数$x$。</p><p>Step 2：找到最大质数$p$，满足$p\leq x$。</p><p>Step 3：找到最小质数$q$，满足$q &gt; x$。</p><p>Step 4：令$n=p\cdot q$。</p><p>Step 5：计算$w^{2^{30} + 3}\ mod \ n$得到$c$。</p><p>现在给你密文$c$，以及上述算法过程中的$n$，你需要还原原文$w$的值。保证$0\leq w &lt; n$。<br><span id="more"></span><br>输入格式<br>第一行一个正整数$T$，表示测试组数。</p><p>接下来$T$行，每行两个正整数$n,c$，保证$10^{10} \leq n \leq 10^{18}, 1\leq c &lt; n$</p><p>输出格式<br>共$T$行，第$i$行一个正整数，表示第$i$组测试的答案。</p><p>样例<br>Input<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">181857896263</span> <span class="number">167005790444</span></span><br><span class="line"><span class="number">218128229323</span> <span class="number">156323229335</span></span><br><span class="line"><span class="number">352308724847</span> <span class="number">218566715941</span></span><br></pre></td></tr></table></figure><br>Output<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">175267324024</span></span><br><span class="line"><span class="number">209603568635</span></span><br><span class="line"><span class="number">282077284785</span></span><br></pre></td></tr></table></figure><br>数据范围与提示<br>对于$50\%$的数据， $1\leq T \leq 10$。</p><p>对于$100\%$的数据，$1 \leq T \leq 10^5$。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>以下$e, d$分别代表$RSA$加密和解密的钥值。<br>本题相当于$RSA$加密机制中告诉了公钥对$(n, e = 2^{30} +3)$, 假设已经求出$p, q$, 那么$d = e^{-1}\ mod\ (\phi(n))$。<br>因此$w = c^d\ mod n$<br><div class="note info"><p>题目的前3步使得$n$的分解代价不会太大：$q-p$的值不会太大，并且二者距离$\sqrt n$不会太大。</p></div><br>$code_1$:这里求$w = c^d\ mod n$用了题目$C$的代码。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"></span><br><span class="line">ll n, c, w;</span><br><span class="line"><span class="keyword">const</span> ll e = (<span class="number">1</span>&lt;&lt;<span class="number">30</span>) + <span class="number">3</span>;</span><br><span class="line">ll p, q, d, phi;</span><br><span class="line"></span><br><span class="line"><span class="comment">//快速乘法</span></span><br><span class="line"><span class="function">ll <span class="title">qucik_mul_mod</span><span class="params">(ll x, ll y, ll mod)</span></span>&#123;</span><br><span class="line">    ll ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (y &gt; <span class="number">0</span>)  &#123;</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) ret = (ret + x)%mod;</span><br><span class="line">        y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        x = (x + x)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用的快速乘的快速幂</span></span><br><span class="line"><span class="function">ll <span class="title">qucik_power_mod</span><span class="params">(ll a, ll b, ll mod)</span> </span>&#123;</span><br><span class="line">    ll ans = <span class="number">1</span>;</span><br><span class="line">    a %= mod;</span><br><span class="line">    <span class="keyword">while</span> (b &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(b &amp; <span class="number">1</span>)ans = <span class="built_in">qucik_mul_mod</span>(ans, a, mod);</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>; </span><br><span class="line">        a = <span class="built_in">qucik_mul_mod</span>(a, a, mod);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//拓展欧几里得算法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exgcd</span><span class="params">(ll a, ll b, ll &amp;x, ll &amp;y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line">x = <span class="number">1</span>;y = <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">exgcd</span>(b, a%b, y, x);</span><br><span class="line">y -= (a/b) * x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 计算a关于mod的乘法逆元</span></span><br><span class="line"><span class="function">ll <span class="title">mod_reverse</span><span class="params">(ll a, ll mod)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//实际上就是调用拓展的欧拉函数</span></span><br><span class="line">    <span class="comment">//记b = mod</span></span><br><span class="line">    <span class="comment">//等价于求出ax + by = 1的x</span></span><br><span class="line">    ll x, y;</span><br><span class="line">    <span class="built_in">exgcd</span>(a, mod, x, y);</span><br><span class="line">    <span class="comment">// To make sure x is positive</span></span><br><span class="line">    <span class="keyword">return</span> (x%mod + mod) % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;c;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求出p, q</span></span><br><span class="line">        p = (ll)<span class="built_in">sqrt</span>((<span class="keyword">long</span> <span class="keyword">double</span>)n);</span><br><span class="line">        <span class="keyword">while</span>(n%p != <span class="number">0</span>)p++;</span><br><span class="line">        q = n/p;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 求出phi</span></span><br><span class="line">        phi = (p - <span class="number">1</span>)*(q - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//求逆元</span></span><br><span class="line">        d = <span class="built_in">mod_reverse</span>(e, phi);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//w = c^d mod n</span></span><br><span class="line">        w = <span class="built_in">qucik_power_mod</span>(c, d, n);</span><br><span class="line"></span><br><span class="line">        cout&lt;&lt;w&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>但是上面的代码会超时$50\%$的测试点。下面利用中国剩余定理优化。<br>$w\equiv c^d\ mod \ n$等价于方程组：<br>$\begin{cases} w \equiv c^d\ mod p\\w \equiv c^d\ mod q\end{cases}$<br>根据费马小定理：$c^d\ mod\ p = c^{d\ mod(p-1)}\ mod\ p =c_1$,<br>$c^d\ mod\ q = c^{d\ mod(q-1)}\ mod\ q=c_2$<br>记$t_1 = q^{-1}mod\ p, t_2 = p^{-1}mod\ q$，那么<br>$w = [ q(t_1  c_1\mod p)\mod n +p(t_2 c_2\mod q)\mod n]\mod n$<br><div class="note info"><p>证明：记$w = Ap + Bq$, 因为$w&lt; n$, 所以$A &lt; q, B &lt; p$.<br>$\because w\equiv Bq\mod p$, 所以$B\equiv wp^{-1}\mod q$,所以$B=wp^{-1}\mod q$, 同理，$A=wq^{-1}\mod p$<br>$\therefore w = [(wq^{-1}\mod p)\times p + (wp^{-1}\mod q)\times q ]\mod n$</p></div><br>$code_2$<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line">LL n, c, w, p, q, d;</span><br><span class="line"><span class="keyword">const</span> LL e = <span class="number">1073741827</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 快速幂</span></span><br><span class="line"><span class="function">LL <span class="title">Fast_MUl</span><span class="params">(LL a, LL b, LL mod)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res = <span class="number">1</span>;</span><br><span class="line">    LL base = a%mod;</span><br><span class="line">    <span class="keyword">while</span> (b!=<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1LL</span> != <span class="number">0</span>) </span><br><span class="line">            res = (res*base)%mod;</span><br><span class="line">        base = (base*base)%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exgcd</span><span class="params">(LL a, LL b, LL &amp;x, LL &amp;y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line">x = <span class="number">1</span>;y = <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">exgcd</span>(b, a%b, y, x);</span><br><span class="line">y -= (a/b) * x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">mod_reverse</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> x,y;</span><br><span class="line">    <span class="built_in">exgcd</span>(a,n,x,y);</span><br><span class="line">    x = ((x%n) + n)%n;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;c;</span><br><span class="line">        q = (LL)<span class="built_in">sqrtl</span>((<span class="keyword">long</span> <span class="keyword">double</span>)n);</span><br><span class="line">        <span class="keyword">while</span> (n%q != <span class="number">0</span>) q++;</span><br><span class="line">        p = n/q; <span class="comment">//找到p, q</span></span><br><span class="line"></span><br><span class="line">        LL phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>);</span><br><span class="line">        d = <span class="built_in">mod_reverse</span>(e, phi);<span class="comment">//获得逆元</span></span><br><span class="line">        </span><br><span class="line">        LL c1 = <span class="built_in">Fast_MUl</span>(c, d%(p<span class="number">-1</span>), p);</span><br><span class="line">        LL c2 = <span class="built_in">Fast_MUl</span>(c, d%(q<span class="number">-1</span>), q);</span><br><span class="line"></span><br><span class="line">        LL t1 = <span class="built_in">Fast_MUl</span>(q, p<span class="number">-2</span>, p);</span><br><span class="line">        LL t2 = <span class="built_in">Fast_MUl</span>(p, q<span class="number">-2</span>, q);</span><br><span class="line"></span><br><span class="line">        w = ((c1*t1)%p*q%n + (c2*t2)%q*p%n)%n;</span><br><span class="line"></span><br><span class="line">        cout&lt;&lt;w&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="B-可以看见的点"><a href="#B-可以看见的点" class="headerlink" title="B. 可以看见的点"></a>B. 可以看见的点</h2><h3 id="题面-1"><a href="#题面-1" class="headerlink" title="题面"></a>题面</h3><p>题目描述:<br>给你一个$n \times n$的网格，任意一点和$(0,0)$连线，可以组成一条直线，前面的点可以挡住后面的点，问你能看到的点到底有多少个？</p><p>输入格式:<br>读入一行一个数，表示$n$</p><p>输出格式:<br>输出一行一个数，表示答案</p><p>样例:<br>样例1<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">13</span></span><br></pre></td></tr></table></figure></p><p>样例2<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">21</span></span><br></pre></td></tr></table></figure><br>数据范围与提示:<br>$n\leq 100000$<br>题目实际上就是问在这个网格上有多少种不同的斜率</p><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p>显然有如下事实:<br>点$(a, b)$不与其他任一点共线的充分必要条件是$gcd(a, b)$.所以这道题实际上就是求方格互质点对$(a, b)$的数目.</p><p>最暴力的做法是枚举点对,即$ans = \sum_{(a,b)}gcd(a, b)==1$,但显然会超时.</p><p>考虑方格的右半边$a &lt; b$, $ans’ = \sum_{i}\sum_{j &lt; i}gcd(j, i)==1, (1)$.<br>对于某一个固定的$i$, $\sum_{j &lt; i}gcd(j, i)==1$的含义实际上就是$\phi(i)$, 因此$(1)$可以写作$ans’ = \sum_{i}\phi(i)$。其中$\phi(i)$为欧拉函数.<br>$ans$和$ans’$的关系是$ans  =2ans’+3$.加3的原因是特殊考虑斜率为1, 斜率为0(方格的下边界), 斜率为无穷(方格的左边界)的三条直线.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100005</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">bool</span> is_prime[N];</span><br><span class="line">ll phi[N];</span><br><span class="line">ll ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始赋值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">phi[i] = i; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(is_prime, <span class="literal">true</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(is_prime));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(is_prime[i]) &#123;</span><br><span class="line">phi[i] -= <span class="number">1</span>; <span class="comment">//对于质数：phi(n) = n - 1</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">2</span> * i; j &lt;= n; j += i) &#123;</span><br><span class="line">is_prime[j] = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//对于非质数，根据欧拉函数的公式求算欧拉函数的值</span></span><br><span class="line">phi[j] = phi[j] * (i - <span class="number">1</span>) / i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)ans += phi[i];</span><br><span class="line">ans = ans*<span class="number">2</span> + <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><div class="note info"><p>以上的做法的埃式筛求$\phi(i)$。实际上我们还可以利用线性筛求$\phi(i)$。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100005</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, prime[N];</span><br><span class="line"><span class="keyword">bool</span> is_prime[N];</span><br><span class="line">ll phi[N];</span><br><span class="line">ll ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(is_prime, <span class="literal">true</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(is_prime));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(is_prime[i]) &#123;</span><br><span class="line">phi[i] = i - <span class="number">1</span>; <span class="comment">//对于质数：phi(n) = n - 1</span></span><br><span class="line">prime[++cnt] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; i * prime[j] &lt;= n; j++) &#123;</span><br><span class="line">is_prime[i * prime[j]] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(i % prime[j] != <span class="number">0</span>) phi[i * prime[j]] = phi[i] * phi[prime[j]]; <span class="comment">//欧拉函数的积性性质</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">phi[i * prime[j]] = phi[i] * prime[j]; </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)ans += phi[i];</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;<span class="number">2</span> * ans + <span class="number">3</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></div></p><h2 id="C-POWERMOD"><a href="#C-POWERMOD" class="headerlink" title="C. POWERMOD"></a>C. POWERMOD</h2><h3 id="题面-2"><a href="#题面-2" class="headerlink" title="题面"></a>题面</h3><p>题目描述<br>在Miller-Rabin算法中需要计算$powermod(a, b, m) = a^b\ mod\ m$，请你实现这个函数</p><p>输入格式<br>输入一行三个数 $a,b,m$</p><p>输出格式<br>输出一行一个数，即$a^b\ mod\ m$</p><p>样例<br>样例输入1<br><code>2 10 1000</code><br>样例输出1<br><code>24</code><br>数据范围与提示<br>对100%的数据，$1 \le a \le 10^{18}, 0 \le b \le 10^{18}, 1 \le m \le 10^{18}$<br>注意$m$的范围，考虑从快速幂变成快速乘</p><h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><p>code:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</span><br><span class="line">ll a, b, mod;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求算(x * y)%mod</span></span><br><span class="line"><span class="function">ll <span class="title">qucik_mul_mod</span><span class="params">(ll x, ll y)</span></span>&#123;</span><br><span class="line">    ll ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (y &gt; <span class="number">0</span>)  &#123;</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) ret = (ret + x)%mod;</span><br><span class="line">        y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        x = (x + x)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//仿造快速幂</span></span><br><span class="line"><span class="function">ll <span class="title">qucik_power_mod</span><span class="params">(ll a, ll b)</span> </span>&#123;</span><br><span class="line">    ll ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(b &amp; <span class="number">1</span>)ans = <span class="built_in">qucik_mul_mod</span>(ans, a); <span class="comment">//ans = (ans * a)%mod;</span></span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>; </span><br><span class="line">        a = <span class="built_in">qucik_mul_mod</span>(a, a); <span class="comment">//a = (a * a)%mod;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b&gt;&gt;mod;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">qucik_power_mod</span>(a, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> OJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第10次OJ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lab4</title>
      <link href="/2021/12/04/Lab4/"/>
      <url>/2021/12/04/Lab4/</url>
      
        <content type="html"><![CDATA[<p>实现<strong>组相联</strong>,<strong>写回</strong>的$cache$.</p><h3 id="1-变量声明和初始化"><a href="#1-变量声明和初始化" class="headerlink" title="$(1)$变量声明和初始化"></a>$(1)$变量声明和初始化</h3><p>每一行的结构:<br><img src="/2021/12/04/Lab4/23.png" alt><br><div class="note primary"><p>$Cache$的总行数为$Cache$的数据容量除以一个$BLOCK$的大小，比如$SIZE=16KB = 2^{14}B$,$BLOCK_{-}SIZE=64B$,<br>那么总的行数为$2^{8}$行。对于4路组连而言，每一组有4行， 因此总的组数为 $2^6$,也即<code>GROUP_WIDTH = 6; GROUP_SIZE = 1 &lt;&lt; 6;</code></p><p>对于每一个主存地址，其划分如下：<br><img src="/2021/12/04/Lab4/24.png" alt><br>其中块号由tag和组号组成.</p></div><br><span id="more"></span></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一个组有多少行，比如4路组相联，那么ASS_SIZE = 4; 2路组相联，ASS_SIZE = 2;</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">uint32_t</span> ASS_SIZE;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 总的组数目，每一个组有ASS_SIZE行</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">uint32_t</span> GROUP_WIDTH, GROUP_SIZE;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 每一个行的组成，valid位，标记位，数据（一个BLOCK）</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">bool</span> valid, dirty;</span><br><span class="line">    <span class="keyword">int</span> tag;</span><br><span class="line">    <span class="keyword">uint8_t</span> data[BLOCK_SIZE];</span><br><span class="line">&#125; cache_line;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 每一个组的组成，由若干行组成</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    cache_line cl[<span class="number">4</span>];</span><br><span class="line">&#125; cache_group;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> cache_group* Cache;</span><br></pre></td></tr></table></figure><p>根据上述定义,我们不难有以下的初始化过程:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_cache</span><span class="params">(<span class="keyword">int</span> total_size_width, <span class="keyword">int</span> associativity_width)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GROUP_WIDTH = total_size_width - BLOCK_WIDTH - associativity_width;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//总的组数目</span></span><br><span class="line">    GROUP_SIZE = <span class="number">1</span> &lt;&lt; GROUP_WIDTH ;</span><br><span class="line">    </span><br><span class="line">    Cache = (cache_group*)<span class="built_in">malloc</span>((GROUP_SIZE + <span class="number">1</span>) * <span class="keyword">sizeof</span>(cache_group));</span><br><span class="line"></span><br><span class="line">    ASS_SIZE = <span class="number">1</span> &lt;&lt; associativity_width;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="2-cache-read"><a href="#2-cache-read" class="headerlink" title="$(2)cache_{-}read$"></a>$(2)cache_{-}read$</h3><p>读写的替换采用随机替换:<br><code>static inline uint32_t replace(uint32_t n) &#123; return rand() % n; &#125;</code><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uint32_t</span> <span class="title">cache_read</span><span class="params">(<span class="keyword">uintptr_t</span> addr)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//分别获得地址所对应的组号,标志位和块号</span></span><br><span class="line">  <span class="keyword">uint32_t</span> group_num = (addr &gt;&gt; BLOCK_WIDTH) &amp; (GROUP_SIZE - <span class="number">1</span>),</span><br><span class="line">           tag = addr  &gt;&gt; (BLOCK_WIDTH + GROUP_WIDTH),</span><br><span class="line">           Block_Num = addr  &gt;&gt; BLOCK_WIDTH;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">bool</span> valid; <span class="comment">// 有效位</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">uint32_t</span> shift = ( addr &amp; (BLOCK_SIZE - <span class="number">1</span>) ); <span class="comment">// 块内偏移量</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">uint32_t</span> * Data;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 所在的组是否有标记跟自己一样的</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ASS_SIZE; i++)&#123;</span><br><span class="line"></span><br><span class="line">    valid = Cache[group_num].cl[i].valid;</span><br><span class="line">    <span class="keyword">if</span>(Cache[group_num].cl[i].tag == tag &amp;&amp; valid) &#123;</span><br><span class="line">         <span class="comment">// 数据在cache中,取出,返回</span></span><br><span class="line">          Data = (<span class="keyword">void</span>*)Cache[group_num].cl[i].data + (shift &amp; ~<span class="number">0x3</span>);</span><br><span class="line">          <span class="keyword">return</span> *Data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> rt = replace(ASS_SIZE); <span class="comment">// replace_target</span></span><br><span class="line">  <span class="comment">// 并不是每一个被替换的cache块都需要写回内存,需要判断dirty</span></span><br><span class="line">  <span class="keyword">if</span>(Cache[group_num].cl[rt].dirty) &#123;</span><br><span class="line">    <span class="comment">// be carefull about the replace_target&#x27;s block number</span></span><br><span class="line">      mem_write((Cache[group_num].cl[rt].tag &lt;&lt; GROUP_WIDTH) | group_num,</span><br><span class="line">              Cache[group_num].cl[rt].data);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Load the new Block</span></span><br><span class="line">  mem_read(Block_Num, Cache[group_num].cl[rt].data);</span><br><span class="line">  Cache[group_num].cl[rt].valid = <span class="literal">true</span>;</span><br><span class="line">  Cache[group_num].cl[rt].tag = tag;</span><br><span class="line">  Cache[group_num].cl[rt].dirty = <span class="literal">false</span>; </span><br><span class="line">  <span class="comment">// recall that when data is loaded from mem to cache, ditry is set to 0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  Data = (<span class="keyword">void</span>*)Cache[group_num].cl[rt].data + (shift &amp; ~<span class="number">0x3</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> *Data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><div class="note primary"><p>如何在已经知道块内偏移量的情况下访问<code>uint8_t</code>的数组元素,<code>mem.c</code>的<code>mem_uncache_read</code>和<code>mem_uncache_write</code>给了很大的提示.尝试将上面代码的修改为<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// read:</span></span><br><span class="line">shift &gt;&gt;= <span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> Data[shift];</span><br><span class="line"><span class="comment">// write:</span></span><br><span class="line">shift &gt;&gt;= <span class="number">2</span>;</span><br><span class="line">Data[shift] = data &amp; wmask;</span><br></pre></td></tr></table></figure><br>并解释为什么这样会出错.</p></div></p><h3 id="3-cache-write"><a href="#3-cache-write" class="headerlink" title="$(3)cache_{-}write$"></a>$(3)cache_{-}write$</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cache_write</span><span class="params">(<span class="keyword">uintptr_t</span> addr, <span class="keyword">uint32_t</span> data, <span class="keyword">uint32_t</span> wmask)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//分别获得地址所对应的组号和标志位</span></span><br><span class="line">  <span class="keyword">uint32_t</span> group_num = (addr &gt;&gt; BLOCK_WIDTH) &amp; (GROUP_SIZE - <span class="number">1</span>),</span><br><span class="line">           tag = addr  &gt;&gt; (BLOCK_WIDTH + GROUP_WIDTH),</span><br><span class="line">           Block_Num = addr  &gt;&gt; BLOCK_WIDTH;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// the target data to write with mask</span></span><br><span class="line">  data &amp;= wmask;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">bool</span> valid;</span><br><span class="line">  <span class="keyword">uint32_t</span> shift =  addr &amp; (BLOCK_SIZE - <span class="number">1</span>) ; <span class="comment">// 块内偏移量，</span></span><br><span class="line">  <span class="keyword">uint32_t</span> * Data;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 是否在cache当中</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ASS_SIZE; i++)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果在cache当中，那么直接写，并且修改dirty位</span></span><br><span class="line">    valid = Cache[group_num].cl[i].valid;</span><br><span class="line">    <span class="keyword">if</span>(Cache[group_num].cl[i].tag == tag &amp;&amp; valid) &#123;</span><br><span class="line">          Data = (<span class="keyword">void</span>*)Cache[group_num].cl[i].data + (shift &amp; ~<span class="number">0x3</span>);</span><br><span class="line">          *Data = (*Data &amp; ~wmask) | data; <span class="comment">// be carefull</span></span><br><span class="line">          Cache[group_num].cl[i].dirty = <span class="literal">true</span>;</span><br><span class="line">          <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果不在cache当中，我们直接替换掉该组的随机一行</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> rt = replace(ASS_SIZE); <span class="comment">// replace_target</span></span><br><span class="line">  <span class="keyword">if</span>(Cache[group_num].cl[rt].valid &amp;&amp; Cache[group_num].cl[rt].dirty) &#123;</span><br><span class="line">    mem_write((Cache[group_num].cl[rt].tag &lt;&lt; GROUP_WIDTH) | group_num,</span><br><span class="line">              Cache[group_num].cl[rt].data);</span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line">  mem_read(Block_Num, Cache[group_num].cl[rt].data);</span><br><span class="line">  Data = (<span class="keyword">void</span>*)Cache[group_num].cl[rt].data +(shift &amp; ~<span class="number">0x3</span>);</span><br><span class="line">  *Data = (*Data &amp; ~wmask) | data;</span><br><span class="line">  Cache[group_num].cl[rt].tag = tag;</span><br><span class="line">  Cache[group_num].cl[rt].valid = <span class="literal">true</span>;</span><br><span class="line">  Cache[group_num].cl[rt].dirty = <span class="literal">true</span>; <span class="comment">//刚从内存载入cache的块数据被改写,所以需要将dirty位改为 1 </span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note success"><p>你也可以考虑实现如直相联,写通,非写分配…</p></div>]]></content>
      
      
      <categories>
          
          <category> Lab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PA3-3(2)</title>
      <link href="/2021/12/02/PA3-3-2/"/>
      <url>/2021/12/02/PA3-3-2/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f9f963eaedae5344e89f4cf0dd31d1080a84e31b3b12f9cbb863617ca96de4ff"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> PA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PA3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PA3.3(1)</title>
      <link href="/2021/11/06/PA3-3/"/>
      <url>/2021/11/06/PA3-3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="25c684b611c7464742f9a0d45ebc280dd7ae2727915284239ef1d339fff88c53">98c5eac1e431cec725e9b50c1f9552a78f5ea78f3a95bab7eb87ef18f427e6543733bdf542263235f2631f04dc98184223d4fcdf5fd51a65d2118c16bd4efb910f1a748f9c61fdaaf34a124cc2d74b33b508a73aaefc60f578c95aa9bb9e04d882d9a9acb70efad965dea1a5756cebfd378afd6ffd181a8df18c24b54b90d86b6764ff74ab68745cad782725139926042a32f85e9bb37a08c388eb88f6806d8453de5fb7007aecfbccd85d48c89fae502eb21774816a36bcf0baa08d8c7bdd2cc39088c46d25aa7d83809acedf1db424ee8af03d73623151af7dc9cd5e2c592337db1a529c3c675d21b70ce91ac6856cc7e861379339d38ceb03ce876598ce81789594a7b90d8681bcbe3ac8dfc986e5d6af1879225c2b91b6c5c91ce52805fe97f5f13a783bfa2d1465c9964ba28a2b6e353d1418a1661f09b2632dde9815a930007e611d93df9590b62a3c24d549b038ea093d665e1e824b00cf70f27a7c9434b4ad35350cd0b5448ec002a7cbaa6ccb9c7f6432dbb10011e7220df3781fc0d924eab2aabf077ee170c386e2909c67fef44b058b05b443b3caf14189c495639572f308db2da358a1a5ae2f681d15ad13c48932dd6d8714c80037a94709928fa989cecac40bcb4fe90c3b785db7b6a1ce5adf4ca932588c822faea40d463e53b10bd51071c5dc58fb95ef5ce43b1b7b526eff43e0ed12d3ff60a445a28bfb35ea3d0bbe12ff4710662fee63880d29105cc72a8b22937029707c4491f96c2ce13f2266bc6ddf1ca836c190bbb23b0b8a5ce59029c8f52190f3ab39a01450ecdd75ecfeb904f9fc74a536b6e45762f43f4034ffb4f21faec70b3d8363ae233ed2b610db34bb720c113444271db47f76356dbd3c89ffaca0e7825996ee828c9e0eb2a77515fbadcebb045c9e738580c6074b456ad31a0edc9a3b6c3aea9ee332e4e37034b8a78e87a597ca76b021ac8f97c68045bf35b5f7b4bb82d70721a96723a56d9098487a487bca118cb9f9e3fe9df2b18b7141ab415ab065da67bfafad1a4c509117e014a5da6577963c8b0036b91722f85ae3f532f4830a59b6e552ba24253d97b754c72db61812e774bee3f1f8ed9d98ef8ea0e0d2c9b87bccd54092e8ca3d087ce57a936be2c77d3f4e465c93baced3a122f2fc6c29a96a338e540b2175e2cca4bf3c88bc2e9f857ca6d96704788ae53d5bc229e9ee74bcdca586ff92f204cc1c17689d66cdd3232657e26fa88b13b4e37b5c9eca13746471b7f1695af67a8b71f101a3c7681f99bee30cae272098651662293036da82fc04b7f77c21430acd7032454098da365468a39f457b447e3e0ffa70b83ecba2b29c29d3feb2a1fe732ea66d3d859ffafcaa41b2e7c3db32c7b74dad7661ae5f51a0f83d92cdf25b8a7920f4ad882f1a220aff66a674670cb566bc035be037e1d22754292ad1a1ef49bbd7a53350bbf5903768ea48707be5219d223873b9fb24699f6713b5fce3e25824634cf81e5dfcac4fd096e79b7d47b995fc393e328980d1ff3864ff365e3553217a2bea4ce0fdfd8dcbf9a78249ef76242ab3bdafefa922a94625bd566037a91a61d4a647d05ec5a913a33f207cd7c7307d0bf3556f5c18e09bf90b85a4f22c79efbfc2042f7ad651c7b57f6f1143295b1b5e05e2c55770aac2a914c47c4fbf8e0da0756fc0b4aeb7948f61c57b5f72c0e3b83df0694a68bc98e2ff3117a131dc9ad0184a07591d88406cf1f75be113ac44ec427097f622feacdf8606373df3223dacff181089aa6b4b0808fce148de756a8feefac3f938eb3871aa72cede683d81851be1fe472c5f112f779cff51895845bc94b4132405932c33cfc3039d3c7e417bd9b2e414fb2233f758d1398cc84c1f3eb64f39bf2eafc0ace2a2b7ddfeadaffbe32762bfc758f7811209e544b0c1854105ccb20757b0579098041a7758d3743f92bdfb3efb5143c3dd6a38df57f813a8fa2bb03ce38dc39c307968470b3d9adbb684cc62b1f5a48dcaf385a05dcc7d3e7f3c690ab901e5a83419ea4b6e1a477e3886b564613d57c438bcdcbe4f2482e13169ddd4131d29ed5974412303d6aaa468422bff44c2c4e905e6dc61ea12f376cc565e67750dc17099a33c740c53aae4a5f8c803d460edc572b13dcc44def91793eb1de11dabcab67f526c64c530ed77ece996138b0c56853748e58582c1bc884b8b092d1316bbbe0a023d898f707f1c3d519c281d56cf57bf5ee3bb7cfb781ffb35c25033da3b9d3596a0b1d18a6bd71a9880f56c7444f9ecda3a3e19370d866f38b67a2742d0cb059addaf84d70bca9fabe4b7b7c054acec802255057db3023242690fec3c984e8d9372ca855b8b9b5ddef2bb414a431fb7a93337c5ee403ae5556505799efd276aeef87a771064d6b261f99ed7f60057f9d30c80fa6b11e8b992624be7d9f6c8cfbf2348ac00bdff207c32054307cc1507e2600384fa6daa6daa83a1fb715da9572211d222baa924144613e26bc8a166b07c32ba1a07a5fbbe08d1f4972b3c32aaa22582977c632491f4b471e57f08fed408589e60a2df1dd038bb36e9efea7d857cc07cc9de25b05e7b7c5c8e0cb9829f482f0a7b78d3b51da1b51a31479830fc358a0d07efd3eaa38489ba6f949f116a7c738ab9c7585eca10203748cd90cec3cf8563cc969ac6f66fcdaefe90b7bff61354ddf9797bdf72c4ca8fa951e477d62fb1b0da4d095dc491b86d1d70fa7b562bca88f3fb97976e88a184f6a2ce44e138cdd79d5245da75690e7031ee3167340e54d40cd37c68f206e853236ae5ee9b478104f028eef57c744e6b03fa1c014702e66cc6e362d4adcf37453efe6d7c9d779183b9b33c979f2de2bfa65f153dfb2f6af6c594980785211a89b83855aba524d4e03aec57f264d85e05b93746304ce1142673f327e8f8098f9e2f7d4d4257c5e8df7837f709b4001504bc49a4fde6c64e5b94ed2df9aa2f01d4e68b0f402c24e18c19165844d20d245692c88f4486b5dbd456cb4d4bd370f042cda3ae64ec5224e10d5efc84aa61a0e1f8e9442625f2d7b1345759cf6ed17da336b7fe7fae5af75c1358f21e33d1b76f2657fb4b9f306d17934500b7b76733d7eeb290d0b77abdd42e16b470565d7cd654bd770fd20019378e69353968421fa58df6449ad3fcacfdaa67ad2f95513f66047dce6a7d5724ff7e1c384fbb985810db9fcb0416199bda544ebd40410321f05f84031bc0faf53315f677d2ce26be601271b7ea2d94d9abb0d69e78315a50ec314dc2cbc1de4c90da1dd673fe70969c2dffb83348af5bc83f41619193a6554029d405ac8be00b9253c8f2b91abd4393e29892e3853af58057f53822e330a94ac9ee70386aabc7f37a3be082db0db635105a6b2bff0a649e41b7168403f8583242f0b8326d3c6ae83d388c8209fc385d828d574bdc86e711fd925abddf4bd1caf47d35ed6e6a4671ed3274d69df51d80125eb33a77cd95ae9f4e076d73235f7de7eaaa5bf6e52cb667470a91c158d236d0bb124055aab4be432839ab661eb8134edc145d8d1485a59d2a4be3dd8c3f8f79ce546946c133919503aca25784158f2184241c5d19fc76fc400aac5e145e6cd4d28efe7d6ded86a14ef080035931f6649675231b8ad1bd13134f573c4557e5778c512f94077c86206eac83c964ee855a8ef093a2f9097cdfbfb788005f3601859dc0e42b766bf8d1c53192bc9503ee926652246eeb44d3b2efd58910c62a74c93b1daf927c2463ef094371f351296d60b7f5eb341325a603f00f7b342d1e07e5bb73a75559bf654f0eeaea7a435613441c8195c22a1f4fa4e934267ed23ddb12dda69ed021e1c47a25a2755512362929e3b39c0604f9b0b7f729edc8c194a26ad437bd3e6e871b1aaed6a0ee3f5e340f5fb7c27fd0cb0bdb0595a7f23e5d623e65773070366d5216ebac31ea3a9143349e474f73f72164b646824b051a0a80e968510662a22566472b23839d285d9bfa0fedcf5b1db0fd5e2000c9df5686613b79f5f9fa647f56ae645aae5aa02800ab2a65364433f31617bee8a1796d73000df8df67c31b337d75a1a2d0857e5f860a2d95b6f4c62a3a9f16fbbcd380581be85b9bf2e2bff0a1a031a5aa3eb4e3862fdcabe64c94b183b8c80ddc6906cc81d7c7ef0c1d9453eb2b5eb1d40213b9f271d9f7b6ab65e7d6ce46cc64583143bae6c0f8afcb4f9d7f92d69a3d94e627239ad5bc9272b6c7297a22c6ec62bd08538d3f0ebadf355f503a76a01e29062381889158c5674cedc2cfe326c1ff7325a3f5a5d07a43e1afd1eb1b16b2c63f6f97333863c7c9a397950ed6c27ea0e675424b4fe2db098dc7fb39957c382dcacaeb0d19eccf81a11057c56dcd3be87bdf31c6b5a7d0b4400ea17829cd44a074c460f1486c5cab6c8c5ea3494b81e807f5d4a0da78f6486136f5e00ee66d719e8d0141fa8fcb76d381c56b8c57e371322bf161f90e31ced2eba8e606f14ae6e2911b8908ed5200680a8dd3e50f2d6c860b188be28c7066d6f9cbafa1108c5f376dcac9455d87747f4ba0691468ff26b34dc30a98671ea40829d0dd2b5f550b87fdc04feae2c5515e0104723e654656ccbede1527f7278b3bace987d96813347a2a584ebae2bc9e8662f569d1ac848a2843b760a9a6da012b928328870ff3ada58aa5888fd312f40732889c539c4996238cbd263e7f2be123da4ae399830d1b7d83c3e2296547553ae34ccf71c335f7c456031fb8b47e8cf0985e89b56e809f0227a27d7854fa088eedbb703d2e3308be08f8710d4afbd0a19b211008d69e5a02f04d0eb88a23d9c82d5cb99a93584e849a0eebed6b7b2520511a11808ae1c3d51381157143c9f90a5bcf5027fc1d25a2178ccca4db2326c8eb4f56593607b0018bcc03a1cf5327ff44444c47f8e2cf7d33f28b703d3a73747dacd2e6a250b5e38f423a21636997fa40b3868de894647535e563f491c9b1272bd45ed1d9652dc573a03c9074c0506344f807844ca0331ee561c98c984bff2f19b405f468bc09bdd494cd443f617ad593fba9585d8fcd11023056249e8200528a269fd48464169b87a47fc183892bcc2d90b6f857caa0dc60549a2e41877e3cf22d2a6d2d300a631849b0d1c93001c74c4f7168596de7239668755a12b0f6399b086bf7676c89b8dcc9cd21f422f1cd557d0e52115126c5a7f91d88b008219cf396e778ae62142ad831c44e5e9c8daa5c773cbb23f9652a9df4cda0507cf4284b8278af67040660d4815c4a52581c332deb30ea0eb0d7e3b61c187bfb1a581c4d9b3fa1e26aa002866d1b9b8e094a84faa364d9e7f72159ff2940e5370797a43a2edabd927427e62159e47fc3d09710a1ec3ea64487d2b1382dfa48d46417592017a28d778ea4679ea57fe377b4de9edb7fbdbddd21f9a2599b731bee93d79211acde65efd624cff5c79ee7785f2a239d0372b83aba380c5be8a551891bdbbec8c6783f49ad8f6bb557a510204b65b48703c9b41ab76b16fc102ecc5e14b83ad3f5c792d0296fd02a85a7eb0e88ae1d8e3d99b4a54dc9ebd49c5272ba313b74ec2aded1ce7b3fcc19bc585bee53c3bcd534a2c036e3456be3b9377c4576eea156aa8361ec8f2d6742c627dcdd777b6184da6e6a23aa0e9282126b5a365357c9b43f77b0af8e74823b510b19c8776ff3e8b9aeae03fcf364a7122a2abfe83b1e03a334e958079d0fac6bd509c378031d357ed718b8534af5b00ced87c54f18a1dc94da00ea0da850925b0492edd9e6f365d7edb70902fa9fb0cab36f1a08c29e4b2237bec339cb7f975b4871a3035ee3d08883f3fdbd5a9fc76c0f530c3f88ec5fbef709967f90e12a189abb8991f940b837bbe6bc594a8806b3afb55dd2b0d4ae4678576485fc2e9f22fce5a5249492e8114fd774cc1852b1c3075fb0da3e32c0f7d448d267b5e2d9f61dfd24aceb7499ae2ccb165a5891736b38ec0d5fc792f6658b423734e610cdee9fda32ec188aed395dbf35943dd1cc4b002bfd4dd91a64c9b8a1dff396de2425ae666a6e221709682f8ac6d2fb248d37ad2d9957f0e0d54f8ae69a085fb4cfe60490ccf43d7a77c9bf27a19aac034f592a01b6e262adc6f9aa4bdec753597336182063af60a56bbc64d7229928eb0f080a7be9ec059a30bdfbb12cab0fa2e3ed2e277a16f4a9dfadecea482ecf578fdd2e0bf2dc87ab1fb17aab8a2f60340c1e8747b8bcc04457f1ade7e271ce22d0924bbf0c5315281c6643ee63b8074c43a46d2b736dede43dbaece59ea8cf171e8827f8597f668fa9ecb7659b645f4c5b971466e6fbf771512bd62ea1a0d44532e4da4d0e0f2f644017dc789eaa76518c8b4a1a29fd33a17f1e226adaffd09dd9372afb1e62cec2bbb3485df37ab651dbbf707a9860447ecd163bdc89aafd818ce1aaae0b1839ef839fbb2c5dc8a61caec20c161e6e0114cda5c15303b3c0008e9eef840b04fa0d55744bb766976d2d98bb2743367c1788a98bfdfd76a79a1dccf0f05ca08a53075d3706ce891ddbbd0861eb5931d98435b11ea746e1150fed1f8e86beff04147b9fc30f1bce4f1f4a90902c1e11d2bed2140bdaeb42c5e08762c618e0617ac06ef76a5c16f5249cb010dd3b352f2900ff2a27fb109364d390f1ff6bb7c51c80b250faf2dac5b3a7d0ca7c8f214c5649c6f8d5be1f76f9def663e52d37fa947372d6c4ba6365d01a018d2bcade986d146f3f24e105f93e6098c2ef24e2774b40250c483c7c6e65f7acaf92848e8278b783c4298f664128de5def8a2bea3d7e81aa0e4ac91dba0e8765c68faec800ac6e391d333b30b29242ddef921217f0d7cefd544c018d65d2424d2902ee4080ee132ea06d7394faca27b85575ac6421e34a2b6b5fd2efdff5cf3b7e5f9c23df922c08d2169b636d8f909b2141ba6df9f226d793fc8ed7d644d2e37aae4143d4bbbb03a41284ceddb024dde9c59ff971587fe379a6ed8b5f0b1227d21e6b30da97b0f8bfcd36ceba5bd17ea112d9838747963675ada2819fc460fcb879b41deb12a0cab703cff564bd73b264148d7e2f3a527027b9a477bef81ae6001c4def5762fbe88b21926635ba821eeaf9732511855a15b8687682ef0bb6ba7b4f4832625676e08a1d3260ec7b3c52d24c75baeb7f8dec533651e4d97092eeb06c8df318a2d91dcf315d5323c27708da8813c988911f107a60d383aa6b490905f8eb4c013a72833f601f99532dc6cc0ca501e2b08b0275015e90176115658d84610f7ce20b8cbe1fd5702a91eebc5d8a4f6ee8105a7059cb449b2019d1612bed958a32a178607e156a1af4204f895e27c92d2019ba178b03d124f9233683c8f9bc5d55b4dcbdc6dcbd34dabe6d03d18a185daf300a88b8dabee04a85056b730071f94daa221d4afdcc580cf60cc8e60d7ebdd6f141380ead6adeceb2181fbd9dcec1b7d7fd26984c77cc1a7a782119e5c301960d9a713a0ed676f6565dacfc608002ad55f26043cfd3c657e2030336b24ec2db981240fdf32a0630dd8a0f2125d6337f0a916f254d7346b234dd6f828796d4c5d9a2e625b532f653b027997386b045736969d5940aa5037ee55135465c592afe8d93a807484eaa8e00b26c8f892d3de34a36a87ed00c9aff181760aef14e74764a0b1c04185ab5e8598aa837421c3746d627744acb83bd16baa331246422271925395a5d74706671914349c82dc6066490996d75ef19ce284b6dea7ffaaa26e35fc4f3d103fea6b2b0a95ae398ce278b02ff84b1d3909c2598ef186c970d16e9725276ac61d95fbfc0d2f6ba84f792c47c2446249ea7de3d8d9b3f2f3f2c572cc3a3fa2429693f314696824950672cb122910cb3caf42b88589a2e9b5e0a21b5c4485a1d6b4672c53aedc275d7eaf2ed9799af664029ba02e84e13e25e4eb46b787876b3dab75e7a4ca45c0d161d06c5f96d4dab094c266babe627df8b9186d02b9ad094a9a52ef3c78ccffa1e5be8d26dd21e0efa5d210f43ccbcbc4997258d72a050315661b75ac9a2352e573e643061f83c578972d89dd8ff13d43e1acaaa99a053169bff51be012f3493f3f5113a4e7b780a2fd36e9a880b87cdcf79d338467cd9e83265abe0fbc737b29fa1955fa15a690b92b956709f42810f23c4193cfb780510375b648b4ebd3c4d4212d2c89d68e1f24801466e00bdf3855d8445a0cd2b88d63017e60dcd2a4ebdaf738682ca0c27eebcb27e3980a705f687365cde5232bd812398129fe82b102896a444f5ace00815abbf2682011b76bf25780c4391ff16ca24d77d0d43abbe10a3b623ae63b2358ecf40a587727d3fc0f77ac18eadfce6eff716934f1d6373e15ff4f53eacdc1a877f27853161209603acccd4afc0d4c919fe5482ac220b4babb3bdaab4e899be48b681ccbb19c5dcee28efe3a4d73e8b54ec97a22909462b5a410bbb629206583ea90a63782c2cc3611255479e09bd4d6d24369a6caa2cbe4dcb9b3dca27f1c50dc4213f68ac0c99c43a81f7706516d6cd93fcb609221a8aaa8388f8d69f81f06292ad4cd8b084902ccd8f786b6a7cada971cd3b322c05a622ab1dec6715a32e946cc50183ffb2acf59e19d3cd8f74769d1d80ecdcef75f9562afc08cc9d4b3bdc975d571cfe1e7a542350b08c511233216884c1e334b4214d87981df2b671ee1b04e5e7562c750a306d19ba5dc65ca427488fe93f99dc8ddf931256b505ac2e56a2f6e944105c73198df58b26a0ceb938f21298253a9afdfb12361967dafa5b9a73d00e6ccda5413794f6414bc0f95ab575617555356499a7da242420ca2cc9a348159618694a871df7b950311c331010c2c991a6a39f69fc705e726814cbf8c46ec2b6d780d2cdc092d83e313ffda4bbb60801ece7c042f3ebfaeda6d8f5719a49506d712170f66371ed634b41f02d66460869223211ac0e1e52552df7a78c9c9a8fc230d285bc00abddda7505085ceb73f1c36932b6251e466f95364a87300d881a127734a99c38312cab66bb57875467f7add9aaaaa662364cea7d4b3600aa7152e03bc350b219c8d66251bedd4d28d2476e4a8c58b8adfa31f7547077c22328dbf8d0576d7562fe77b55dd1b7cb3153d9907f71975cd76d3a8cde611b765f3f9055affbc89418c61451eb4a8e4174ca8e0716d516e1ae2f5b3eca178408a58344878095d641ea86596b38f368f4777a18f99754b6440fafa45e656e30e20793369e4fb86589431136239867a499984a67d8ec7b0780eeff00ae4a21ab5afedacabcf2df27174320eec60c7ee2c7007b9e6ef25106f1dadb88a1eabe69086201b649087cfd90204fd1d49003cc1a081c7e53fe6da0cc9486abdaaeb6363cd7ae0d64787efbdb54a0c1a5ecedccbd62fc364860a7364586ea6642d95bf9645858f9c4dd46f15cee9dd66e088a10449584d07b7c6f0c1cca96d52e95de1ee12b4c121ac6f18fb3144036cda3d23c0e2f23ae51c529538c89238baddb46171d5b458ae2f2f624d83cb66bbbaefdfe88bf4d3981195c95d103d2394d13bdc85b27225188266de898034b7f28c3c12303ae94d704060506cb8722aea01c596f1c3d742f5a8f379da14481e45573d3cae4dc9db91cb214c467012ae45f8f8c9c34f721199d341db8c7ea1d5e968eda92a6a4b6c466fe21417782c93216af5c4f22f84c5ad2c928eae7b2061cfc7b071b94451392e58aa6bbefd7ad84c3097113e75da1cb7aa7ec3880a515ec7239714a8153349c5be9c7e6ae3b1ae2122d484bfb492f51568e817dccdb75d1ab74b1665fc52475b887e7bbe7025fc12295fcd6f2545c57894495d69f2f49c686a32b888319c7bc61f2d3c4b2aeb1b1117e13ec50fdd6ed44f528ee36591652d420cf7f43d21696b54c771cc04a7fc45fb2e749aee593a58a657b1d59c7538e2beea0d1d0418a45d843d8af1b756770e45042bc1f82ce8388388b789ad0155018b5d83ee93191a8fc5c0fc54d25c8a6e96128e1b50b3a61411797e0c3d4be5cf5bd655d9ba3b6bfe57e551421eb0559364a7526d91234ca3b8f3fd78d8976527aeff7ad5a5950007c25ee502cd803047946773981ab239e93b0f2cb3f25634ca0daef55f406254e805f47e242005da2a1e533db358ff70524cc1f5a8586198f5512e8d350daf4acfbbb11c65c80cc61ea6cbb4d32e536efdb3fb30d9a9a9fd8a3316f0a72da258bcdddf97ffdf14ada47e56d9ed57fecc7cdcda5173868c18f70dee54f9c28858e57ba6b2548d878e037ca34ffa1d9afe3aa72d674d5157328073726d3c095ce95ed8c4388c92213b343176c9eb2fe17b04945ae00111028ef6072aea2a8a4117671d357acb71433e70933d0fec21cc05143ede1ac4bbac7ddfbcb0953cab9635606c30dc56dc756485c015135016128968062e1bcd758969f3a1af0748cacfb8f7db08fdf27fbd47613ed9cfe52f8881d5407e19ecce8eb9ff280e0008ded265c7d2d222d618f8ac884cb641df6ff5cd0c4b8719dd23123f4a5e4fed3257fb5bc380093db30c800ea4ca6d063722c928cf554b948020563e84e76afb6c752ab6d6938024c0086fc0c8a5fc79df94d6800067d844c8e62073966ba0fab49ac569cc4657487d27721c69e87668265c28605050a74fa5d78fe12f33bd18b71031094514c66138a84eddddfceeef6fac9d273e545e43d7628a02e435d6687149de8183d26b0692175a33c2cfbaa27ab871c856815ae67ba2cc79fee277fd085dd4a8bcdd78686692be42c85e1eb040b9b5479d6c29415365cf4f34c64aefe459b91df7c76dec4ae7b37e32bece8ff35c83e49c9c3f9ae7883dc9174cfb1a7e5f5fac6dfffd4f45e68f99938c83d7d04bea288829f2cf188cff46d2666008d7f681447a964309b47bf3c7bf09e8925eae91dfcf47e58f8ec881fc292491464859d96f588762dbfc75015cbe46c79f3d5f430f1670d24fdfa2a517f0e478ec0759f28757c95388d169c673212d81bf8d8524256a7b631566adf954dca850b9c78630b0c955d4e094cd4c7c9b4ea2287b1d78bf860dd4c845a49a8dc7d61084b961985001720037f076710e5f48245b93e6205d00c6d767aa38df48fcae706df844bbdb1e98871d905ae30005017842f0aa25ccebec80a95bea596cac6aa768957d5304302925f04a43116139ffe016217b970cf5a50be221f0a5db94b07b425ebac216053b1e7eeae88afe0c6d9776b625c19015bc6ff4da7067d8bb16f6d067010d3bba7ed9f1508e5fc0be3e99ab0e7f9aa255b6c1cce7e70e8bcb7b788e083101fff7b333c618ef11b4dabc52c7a6aec3dc55c64706972a7806a1b2e0e10ffe81cbee7114b5327e08dc7a653be29dbbb04e3e4e098b725d7d5b8a9bd958f1fc74e2e15f2a427e37f538ffa3f3a2ca286d4518de4e51fcd59db896e021a8b3921fdddeb2bbd41503fa86c81555ffd4ee7ce45f2a5235988c2295092f1a2376e7bf17045dab0f287e258e05944fbce4d1987e3000d735eeadf391d32dadc394acc093b23cb3fdadf60a83d669a911599c2688831511b1b388098882d60f6f25e92a26d5cafd3454ac5e24cc71c97cfa8f845b0a3c9ead97824760669062915eea2528dcdf717ed7a406284a2094d1a6ed7548c5f986e262b1ffabea9657ff93eb176dd34ee2cf11afaa9d7d2aa5cbe26662bee33918cec7729ea4b14142b50a3065832f05afb75b43cbedf28bc8750ac3b9f15e87dce95b244bd5a76b9c551589d3619e252ebe8f5158e4298659eaac4736bd4871d1417eaa221083d4f21a1a0bc4cd6f05410f17f44c20368285d39f25f373d9341ec7d7be2823f56f13796ebe6e6dbaedc114a6b08c69ac23954dd9128bd97a8ec775b9f67510a74a96e4ed0c63f124e7ce92d111ee8c2aacff9ab315de92b2557cf943a7e10dcbd079df1e17048eedac9412b54d1cd0463b859d4d2bd3e6d14732e683a0211560f8084ecf06f39133090bab8247c9645130c97c5b58fea8c1997c5c2657e95f3d17f62f0fa1d0aec0af129fda86f400f67c8587be532962d692a31bae4fff58f33a05bc4eac441841819b530d49483acf089ce69887e8a1c3841483db92e8ff0df7f29186e317ff95f2c2724ed7c19fdf5bbd720e532510d8e13f85ad0652d9a78707c768a9e51e7d244cbc71f966da622296048e68361c9bed07aa0b0d61563284c3f9c20c80f9368809228205eef3d611cacc1f30419352f411ef1ca8460cff6348e791906d09e483e8ab0398f5ac736eb7af7b3ffed3077ac527b5364426a68cefc9db6103210895aacbc2fdc65a614574606e6824c53d6412f0fb0f41862e3e70f1815205e6ecb69c14eb555b36676c8b9e4e5ea046e4d2d90b2368215a558050ebd8de4709f180efdb2bc82bc8838ab23104855be40a54e0b9d3d900b58fa8ed555a2301c62f6c19fb84d2b4bc2207bf6f32c37d0b3604baf70e0b4ef37b8a084c3ac936f48f814040803b952b31cf4520994f82c4287c8214188fb12d183c414ee298959857915f718ea70fb711b58b67090791f39b719656071c21769e1eeee0e778fef59ea8ad6da8995b5f41b7d17968a3fc86287aedacbfc184c9ee1ebc4c615275e3d39dd2a28bb5ae8176b96efc38b1ba64524cad1f681bfb342f8667722b4e690bc2939feeba38e297fdd96847978ac3cfcaf023048303f1d4c15e39921133fb745a2e279083d6471a2f85183f242b9390cdebd00f84911493a34a9cd9a87e8cb1dba8d5acb51f48a118557052de3f2e8e4181a67f9c2e5e3986c70365fc3add536ec9d6dde105f366c170d51ccb09ba631c9dcf804b2975371d8000a5342d020d88f453445fdc702bda928066792401c34a453778dfe736702e236d839dc87d8c4760621470ce35b7f55a8e2e6cf1e4e097ad2cc1014efb790f4bc9361795fcb6ef84fd8b18a5b0b3e5ef9d91e767738832ad22cc360ebe780110fd6e434337e827b716a92c4371473c4b52b98710e447ce894a652b027aad5cf246a37e49dbaf78559b5865d197b6751a5f88d10fc9dadf0ff596e88add8eb402b31bf6dcf0d112dfa9c3cb25e613be4e986aedf44f52bdec57b0a540682b68022f6c08ac96bee521aa8f7c546e4d35beea216ab9cf6abe422f53e7a7ad6888d9fd30d5f091f22f97de0d087845916d5b8d13b8e0c822dc9bb0f56c5b431e18c3a54eaef70760ece937120faa62b3c35c84071080084b11e624e677957f7d07c0f6352ddd36de6f755219b7d79149841b645ee960a1798ad3139c8f3d101fd724266d7d89f765f3e05fac9a0a7ad9ac6c576a5bd423d2625387013b00f5fe39c62977ac08f915b68e2966c56557f57cb4bc4571a4a74c54641d8e435b2bcfd7e9d2d2e1c312a6e89130dfae0da7e0e47795cb0011cfa0c7890b061d0d3d1285a63b067d688104fa088c411f8dadf6b4ab75ba48b7350a8533ca78bc6df47141cc1b7fddd88b92db282f1ccadd78c7223a8ee56403cb84800b65e4172cabac1a60ce97a203d8bbb47143688fe33a11eee6a91a806aacefb7da9cc8e567f84ff2d9cccd54c5dad00c7db621017b543b6eff0b5242b4ba25dcdd3c6b2e2149c99ec52dda727aa55592edab1b8c9befd294b97302834d64f878e9092075dfa4b388e124473c707cede14142f504f9bb1ea7d6e979983ce28c4c63e20c927f284240f27cf3eccd5e09df2ff4e6537dfef2fe20bbdff21d6b649c468dc1fc22f73f407dff7160d1f9189703aa6738843e662c4bd81956346baff5dff6f21ba11aa0666b7e8ea4d371cdbff65c79513e1e09de84ed6e88a3c8e4da63784eb72ea19c5006bc232723b520ef06e786037eb0ecc44427f79c7630c0e9b8093c30e1294dd323ecfcc4ae594d3bfa6b74cf600774933185d44e6173047c6b983a314a1ec237b8ee1c40afd78f4631b4c9ec0b29670f2f83e95d7e1f1284e352d63f610591c5e04557697dc44c09fbd69630dce7b609fb4fc5c12377b08164eaac6cec1cf1d33d96a6debab13b9e35ab36eaf03ae03f16c0e861210f6cb4e0bf2d685516f13d839aae2eb93c15c9743f90590176118eeb8aa2dc39386bdcbb0c9a00d91f396bcbf4f79de62c514a26f383fcad3e90b0ba69e64e684cf37d45ea6f20af3a5b7756ccd02223208470f670416e1803b9ff23e453d654c753d320320b8f4f8a82c5b318c478240db5138377ac80318e16d69175abafb0a73fbd8049eca60cf82c6a724fb1b5647561ad565688085f577d8f2c9bfa09c46a3a2c0b49110cd521b3ef3ca05eaa4afeacf9a0316a3ccdce509546eadf03132a3c8adee28f5b667696863c6fb362fd6a11f0ddfd145cd6b5aaa5359d7b4cde5717ea7d1badd69e615d678a4464485caee1cf9d2a9367b7b2de49cc4e2f4264b6b84b34aae4206cfcd2e63274718bcf81494e3e8ffe1ab68a5da3b7f5399ae2958eac3ae08c2412d21bf18a661298373f4413362bfbb5e3816e4e55010f71f18f9d87200b3f2ffcfd7a1ee469ca4ecb2d7650877a4652ce086aeb1d7d208fb79d841d0badc37493e22e03e4543d78e5424d0301dcacb81ee2458cc48ed69fdb7a54659eb3f2771eb0e3423718d2a2f4dd748bb725f9581f906d916edb935767cc5b0e822e01092019d03bb9ee37703e70e13a0ec4987918d94669db2bd5aebc59a0495451e54e7fa124070a04ecc9009da5a39a5fd27bc591c372ce8c983d82a618fffe1633c09d96e6a936c0255aa9d411818f6b127767723e9af9fb8f81e52955e3c63470d4f5a66deb9f765f14b22efbf2a0415ccee412257d9dc0db7a7f384a3b2bf1e8c8b21ddc8f058d94d385a8713cf4b7797a2ffdd46a6a9c06cffcad48b13c79d0c5f8be2a56e45ac2359eb57d7d28c7aa0ef07d330d68b2f098088967f682b786403e5325536c3ad3869db644769039abd89acbc8ba0396d55ad8f865920675eac724e0119f931c907dfdee813ef8c506fcbd9f2267bac07178447bb024943ac5e76ac3a7d1a2e17e03f451e7e081eee01b682eb50a3ec9e28ccf928fbf5c9e743d0a61cdd74cb1e63424e07bb50898dd8abac99aa07e6aac0eb09f6215cffa709d8f1ca8f5540972c13486764c6cd1ff558619ab8902ff3a43afc19e3357d80d8dca00921600ceec6b5ef5953144712d2d69ff90a88e090e767d6945e309aa66390757fd884555d2802e1c23e54a2f287aaec046087d2c5d1d45c2b9c0e6c2cc51583211945ad50a96d1ceaddac6c0eda8a7d9f24b66591eb24f1ae98e0aafd5b36e8868c1e171eb2eb9435a4a05ea9d064d18e61204f625d9f3106b6af7a9a5291680372bdc83cfc51e2bdcad342207ad355e80c5e4415dec4de54adfa3df21b1b342bd7f7d62d047b3a27db9fdf6742f627591a94c4631af44ba3cc64f946ef07de80e872af78d0ec4a273441221ad1d7701740db2ca615f143bfd519d3bfe889d63d82162f450118ab847b285a0b288d4ad93cedabd3735b747c2aaef63e1f042dfc261ad133bf71d84be14cd8a8ab40434ee986ffb94371e733190b01bba7682c13bd23a885c616f695a417e8be19369124026e9304c1e5e4cf97fcbb2985d75b851394fbb69cde9656a712cf1b2ba42c2a1321f14c6c77e7db52a20de369096121afdca465270183e8aa123546bea0ba12dbb7422f45a4c0afec490d1980b41d212e3ae15bad061b8677f0aa8c2c98fcee2a7ce74ae3762fd9126b528a07754bb5f6882b9dfb6c96ecf1b0d402cc352f7b53904cc35a026349dd96594f6cc427c57a8df6cfc0736a9381d7e5076943a3afe6cedb0b6e028d9ae522ebac42ed5fa33b00ae28f344316db00593b2b03d745a007174ffe1697551e0dc6fe02e45982344383801d775530d1af5db39c32bffc25301de45d6ed457b7c656d5e11977ce132519bac3588a4f1f200beeb2f94614799d026a583d3dc63c0f88d5d1fcd4b081c40e9f1b81df7b5d81275b9b1f34fd2ef9f7f9685c24653740eaf97b78a7ff003513389036a6052a39ca88f684bbef103f7975a71b611753aff3b47889cd020bf197c94c626f4d377b7a4934e9218d62ef7ff712e0470dbaa351c2d98c0a13706a16e840b2faff0bb282813a3ef34b7098a58b023950fb7c38a8f8851807d70217c9173eda167ed0a114560e3bb888ec43a10a01673a1843263cd5a135df43820a80cd93347cf1c44ee6846644e51b03199e9f2f86f6d1c0dff73bb8e77c7a01dbf1b2bb7b4a96a99ff35dc2fd0989767aad1259602d16390ba41d99db68ce0845f8be02ae233576db6246aeda97deea18a6c2b502aa9c6ad24606771c13f6109ee675a4f3415b7064ef75208247ca9182176b41d5fa8656ae245f931615f8bb17fead98154a856cc0b3a5e79f9bcd1beeb0244a20e24e564c322a5a636015f510dfa9dc09a8b2a0edf6c3c71da682d4d2c2e5883db5528582e0f6f5af478fc0d0445cb65c4964b6fe8071f1b2dcee2d8b345d948eb5ca2a9ceb2a5299982f817b6c58cd504d1de7ec91422ad2ca245b2c2fc565a27632d1e51a2c1d2bca0f505113e226842e1749f084f7ed87e412ebad88cf0844287b80f630308431411f9734add9fbd57704892856496d5e5232e0284beb25de7425f9c34c16545801a6cc190aa2cd0add5abecc493201899a8d81c8925653eea46cbf7c4bf6004dd6d436431cd1b3b60a3cb50136493b106dc169ec8deb17ebe39679725ea140df609d3ee3d92447e150a76c0fc08d9bad1095f322206538345c14f28915ed1d7bf16a411df91be3845a44946a6a2066617a9325db920231962d01bd10c2b91c7de8425c089ffdbc73b87fa9683898bf2be73c45c0bb8fc4fba1990dcaf63a664dd29b0c3bbb91b7997b349f2b4ca6c414804244251f30e20c076ab102224a73e87939a72307b4f08aeb04b4d4060455f58f0f27b92b81dd95367506c9877dfddf4f7e153bd05a6fc3e8e7cce644d915f8fd147a6f18f95fdcfd35fb47c4524b3e509af325a0752bdcfeafd91ef182d1ddf0bef5ff23c44a0015fb7e07d1988ee1e57fbdbb790c6e4da8773d7d4a9dae1c0a1ddd96f64f26c298c6b480ec2c9851287f7ee20f621ac3403e9301f6fd663423263a4de2455a5c08e92f893fb1429261bd0d092cae73ad45c39a5d5c3ef47293c43c0517291a9f4a088563f6642bec7b1bc40a00566b2ac9429ca4cadcdfa6e7a387d50adde506b06927824e1ff3b0c30149eda2c2add70138027fcb6e84edcbbcdf8bdbe453539623dbc33536ebb8b3211029d0c691047964144205d7f6d7b8056d81b5d657babae96f4295e0cc46e0d9d20ce9abdaaafab178ea5941aa002efcd4ff3e14ed93b0c5d23a9be77be22a23ca12bed9517c8b87234dbd78228dcd2ed3f310f504f3fc27b63747c3639dab5aef055a10b4ea8588cc420b7625d45c82b8b9723414107b479e496d71f1123608c98e884be50c1145cc1ad0164d2a4753288242217d73d2c7fe950c6ef733897a77ead45c5faab04d04d7c4ea071dd7a7c259a230e42263ea1fd81b5fe8e348e5d7bc4501e4b33132459c5d4f3115d9f8c30f3ab1e914de2800b72853a4d942feddebfe622b5562d2193f355d85b0d1f73bf5d962c2fff28259bf4b8cc9d8d2760c011791740c642e5d4dbce718fcf8bebc9451df0b486fa4969ee49b8575012c9e916adac4c5a970e96d8e879a3f8915b0f6060828c63154272496bcd73c789760a932fa721bf8c6a0eb7c5ca312a0e4e5d71cb924fa46fd94b5cde6485f1e85087c334e705a9a1172c70b61a7ec3228e469dd51e95cf95b38ce6838a34b6005b92c888ef5500d660657862570834456dd89d07666a70dae3e832ce1b9890a9cd8c033bc8cf2ecc488fd16e7e847c05b7066fb6979415555d22b5fa4c535537ed919cf831bb5459cec45bd112e9c741f8b97f9f77aa4c8d2a24ef1b1f5fe941b70654a4c51566132fad28e32cbd498192ab58347340718ed72e47f225a24ecb7aec657cdbd5d28d5569b95e1405ffcd03dc4c64349aba1e989e696c396b31928532d6e71d727f5a67a6f06a29b8e0a88e1ab7c12d837c80e0cae516b6ef50f07a6801098b0bee9a1dc00738f4ff22bb204fcbfbf118b560323e49d3a89252b41ac9bdf0e3202653e39694f331fb6afd511abec7013fcb1c8f49adec89b3a768af4a84e391fc7713805c61a72e49aa9b95ff6732b85183c62e0b5ceb4502a452097dfda2f3ab54cbdcdec9c305e31ea889ca49c38c55e077f83f86a74279b6540a25b3a6ab066875010740c09aa58723e74e6fec4f8bd7f6668e6d5c3cd48c493ac95e61d956e45703618527257addc8bfab3a015abddf527fcdd80df08185d169a7950ac299760bfad85f2ae265f58e00cbb13d62bae5b5a7773300b69eca9169194bba0af8770afefd8d8489dfbfa6cb611d7d88fa9adb32dffc77fab5fc717dd71ebe9e9bbde47905fdd2d0cb0fc850b72abe4a39391a45e3ec002eb8bab70cb80acc67066f9826b72f78700972e33bc90111855edbc07acccdaa79e1e82d5094ed601b4db138da251507b047ed23082cefec4f2eb45dbaeb485c7f48fc328a62fc0a9003ce02073c7e82a35bd3f2fc65117eafb629e1f1e5a5a739c626cc81846b5332223f7eec64d01784797800dc8ec5d8fcf46b386a1a3c394eddb7eee1d0314e76f155cfb216d7a3453803f6e142fe1bac6f6f7d8990f4e2793c520947bcedc5199796dfd741a6039d513d6a0570a94bc9337a4cd43c0f557d4c79a3efabaadd228236555a1182cfc103d4dce11abb8c172e3822e1e350c2cc91df7c60d53bdf0e7de448e53f92b8d160ab7f4c0c190686f3b45d4e5aa2a75e9b3c29b7f3ebe99d99b121e314cf083692e5913528e543ad692e0ca9a92dfa6633415668dc706632b83a69c7fae562f2cf5bb6fc3aa3245dea56ab21f0d850bb4128071975d3b3761362221989de7b8df678abc6ce837e0decb1fcda216e13b972c30a303b1752c1b0106a8d4683eb93aa64890978bf687d54c3c0f53cd93033fc82322a913664d5717e054c70796fb49b1cb7e4b58d908ed0ba6e9da591f0962b0fb1e80b13bcf83f9d98048a44e89fc902dbd217bf5c6cbcd65b1cc40a8e500b9df32ae3d5ce560fd638a4df8daa5b5e89a5842ce7336614f04d4e0978ed5a9595f74b2afdef0f3d2070f8d86f1ead570841ab85780e89534d67783eb2bd6ddadb2f6c1551b46853ba46bb1bd0503ad92861ac63aaed9ad7885ded27b8f24a91a85f08f765c0539eea2993755f52749bde98ca48f0b67c03b455279d0f8a6669c7bbc58b4d27a286462bc3f1ca7302cfae9704b4dcd1392781cbaa89ff4967c0b6a2762a4597022deb0b8cf338bd8e0084e64c3e2f65a4e96516bd313e320fadfa66d0dbe8e0c0b46720586c95942c84567b50f6482b97d6673afc3af7fceff27c8933404c924e9987a5a937f3b14713c2b440c4e4de2362524a4bcc54a0aaf421687871c9e56d0d4b83851cf8da05c28baf5135f28dda2e03e620d0927cd7ecea5b0b41fbd12ec22b8be63b5e07312ef82df77d0425b890f8cb0c940e6b5dcafeb5cc1f677aa1ac626d0842c95351bd628f4631dd1a764ab30a2dd8629204443fe57fb00919fbd5b5764e5f1f50d95da2b1c8239085270b10b1a8fbd8e2487efea0b6156fe988c868af48df967a85bb5a4280cf720346fc49d9831222ab5d7ced285cd67d6c4655611d481468f3c8bf4999a54feeb920baaa8270c24c36c057b3b4a2ad4e86a365c54ec60dba7dfbecf00b519b790cabf2787bc7a7a3d87a9ab6e3fa3cf6e665cbdb5b0d1fb93071f92ebbb4cdb9a7a2b11cae2dc1de6457bd68e5002cd1ecaadeba7c7121dcce78225363e28dee998dc1c0315fcba6f757cb38849bf058d803546322c8e07836d198bbae3e5f149f8ad662827b3d2545da6e1f08965e72eb57d67b9da0772f27f249716f315f4870f2bb44774c2e5df8637d855397bf48c10e70f80249fdb1a296d6e759a60073591a9191498db54f5a41cd52c6283177cbc10955b3d91320245a9ab447f23c64ee2c387d4cf7ce96831da87c81f74c1ab02490c5d1d745a584261b6f066f4f524a47d3b2f8cfe844069018a69fdfd7c82567b91890de2328bb8bcf130a2a633b9887f7766dab35c63ef61c2d04c173fc7e94350f658fcc41fb0aff71ec037ddf614c561f1024e3229eeb8b090401f6f58bdfba4dd4caa434e70e8ec496f3c46338fe0e4029953964a1c538ebb4567b52392be67d1d76f6068d43b427f9619f5f64d65f570338d6181db3eee9e4b5cfe797c42cb61963c0a089b3b6cc639b489f83c4b5a3ce958380d06224e60fbe175635e2bed09e43eb712b543a50601c1572e12450cad141ad51ce676e380a64953336d9646d475f41d4fda8df5b027dc3291c44663048770c92927ad65b7ec0bd3228df204c020af9015cde22a40c5f84b2e9be02915767c8769ea2313892f75ecaf7ea0551e5bfeb010cba6963a568e3ba859eceb3309298aabaf069814ced7660d93bc7652bd7a1e8269967c6edaa42ab4085a232317f3a008e11227c8675fad97c04494684da1dd5a3cfe975a7fab4e7984ffa1bee375fbbd950d3827ddc856cf8a65e57e0f75e4c48779160a26aec7b456a712dc717e1514e4f67565b4c9c3ebb42dc9afdb51d23751fa32d400eb9a8e07d2afcfb654be1a59d0008e0c6b89add47ad302705ce1628eadefd962ad609f335ef4efd37cd1b3b009c71f3cc7fd6b5b13d689bb18a24b53ef228c1611f7e192b97811ea1c84b4241143ec54e590f2cc1c108bfab9981e461f5e68003546c79db6b63a8a5d16d0dd39da7eb83d5559a4424bcac86278ea988f77c25e57f8ca6d155e89c0bdb6b9e1105af3539de8df2c7a53a355bd015edebbde2fab8487e15a668878525857ac4ee030c7509cdbe6229539fddd50f3e93b2db21e1e364376b4dc6a6a8b4dc6b9fd6e1b8494264b0860c3f5d01acbc96af3ec56d84448cb610e3f4d0a0b80ef9075ace3fcb3776cec0d99f315863097ad86f388f8fa6f009b765e8179f6f22b59055dbf7fcb592d971ac56e838367d138793d13c35a737df98c5ed097a33d831c2a8e5b933c59a40770b23143ff989e305d833039ae0746cf8c54920bbf5a5f16de6a5d0f1e6ce79396ab084f227276d5c9e9c5548ee7b28aa7acccb5ffbbbd691dc50f8a4b0de24ca115b1833756459659b3934dd0ed06c48c2f8c488921b9515b40735fbdec500ad3d88206f8e51df9d648aacaff11bac744cd86c007e6dbee2cf9ec5aab31fec45bb72e96ef4f31d345d3fdfed35d9755d860d1d7f8c997c362e5b728f464832b4d74fcb079796c331e87d4aee1bbed5788362411522ed448d34f0c2322b17bfeba1c68c47d5640660b6752fe343d3c8717e4dda20aac4e8b4137f4780a99d5c0db02225bb25c88fdeae9584226cf0738099350ceee7559aba1ea92a519cef9f66d5978e863f1d67fb11ce2622a975ee25de95e06d43e6b1517974b49a181488104c6735c28fb83340e7725cda5958ec1f5c748f76f16c4b77a920cc1e4d9d1df1d06c669b39ac5859f748ff4cafe8322ce0e65b64ac28cdd209b33c16dc7c3917f86b6edee645fb61903f6ba9286beb29b11c13b88043f592e3b1e53bd82059b13a65182aa763aca1a6a1de7234fa234636745ca88ff73190f7dd9f148403d7a946867ecfa8cf49b115e3b2702ffad170e1c93fe255b33667bbc7243bf75a4106a5c3fc61a47033fca3165038bfad913f2638ea3851b6ad06b736d96e8c8365d78dd9e99040cc462cf3b217e59d2c5fc3a104544606d4eb833cc490c3eef1e114fc6941a895d41b3d153fe281f05b6177a548d91fc386df29d4b2dbad94e78503594a768ce9e7ea198cc582ef64ae865e6d667b35b72b6a6a99faeac7d0e32bfe8c9e7079f5869fb575af1db99f183f2b6e746993984d152caa84a0798b3980b8287bb3dba3cd282de7a66d32f38caab115d285cdad6a6130a35ae4ef2101bb4535cc23ea0e0dcedc2ca1db4c01bf3ffd41f4748f2ac749abf69b63a63b8fcbf9a7528f836da3f3ee88c6324424c94cfc98653d5eae912a0e7532b7b28395fbe4eb738000502448e88fa3f676c5ee50a2e85366fb73b08fb42cfd949fd1651a9764cca71831ba3885ad1e8cabcb812f39f853ada5028afbef2e8ed0eea2c4b3175112732725a46e9b16cdeea63e4391b4b9091911c01731f35c561d25b7b9b1008f6bd14dcc585f24528d0d2cb3968077c29be9877c8a7fb28329659d2a0fcaf3a17c3f1ebdbee4536644222ac91efdfb67308a1a545ac13694a9e73b488b109e13ac6bd8097cc9908739fc6003df135fa96c46df274c2c2eda957a21fe93bd8129e6ae534d83789ffd35e7f420d2b0812a00144742572a92bceb119287485467b7d8c1b0cb6da537cd557530bab7dd830265a6f35247de25454ac006381c3a807668349c99894c6e58b2472ab54f3bc4ee97892696724c48b510947595bbe89c533fd916766affc3e6466382d5203739c4b98caac24983fb70ea60818473e1567499694dd0fbd0a0f8dccf3d80d0a4932784919f93bdf6f3d3ab6893cd78bd7ff9f124d28c1918fdf28daab419e90f9f40d7586ca1c7eafb693042136b1014066e602a992576ec2c01f08a2be13456d3cb940f76a8a64f9185d3e0244995155c80c64c7008bd91fa9b1792b359f606d2be1855c8badbdfc89468c8a740729cff045adffbb577eec46d87e71553c27560205a199a238ab1ced8688751ff65d1c9efbc4e030ed471dfb0155ebd2e3f3eb931d14460486d65373e42054b85c2b44847fb7f83e435587f9d00916d07978bd43003914eab6daa6ae93b5d82d5683f60f8338f23718276614c8c49f6e1336c894a5b489b916039b55a7caac123b46257af62f251ba8e4ca36584dee45f079851c1980a973fa265667f0ff7fb3af66bf3fa6ee5a550e7e9c9527c3b62a1ac555e8f687c77d558569a7671b12c88ea9f81a630f845d8e985778327e04ede687f0f8b03150946581434623ddd9b245eb06b5b48d130189c9c4efed2b23643d527c4a2d295c2497cdf827779c39306386e462a6148f8b1c7607e994ca608ded0d0675758fbd8fd6fe0294222e927440a4c01b3c40cdae0d81b5ece97b08e3ac3d14e76560f2a426817db04e4273cb9ea50219d159ef464a27aeba39e808435b52da85be1659e97b143c1a2d044a92576ad6848b1203545e22b9680226008c1e86991519174526b994171e7043b3ea6cddbc33137e8e8d26d16abd10a1d63bcad6b2085fe44ca5cf81579600e89df38ca6580cbd686cf42f42f54ca513c3a66e2dcc112655970000e3c1bcff3b9f05b255233f83053e9879e596d8a8ab35623bdc3c5c624a54d06b974761ce8a04dc4bb13c0d405b54324d3f22f5683fd89fd35f3db21fabfd2811f388a04ef445a0fcc9d3e11208a9ff33467a9de04ca0b6d6196e29725b0a52d75b9ce201ba8ece0b596b25e25596bd325c36960ee5938e980b5baeef4a1ee6de253626ce0a6934ca6d7398700205a449e5fe27c10e0bb482270ae23d59367804fcc6eec43b92799db5f13cc6b76398e2695b39a7747f9e0afff32851fb1ec2939cace4b73c191d659187b0a3ec77853f103ab27aaa22b60557610a190b787b28dc529ce3276bb6f2cbe6ca85ee38933f34f4605ba6c5b8bb52b45030f087c62d7d8a449964e89840fb2a78907088fd056682fbcd1c01b41698ac9312ffd9e0d1025a4121c027990db4d1bfbf8b8b762ba21eda485519559667f7ecdac7213040c9ba68de61924866a8cced899b13059844753c0c4a0bbaef1535a4e28fd2829b68574baabb096bdad2f5b5771e5055d4077164728c36521e83cb833f4b39aa6af3b033c18467d68f2ae32b53d76c34d8d4237e44c356e2478dd1476b69a156082e2e3b6dc03b809b0800d8412f5d8587ac9c7f4ec52766891693c973387377d442a0d3f935af54c315d140237b16b20d647674a845d1891d1ad7afecfc3e572107dd868dfdf744481c6e552254035b4657dd8ea12d378ab0aae20af5a85cc38ec769c90b47adcd7ced5e1ade0b673b862c69b57cd731eda7416e3d716e868d1cbb0138ea4ee7ad16d33033a736c3c9dbf10db8acc9aba3cfdc671536f6c93f78b7e7a68120cc5a2846c1dd5cf009dbda954345d9b8bbbc133b6a4865c762e7783ff1760b2334c398eed2dbe5624570fcfee67333815484a0b4ef4a13a6dcd4428b0cbe82d295934c92fe67c30ba53876c1205c037ffe498262e1c2cdbd5b554164403f05ea38aebaaeb15387c18151bd8316da0a6d6a5e4bd1d9275ea08c0990da568304eb8e16cba65e59cfe785bed68fb07d91c9ff35efd393ffa0a02db5ed32adf4231b00813b81234bdcb5ce78db8face3f24e1dd92f78e22bc37f8b94ccbd9e3681bf4173cb3823f05b8b94669234e1025fa28f395597b3645afcaa65012830a693241727781cc05eeec7af0eef78af5bce7e8908bf7e19938103993f7c31f22c0a1cc6b8956223cedd36db5723b9658bc8eec4ff048609af2f710d6929e0191de33761d6944069fdd2f812bec4893a2df4b32075232bc9d59480609196b7853565e4bc6cc41678494c70815a5f285fd5e986025e0dece6e6714e181e6c829e5312e4b3f21101c7e46151661498094543f556dfcefa22240f4fffdb836ac859e60f9efd46127b7997980cbf598299607482e39811158819b839787b77559199df4dcb3a0b694e71e1c6897b6b42cb613af1bb17cfeaa08f2ce732aff5adcc206a54eaf33e9b80270cb8d5e98d63dbd49f2879cfc190b34267299be244642488280e26cf3e00ac789d9d4d87082910f36d9156e5e0b914545be331be86b2bf63d3c2b3ef3b18706f8ec7fc658f51be106416406af50bddcfaa586488e2266d5b3f76e60fc6e0a6195c6d935ef114e5e7de436cd2e5aeaf5411cdb1b14ae8ee4ac36d393aafc80d0f3e55ab1bbfdb22ccc6dfe084329e5c2ccbbaa57a35c4671e6dbe959c27bf3605a9568bb47f40502fdb83403d71c9bbabf25c177ec069b2def06cf41177699e91f804ec52ef900e4eebb1a4b3cbc18ee0aea37b61c2af1f5f3b0dc472d25afe746bf7f7d7f6793296b92a9792a61457fbced9a3f5cbb1fd35c4161060f03f0c413f3d85055d5509236a976460dfc844f05b500f5501a2ba9a4eceadb33f5129ab2b86f9dcafc45ebe5fbaf2f5e6bdb5e27cb75fa10b345623e3fd6dcf49f98507a0e5e8d74c15931fdda7802a89edd5060188c3e82e79c343d6b1162aa01561d7206ce5ee0f3dd2a67689d4a08d6e3513e6856f4b31a8547cf65724c0391bfd78d93a8609a0a234e1247400aae367f64cc95654cd61556ae996cf925659dd95e7defa070fa3e270f719c796f475d5c11a9953edca36a6b567e4ce87d25d99bcf3662756768f7217fb21312a5cf6f6e0a52c1c430d501ed9a4b9258060fbf4900d4ed8a9c2e94d3eeffc475e1b9036f23985690e4f044943a431b644ed6c447430378314a4adca2b4c0a6ddfb2831c612f077a396ca14b6100d3d2044ea2fb445f79f9083b7d57ce85507da1b94bde6208d4e0d1bfbb54d6800208530730067c42d54144431cac0e9e400e094e662b2b30e3b41164a4a2d23f918da98525d4d4e4f3a338b11dda7813b28e437048222f75600979281d2975289af7b3ee5acdc3aa084927a603421bd943c1782276ab1cdc2f1c7340c3c2da422964563406b1d4bf481822c14412d8c0732e4f721df9c4c530c62a48b95b1377b45288efe84d666107af5481bfc5616eadea43df08647771d087f04d5cf6c881a266c2d85b03bd47d3215631f1a0d9a0883c0bd1ad939fc27487cc969e3e0ad2c4e858193240e8969a77c39c7c6bebf99869fc5c68fd948a7b66a22390f006a7ee93cf133a6b18ec87cbd51fe4a431e5a16bce81ac5ee6c8b0b06748993de337b8d9c5e676e11fdadf09ad461bd79a12aa3e620c7aadf1171f85c2622a379a93907d4dd0b84386dd60f30721a76af00968fe6de4ddfc5eb7e3cdcf5965a6c4416e8e5f90ccf4ee794a7b6865f0d0bcc996b99eb7ddc7309ecb6a1256aa45eb011460a253dcb1539216309f2c4133e0e8abe1e9bc49e4d08ef964c539b49026ac770fadfad88b204189b709e08b60029d16a6e4762c189dbd1a89a6995447ecabb07e91af7472b096a9735529c75e7f35038be785d1784dc07f07f98e146e2cf6a852bf5830712df74160c8457d4cff3020e76383b5865c72649b8cab4bebfe1f7ea73deb6e4dbfc3e8c67ba022a94532dc5471bd6d3fb6573ee23817c0d9dd403cdf40ebe0da5b0b90d924e1781bdd9cbae5ada6efa2d527017bea9490b56d0ad92555dd2cf2bb3b6c2466375520b08b15e98d692c657a78d9f63a64d6b04bdea6d89b5c9d0a89ddb4d1dbfae42154d1071fb15401bb716f01f702c80af29469a631bd18f260052249c9f28b4108cee52f94758a08f6c789a2ff5855c1838f576a5bea2ece32df65cdd349a8a6bfe023403b3b66ff2e06ab131b7362357c411b806d55f0eb5d745c2ca2ae00da73b78370dde7b1788c04328b7507cb19e7436353521ccf8f8c2e2e85aca1004d2f9cba04ef31702fe0fbb7ba142c333564220fa18362aea024d65d302cf0d3bc1b8f52388eb262dc82d585d69f68ff78f366b181e98c05231d7f1f0e4a1d53ed5f8f59c83202a89b8fa7c3fe0122e89e51b8abf39c4504861f9aeb529a6c1e666256a5e13578f6f367af27728221c2a3dd1f83436836cd1633424004fe756b8053b68072bd442eff507f3fd6c447c32af84de00c8b005059d5774698d8af308b0a8a76de811c95ab8fdaa7f74a0484e7fb43547590539d25a23d5b5bb47737e30cba7838514ee11e284c4e417c2a6ee595cbf57e795653c7647a29a55dc3a1af9a09269c9644c921c57ac3836e0ff437fe6b4db8ec010bd8101c8b829d21ae3da884fc1f3305c234d62aec00e7bbad5638573855aa48bca484c0936fbab85af747d3d6220c97ce11b61b99dd8f23f7d7924ad5f3d85addf6ec60d077929892d1a65b52c9dd1459126bd35640e9be8445c022499c46e01bb91544a11a65770d0c6ad6afa40debc37c5735794213371c9b96d4eb93828ffbf458b3ca90088306c11c58f0a708d9bbbd84b4f22ae332b666153efd605513bea815ca8b2fd5b9bcdd9fb22e696cba85f2b1999ff9b83aea58a2a1b2a17253cdc9127a9cc9e9e078ed239dd69981b2a4043d8e5d61a15cf3f2d56b2657128e5346292e3b7810c6ea46b34b92de3ce6fdf1326e0dff6cf08c861aa5da587df1f87adc6127117cb643260d091524edb053065912c7f43675e0ae20d1db4d02bd3012b9ffa7bd236cce8c02ad099be616b33741f068e92e3f56c42ee13e71887495092a3fc3a1977d5a8f9585c7650adebf3e848935f144f0537557a9a3e9a04a43046ef889e25a116473699d62cb378576a9db3a2acf62801befe5cc0707fcf5c707b2f7e065a6609f9a45a9e73b94218a9146594768cccb055faf2a189ce3fac6a3df37249e23f0ee11889881aa5d80e8e9c14c252720591d31fdd246195f9bb07ce3608fc93193a12fec3cb6f43f3f165eab09b7292fc49edde8690da0a56753ddfba9b7679ae72fd4ee132a84f6ad93ba15cddd506a16f7517c812655a5c9767126ae5a98775aad5c3b7a95fa39b51018dcc6ac9be333e4e761778a2cfd888f2b0d8494ac86e478070029afbdb3883f4f955a618dd76322bd8554e62e1285b638aab211e8fa3cf32dfb396ee14867f269bf9769f271b5ef4b06d66224f5f0cee550b753c7bd4ba48a08d88adffca872606f02a032ff25c76f5759061d9171f1579fa1e9b1fcc0c49563aa360724ef64ff836a40e55736bdbe6bf6cf294e2c8abfe0cacf5e9e48162ed5f273dff6ea85f5fa657cecb0c5bfe97a46826128298a14a57562576cad87bc291974c761bd9318b9370f6eff53a991da3c317a322bb893246825d5522d9cda8a5cb062173a98c04d968e1959ac915bbf361d68dc1a114205cff47291f140c5bc6f2a3e6369efb27838b48b6921a8d3ef29dbb183f5f830558a1682e5a1b449639f58e1b5f6dce8bbd8208aff939612ae43ddadca8c9592cfef1a17a9c3873797c81744212cf9b595a40f2a182a408ff7bcb565369204fea38d7501de30bb32b65c667458c5a3af9bf96f2498b9d69326b3a264830a9fcdef7b4843f03aa733fdc44d4cd6239eb1a48eb8e8887666460a1a4ad118322fa237918ac966dde1f107cefd8214b45524e24d773eeca1df98e8403106f87d0814e0b2cfc6260150329e5621426216e2098e2e53829afaf8ea7ddc95ab8c4c2ac766adb4b0ae62e6619b09cad074e4304384b7d569ea2e8e4efff80202d520ff5ed45107b5d7d71224fe7e5f7039daf8e4089490460b0ecb51f19e8353b80e1db117977b0b814d1001b32ce57460f4fb19713863cb1112441bd7106df28b7945ef65f734cec81f70d7a21abe42a09d0a345e4bb36ae9578fb53ba4c098d56bb2f709a957a09594db78e4c0c4c61c9700482d86eccd5b0cd6f40f6a6c33ce6d7834029a671704aeae0055c5319d35341e2ba4979b820c59f9d53ad07443f57155719b6c0804b0407aabb893ec5aef5c8f728d62864fcbd79b169e5fe56bf687e0bbb9e1d378235dbc5a8484eb85936769f84dca237ec89143095d9eeed273359d3ce13c54e194a797c0d6116266014f61cd90e7a5e08c6a2640b9f01fb6024a80550be0c1fc8cfbcf9761a7d8a7f23591b52fe158f4ba7135b484d336661a7015acc20a7b79870799aaedfbf4cacc18cafcbbc876237eb62afb8d957797f1fa831daf82f961b0b422c3c06a1422f587a709f1adfd8fb9a2ffc1a711bf2303e71e48f019e25702c446592b90e19446251d4ee3cfb92e30d0b961109d8415b452f4315b7e8d116473e47276ed2eb99c007e941b99dd2efd37bb3bf554d21268dca46ff0acb507a8299274099014a4fca3c5d1c3ecf9c069e1ed11af49cb2e6c699df3fa9608a24980e464f1c0fc5c5cb1768c741ac144047c55fabc3ae13f08534673d456e52d5544a9eb9387cac42828ed6de7f1c5ded155c2742d9f65bde6a3c9adac044a54947b1079237aecb56da23e018eef12f0f82a1144f546c8f23054a76290617073a651026086466248d7eb94fbb743602e354a8761b62c47eeeca14786803ef13822e340734e0ec0319c97551a44ee6ddf2ecf605ad554fcf55f092a4ed703a86b79928b9f657e4f42e53f25091a5f0fa09259954701db4c981c4c67133263d8de02fa77c07a7d1e765a7fa26330131860261fd41adf151763b0d6ed8e7e0deffdb53a8519070ceaa9ed00393c810194d6c9d6f26e125aa06400dca5349a8716c6b0468cf08c9045c698a7d6eeec1fcb9a5246d403456a66f2d204f9456a51857607c24f09ab21e5caaa81acc4975b5e77bafe4a24c6089fc6f3e32ec2f998b6a4733562568d3a1d29740877d299e353fb6a3a6f21811407c75dbc9a8872073cdd476d9f152689104ef8247689b34d7cdfcd3053e83a684f9d2617fc3a66a4ad21f1cfa3e3b137ac5cc7ed3e2d8e639b60a7615558a2aad65791cd8adb31c50b0ba43d7aa0f87bb19dc451a7f15310bd5b04c84bccf4c02c22566cbaedb8bbdc755a241f17ed7e3168b73fd993c01cc9990492ea08122f116953e85b19b89d8a43de114b66a09b86875b20602e0fa2d791ea92f52c80f6d5d6af455ed8cb405c2c321005b45dde79ede3f3500264e51a2f0059dc88bc2671e5df3e3fe320c1a457bd7a894804b5ef7e5dce177e16f6e8aa148e84af8fc0cb281f5dda2f35258ae4c7688fee7fc3d2fec2713f5455e659af4cff07b80ace74cd367b2ac96b7d80b45a43965d2a0950cb058781136c4cbf84299bfa816d161e78eb8f33fd8daa361e92e45fc5fde11fe7eedd7cc76a781228bbf834f5e0b91d038afeb7d3b4ba47deabec1b3a021993daa789a9ebeb2f3856e43ec1995f207a24f865b0575e27f5b5f5179dfd8cced2070073dd08c76509f854c50e6468cb3b7fc72442869209b1f6a91a0325f40a712a924f61239e9bc31de3e6676dd2b402cea80774ebe803f14e56d243e8fb9c92154b57e599931c6a279e5fcc2e6f9fbc2405e243d6521b3b6174c34d62ff29d0025438247c35058ff9360116ac366e86bf1bdb836c89c9454183b704ee0566d09dc9d763d541f763e83b383dc21ed3d5c098411e15404a147fbb24a5aac92d04ca030122c0b03bfddc9a888292e8421b7cff1b05367a63f57282dcceb133c10e08ae46918199c3a1952ed8946a31df1b2e64f046a5f676c8ba9815e32e47a5de4dc97094788d001ba06b4f3cf1bfbe9fc3b287a530b77540b714bf0fa0363d265c7366c548ec6ec51b592050fcd6d184dc7801417c1dc3f8f1ec5fbef01d522aece51e76348291797bf13b10e63bdcd2b6ae3e1e87338aadb853a6aad7ea415f96ea1e05e450da16839f42b72a5dc82848d89b1088856f8c386728c646daee6988d4ce173595396ef0174ecb65b65f4f8806083daf3c00979cbbf775ed4eddeb4d0189ac5d1a5419deda771df1753385a98f401b17f34179fc9d1d91c8c16779cd1a37ba17933a5ea5c1dc8b2755a900df41d51a5f04229dbcd7e619f7fab48a442a9b968ec98905886bdc15463147fb468d361bc1a3a44370e8ecae4e7b1391f08d588a1f23c068cb28d475797477940ef73d7f016fc0e567008be6b4dfd8da54aed6e23a280fa6552dfb53bc66a8aaf70e84e215d2f88997edaf29169d5c8e39d8fc5810935980382cf9c2b7dadc1e78ff8d5ada558b5c6c3942fb742d8ccf24ffd842642b520f16f0a7f78831a7d72344b08b2a418037ea38f859bcc22b51af6f4956d88a0225ae189b698a13d1361db3206bfb750fb04dbbb9a32133d43b63116f3daace3c1cac8c9524910b1d9551b89e91efc35e2eae9ae9aff0374d24b70d3189559c3ab9ad07786a222c0498cf70a4e3ece182feb6998a99be70fcce27ddf685fa0733d4b29e840b07bd3a632c69cfcb00b64505c6f02c7cf1c18bddb383e7ac7de2232f7de7f040616f9a852c11180ab5026c76b1ade316c0b720c5ad023fa69d865021c2a34a1146fbf258c322c4e7b3a39b11a35762a8ffd3547b38a9f0ebe4678d25e30fa1051043deb194c03b9a067e0b3f6719a44ac10597a72fc17ef89bc3ab2bb75c8f5e317e70595957d9565b8a987841df0fa33b3e4918dba55c350699e9660a747804611550eea44db6cfa2f9cbb5e59525a0720066b21cf33bccf56cde04fa5b2912b2df16534847ba29bf976ebc073c5adb0e7abee3cf768cd3d111b5c69f30c0c4622d1191a4a409b1cb0d8e86c7373ac4199a0f50b4033a61703f1935c2dc2a8fef1ae89c41955589d1536c64094511723baee73a6fc4995663b2252c697d2a72f7060e04cb5d1c55250d55b1810e6ebc1399e6e8cd25cada55adf0de48a9d72ab34885d015756511f22f3b6c49c1f925563780936d8b7c276c770704daf2210a348a46b1eef9a5896b80b142a730962f698cf1b8cecd3a3dd7f3f1c13d22d007dc4fd4d7e6ab98fb76cd0a02b7544c0af261d84acc51300fedf7f8623d0da92e32de437af28c96cbbf07bc1b6b592eaf46b4b983082144a9e4436825aa63b82dd8046de2293cdd8d9c8254d8a16849fa85780e4e65b61f38cf19f435db97b90cfc6362923d1e9e49f07766477846ab6e4ef9fba4281d100ab44521e829806efecceb3c04e17ea10a848315ac8e246d7533652282223004e9e93da7ac17632c8680909fdaf98af40232ad66164981747d11ecbef4a992720b3f2c6150cb49345a0e26a9c1121c4e4522d00d13061fc81d40d18f07c3c0de722825155ee54b782452fc774c28cea54d03c09fe984e080f0e675466a3362524c60b2705622e45faafa3b4659b2e6858b7df61c14e01567c3b4070c94e05614f75e81b6402decb003e70cfec699303bb72ef4fbe37abe3964a9194af185cb40f4252dd0b4f298f773cedf38b65790805270340d6a92b2ed4fd414c1f5500fc8d722a4ff4f0724fbf7bd47a0628228c2cc424376f2d91cdc3b9e19ddd7f94d7c0918be0afc557c141dcefe4a15b2acef477de1a02434557e8f379c841126a0f77ef95f129ecb83a1982d9239d080fb4c45d33f4ea89cf097d6cdc5526d5698f07fe704afddd43c68823e838d2eec02ea3fb8f71e224ef7a9e7118f1c251780d7eb2941ae4f701f8f4c6307509a64604f05720e3bdd6c3adf239d481ebb4f8a83bf5ca3e2730fbd15cb78bf9434a9aaad3ddf16e1a3759d6024ada1699bbd4b14bb8c8ad10513f6fdc3201e8c04978cea72e31359a610482a3da7c8fa9d1bf0fdca5673564e28b41d2654491b4f0b61245c3c087ccd6279ed5647b9ba7dff74d582c4697a4538589ba4c650620b4b8c62c6fecd3f8a96bbe4bb134c8b3223d99ddeb4492b95051747e22e8c91ccb63ce87a6b0b9b0431ce2b4bad9d9126bb95da607f977433164338ebcccad094f8e9959fd31a3b52abe694fc0a5666ebe9344f70dfa6ca148c22efcfd82191dfbaa88677af6e2089d7ed77f2241eeaa18391b227f2906f737e3d2eb5c90a865c929a1422c5a32cb4441c45692d5a43c1d85e6b775ded118c529908a8f32bbec584bece452a76efe0574f5c2b6e717a9e5ae94ea2e968519916b0561f14089ee8b6a10ca4b9485da94d7c3de0273361dc7604ea6c465da8b38c433d724927ee690fb72ac3f96268e35cb0a4afd7dd378433ea9ffdcb557ff65f8e80d5c3973c281179df1627d011490b19bad2a03f3cd39d705045ec85761c77fab74f174d222a51e3e7778ffacee1e9de3f251a68e7e829d144f661fbcb2dc1184af2543101392c397432581f73de49483fa54aa889884c3a3f73a659ef443ec10b7bf4eea52cfb4205bc4d91191d114938aab83987f2e5cf57846331b094af37f1ed647ac24af26ea38f3e562d53e586ed22c1b0955530cd3ca4486f853a6ee2e899fcd08a48c6f3a7c3e02f3c543f8f3eb27c29c8674d9fae0b29c7da69c30aa3bd7be3bc04d08bb3a8ba4b4c157941b93c5e9c1697bb8bb4b4b3130fb61af55db9958a294c25eaa659dd6daebdd005d983748ef51de57efff7d1ba91925a67ac640e25fd46828d2647276a159bdf25bd26a2271f1d0c240178df4fb29793f2562b3d20db16e707a649177d87f22c2ec1022265e0798c2a28f3b382a0af89bde7708cb948d9429ad59cb143595b461e0771b712b6a983589aeea3b2ae29fb8aa31693b759e046605b857a4984889fe897b914dcee5b53fd699c701d7e92303f2bd60dcd2d8d4c7d75c899a2a04dc273444b096e5bf3d8c46043d8ae5f1ea4f791f2ce7c147169eb4d07e5953d142c6bd6b48ed5c435702afef164a0384b006f9a374670f2091370818bfbfbdc30992ff9e65fc0b21fe20e0f6344d6003d47a1e195ee6ae16c3e9762343763c86fc05e634dfe149823335080c00d2547cc7f867bcd6e896e7563b4910318879921c1a28ae0408db08bf09ffa98867a270f38ff4fe92f9135fb308b4aac257459443f36cbb15a05754d2bdd8480217041c5dda035d579906e6eeaa72d53a195a24be4285a62c47d1e6fd4ce6ff86d49ee25b21b05c4a15b614ac5fd003918ae04f42718df2a6eb6ee99195776967191ae89109d62d04e4a2e90904ee27009ad8d5cf7a0ba60741968ccc90d67a18085ca2237169c2aa90e4ae1e8f14eec956d052cd075dbb2cb5f656286753084089640a825ee36ec3e686313fe98b9f002eb568baecfe02e76c0992ecc568f88935e254c6fb6390517d67991f661e8482188cd95c4fda083308a896eb86cf57232a77a53b1d70dd49be442873434da16e6469665819c0e71ca88b7bd410938caeb73313cb299a7df1412503ecbf217d34ebd9230c25e316d14d18805705b1d33e0ba67a6d5cc30ae600170f1723f1fb19ebe6e098738f104e522833f69cd71caeee784f83ef7ad4fbc79e10e329805a6ff777c62e1599df56a687d0a60a54810a77a216fc10f2abdc20de773865018d7097c4ff14b3b1a190d7fc56b3ee2bf3e6893b971d51b9b8a683046441934b6c2ab0e8f0ce337877c4325f989901ee83ebbc4613add681acd0575715650122a4c042819d629902f4ca38d2e0131354740d1aeae5048d62b67284e74b7a798ee57559396e1963d8eb246edaae0c5eb80338d68cc77faa352995abfd9e369aca7044ee2fbfc65f6187239cad9f9bd1fe3873ed45aad93eb0e0c5d62cacfed7dd9d6fc483f83d4d79b5d0e8985e195a55f51cf2a8fa6e930d2e46a1c27242967f2609dab4941ac58652e4c506a48ee1473272ac3e75d458ca114a82d75ffe0b22702fe3a8836d51955efa2112c394e9a2122f49e78ee7bf311ab2a4cf7c1de11a41a0cd88a6b277d0e4511aae791e76e5224a1fc659432350038101643983825ad3d080113a92abfc7534b9ee39f288c23c158086a907f43043172861c62cbfdec93ec04fc93164bdcdf565ed3b5d2ba24f1675c29ebc03f5874602cd770cd4a8a178ab845d10fb81819bce7a0033154209acfd317bb7cdabea0f9fe2e56178b2becbd82f9fb0d949584b073ffea7fa678668131eae5a8b21cce2a1afc1e35f3b2eab4a40be5d41c439dacafe744fd2a850ce60b637e53b6d53d35a02b8b1f9273fb5b6ab1a3d043883a684f79c3a3d8a3b12df71c1deddbfd3097471d612449b4195f5ca541195e4e3c30adcbf59caffcdecf5362849556bb77e2ddede37ac6027275e28db3eea05dfbbf0473b6988474cf74458af64dc39204460c2a6e51ca4595e6a0a18ad79556a74da3488de78ea7658219fa6039f5d4ceda639977f9dab3677e8f7695a69bbc23482476507fa1de8c190f6724fc17ccaba1410bb129afbe6e44827853e8e265af9f7e4653a5c8321b5126f1d9692ea605887a023ee4fdde795de06194ecf9c91faefdc336ee927e3849dafc000411baaf61e605222d5e0c4daef119aa5d04f6a7940d33111d8d9ed7c26085d70c7c17507f8dbc98e8198dc099ad7a7ec614e99dda74ccc939b66ac9bc52ee9983837d1fb7171a05ed138099d012aec13bc6b33c6533b795c9094acf2956cba0e9eca78e9ffe778d0b568e972f2c92417a7e050041890c35d4882b696af9d8c1237229f0ce9ef62c6c944b2b14be10495daafe626a32004013fb5e1b0e57cbbc960c21a873ab32138add9048d62b758ad97d715c209e4963495cbf63eab1384813b9a3d627e80e388b4000340ffe4b95048beca1cdf0fe566c2aab7862bed85a9ff4e35bdcf7b454dbf93031b1d24497c7f36be7a3f636879154249019c7143c9b39a995db55ec8582564fc715da379cd7b0e37468ce24f0ec32677539db3faaa7d7dba6d1868a4767fbf33a3ea59db3501ddb296d801e3f6e924f160511b4203727c70dd41600a444381cd0f2fa9d7112dfc755d52de6e1e7e385304b0bf58629cdd42a26374f0c92faf76049fb9a7ad0efb3b4bc89666f0f6ea34e111e74350e1064e5378e6ab7a5e4e7290ab8e3884648f8939b0ad04088660938b7d0e22e73adc0d4b5b660c6777718b9bbc065f5915b8e40aff54930973a65e8a4021b563704d170609a79bbf9184c0a6cd5c7d53901b8cc830305a1ca3a40be9ea8781b932ed19db3606856073f2621dd9001033234e0188d608207a90c2348ea25fc0c25e5679b66da75f4e043391aca4794b542917dcd1d550eba84520c8e67e86b9dc77c4d54f32fb3a236a865b1ebca6c5fe24f2586059dc0b4dbe191319929f8bb1272682353596ce9607661c3d1b4d596fc71636ffc6223dbd8fa9f638644e91f3c0e8c5d3964f14f63a4e8df835e55ad67717eb33a54787d451698e18c54d6e2a85e55fcaa00fe6477c9b55096cd5c30668bce02f841d805b390d54590a44ae38123888494122da7fdcbaa7cf845e1fd9046744cc16101cf22d188f80b835ed3978355b45f04d36685ef043da75b16329d3e2aa3c41a38b03c2360fdab29e3de9e35638b5ca27c5aad9011082ad2d9f88049446dfb86b9fa7770e905ecccf43c29b1270f311988273aa5f4ff8a225665b7ca41de2ec00d3bd4199e0aec13c3a91888bbc7cc131f1acb1b3178c5fe0ed9be7a202c34ed2cfde9e341903c1e8438e4647a8e70525d3101c7f795cfaf6d5ea3d64e5bf0d1904d5dbd84d72124e57183abfd3b70590cbe3901322d1b93283780ab998ce6182b62e96030f64a06baebcbc949c11a52a5b408f10a66d6204889e9e540714ed05c56ad93c28dc1ad916a53e3b61b3689dfdcd301188713e97ceaf2e639defc1d83ffc66d944117424c12ee22249b846032f759bdcef07117985a70bb556544cc9cf0d7a9cf8d96be30ccbb547bc6fde2fbb974141c8e22568e65521b4f81bbc6753131fb9e7f731fa76f86d3b621ae583370e67c69a76fac1308fbb07d5438bd530f31b9595598c3b654e4a76a69019e5a75292bb1bb5ae8dedc65ada01704eb26bacc775feecb064f26d533bf8ec05bb7c25b6ff1e4f793a5fab337ff8138230932145a841f81ac0c92cdfae3d646621ed95cf07d9488c2610ff062d3ff11c383139ed1358a43914d23db2a049de10ea1fe6968279e02263268717422e2c57417b6afabc56f8af88ec84d05ea71f77fb51d49e073d44a216cc26545a14f5fcad179650f8bff15cebb016e86c4a7a4d6203254978e6da283626a7fbd530489f3e6b366655904280fd2be8870e78e9ec2734fcd517904101fcc9ba0cc0897b0aea463af6e1ae68b8d330ae8895f784da76ac774258e0f45067c49d3b5146174ad33a887ee2fb7269b6ebe86242bccb839ae7e1c924f1d80bcdea2ab98b73404492be02de00821805acc238cfa27276372c2ce097d9b6d91c344d7e49967971f221dfa6170a51dbc1919b6008090ab90835a9c5afec5c1de00d10cf7edf28eb4de393278e522c408cedf5df2ec5a3d962051f67e725d5ee940ab7f55176b47caf2aaf56d228ed2aa588653ac85c053c1045dccbdd7240002499bf22749b2dff27b3d24a23a39eb682261251575d9aa8357a6aadb73945032014a3fd50b670e797f5b4a858661e123d8c364f43e421e5280dd9efd92b371587353facafa65534bc07821eec4bfc66158a0635ec9a2083c830ffd68bde469a7567426ffabea0d45d8100658debfd9b79db72396db0858c6ba49886830a72a7b881c2396400f299385c50efaf630360c7fdcb6da588aa7ed6dcbdfd64018461d5f1170a6e61e912</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> PA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PA3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PA3.2</title>
      <link href="/2021/11/06/PA3-2/"/>
      <url>/2021/11/06/PA3-2/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f801386b83128765a227ac0b0a0a860fffa55ccaf26864be01b31798a4a3025c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> PA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PA3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PA3.1</title>
      <link href="/2021/11/06/PA3-1/"/>
      <url>/2021/11/06/PA3-1/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0dd5bdb20f81a76279b4c8837e0aa65df6c506f2d9e1f0e5442f04a1d9a0e2d5"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> PA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PA3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lab2-内联汇编</title>
      <link href="/2021/10/30/Lab2/"/>
      <url>/2021/10/30/Lab2/</url>
      
        <content type="html"><![CDATA[<h3 id="1-asm-add"><a href="#1-asm-add" class="headerlink" title="$(1)asm_{-}add$"></a>$(1)asm_{-}add$</h3><p>“$add[q|l|w|b] \ A, \ B$”将$A+B$送至$A$.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int64_t</span> <span class="title">asm_add</span><span class="params">(<span class="keyword">int64_t</span> a, <span class="keyword">int64_t</span> b)</span> </span>&#123;</span><br><span class="line">__asm__(</span><br><span class="line"><span class="string">&quot;addq %[b], %[a]\n&quot;</span></span><br><span class="line">:[a] <span class="string">&quot;+r&quot;</span>(a)</span><br><span class="line">:[b] <span class="string">&quot;r&quot;</span>(b)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2-asm-popcnt"><a href="#2-asm-popcnt" class="headerlink" title="$(2)asm_{-}popcnt$"></a>$(2)asm_{-}popcnt$</h3><p>$asm_{-}popcnt(x)$的作用是计算$x$的二进制中含 $1$的数目.<br>思路比较简单,$x$不断逻辑右移直到$x = 0$, 右移$shr[q|l|w|b]$指令每次右移指定位数, 比如在这里指定$shamt=1$, <font color="red">操作数的最低位将会移动到</font>$CF$, 根据$CF==1$, 我们可以决定计数器$cnt$是否加一.<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">asm_popcnt</span><span class="params">(<span class="keyword">uint64_t</span> x)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">  __asm__(</span><br><span class="line">    <span class="string">&quot;L1:&quot;</span></span><br><span class="line">    <span class="string">&quot;testq %[x], %[x] #判断x是否为零, 如果为零,跳转到end\n&quot;</span></span><br><span class="line">    <span class="string">&quot;jz end\n&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;shrq $1, %[x] #右移1位,将最低位送到CF\n&quot;</span></span><br><span class="line">    <span class="string">&quot;jnc not_to_cnt #如果CF为零, cnt不加1\n&quot;</span></span><br><span class="line">    <span class="string">&quot;incl %[cnt] #cnt加1\n &quot;</span></span><br><span class="line">    <span class="string">&quot;not_to_cnt:\n&quot;</span></span><br><span class="line">    <span class="string">&quot;jmp L1  #跳转到L1继续进行判断\n&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;end:\n&quot;</span></span><br><span class="line">    : [x] <span class="string">&quot;+r&quot;</span>(x), [cnt] <span class="string">&quot;+r&quot;</span>(cnt)</span><br><span class="line">    );</span><br><span class="line">  <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><div class="note info"><p>$test$指令将两个操作数相”与”,不改变原操作数,根据结果设置条件标志.比如要知道寄存器$\%eax==0$, 只需<code>testl %eax, %eax</code>, 然后再用<code>jz/jnz</code>跳转到指定的$label$<br>其它条件转移指令还有<code>jc/jnc, je/jne</code>等,可以查阅”计算机系统基础”的$Page111表3.6$</p></div><br>不少指令都会影响到$Flags$,如$add, sub, cmp,$移位指令.不同指令影响的标志位不完全一样.<br>将上面的代码的<code>testq %[x], %[x]</code>改为<code>cmpq $0, %[x]</code>具有一样的效果.也可以考虑$and$指令获取$x$的最低位.<br><div class="note default"><p>考虑用内联汇编实现$int64_{-}t \ max(int64_{-}t\ x, int64_{-}t\ y)$以及$\sum_{i=1}^{100}i$</p></div><br>$max$函数:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int64_t</span> <span class="title">max</span><span class="params">(<span class="keyword">int64_t</span> x, <span class="keyword">int64_t</span> y)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int64_t</span> gre = <span class="number">0</span>;</span><br><span class="line">  __asm__(</span><br><span class="line">    <span class="string">&quot;cmpq %[y], %[x] # x - y并且获得标志位信息\n&quot;</span></span><br><span class="line">    <span class="string">&quot;jge x_greater # x &gt;= y\n&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;movq %[y], %[gre] #y更大\n&quot;</span></span><br><span class="line">    <span class="string">&quot;jmp end\n&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;x_greater:\n&quot;</span></span><br><span class="line">    <span class="string">&quot;movq %[x], %[gre]\n&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;end:\n&quot;</span></span><br><span class="line"></span><br><span class="line">    : [gre] <span class="string">&quot;=r&quot;</span>(gre)</span><br><span class="line">    : [x] <span class="string">&quot;r&quot;</span>(x), [y] <span class="string">&quot;r&quot;</span>(y)</span><br><span class="line">    );</span><br><span class="line">  <span class="keyword">return</span> gre; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>$\sum_{i=1}^{100}i$函数<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sum</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  __asm__(</span><br><span class="line">    <span class="string">&quot;movl $1, %%edx #作为变量 i \n&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">&quot;l1: \n&quot;</span></span><br><span class="line">    <span class="string">&quot;cmpl $100, %%edx #跟100比较, edx - 100获得标志位\n&quot;</span></span><br><span class="line">    <span class="string">&quot;jle l2 # edx &lt;= 100\n&quot;</span></span><br><span class="line">    <span class="string">&quot;jmp end #edx &gt;100 直接结束\n&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;l2:\n&quot;</span></span><br><span class="line">    <span class="string">&quot;addl %%edx, %%eax # eax += i\n&quot;</span></span><br><span class="line">    <span class="string">&quot;incl %%edx #edx += 1\n&quot;</span></span><br><span class="line">    <span class="string">&quot;jmp l1 #继续下一轮的判断\n&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;end:&quot;</span></span><br><span class="line">    : <span class="string">&quot;=a&quot;</span>(result)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;result = %d\n&quot;</span>,result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="3-asm-memcpy"><a href="#3-asm-memcpy" class="headerlink" title="$(3)asm_{-}memcpy$"></a>$(3)asm_{-}memcpy$</h3><p>$asm_{-}memcpy$的作用是将源地址数据复制到目标地址.<br><code>void   *asm_memcpy(void *dest, const void *src, size_t n);</code></p><p>这里的$size_{-}t$指的是需要拷贝的字节数, 所以一个很自然的想法就是,用一个变量$cnt$(初始化为$n$), 每拷贝一个字节,$cnt-1$,当$cnt = 0$时,循环拷贝终止.<br><div class="note info"><p>设$byte_{-}1$的地址存放在$ESI$, $byte_{-}2$的地址存放在$EDI$<br>$movsb$的作用:将$byte_{-}2$换成$byte_{-}1$, 也即$movsb$的操作数省略可以不写,默认取$ESI(源变址寄存器), EDI(目标变址寄存器)$</p></div><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">asm_memcpy</span><span class="params">(<span class="keyword">void</span> *dest, <span class="keyword">const</span> <span class="keyword">void</span> *src, <span class="keyword">size_t</span> n)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">long</span> d1, d2;</span><br><span class="line">  <span class="keyword">int</span> cnt = n;</span><br><span class="line">  __asm__ __volatile__(</span><br><span class="line">    <span class="string">&quot;LOOP:\n&quot;</span></span><br><span class="line">    <span class="string">&quot;cmpl $0, %[cnt]\n&quot;</span></span><br><span class="line">    <span class="string">&quot;jz Final\n&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;movsb\n&quot;</span></span><br><span class="line">    <span class="string">&quot;dec %[cnt]\n&quot;</span></span><br><span class="line">    <span class="string">&quot;jmp LOOP\n&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;Final:&quot;</span></span><br><span class="line">    :<span class="string">&quot;=&amp;D&quot;</span>(d1), <span class="string">&quot;=&amp;S&quot;</span>(d2), [cnt] <span class="string">&quot;+r&quot;</span>(cnt) </span><br><span class="line">    :</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> dest;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>使用$REP$前缀简化上述过程<br><div class="note info"><p>$REP$将$rcx$寄存器数值作为计数器,比如初始化$rcx=100$, 那么$rep$后面跟的指令就会执行100次, 因此初始化$rcx=n$, 然后$rep \ movsb$就可以了.</p></div><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">asm_memcpy</span><span class="params">(<span class="keyword">void</span> *dest, <span class="keyword">const</span> <span class="keyword">void</span> *src, <span class="keyword">size_t</span> n)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">long</span> d1, d2, cnt = n;</span><br><span class="line">  __asm__ __volatile__(</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;rep movsb\n&quot;</span></span><br><span class="line">    :<span class="string">&quot;=&amp;D&quot;</span>(d1), <span class="string">&quot;=&amp;S&quot;</span>(d2),<span class="string">&quot;+c&quot;</span>(cnt) </span><br><span class="line">    :</span><br><span class="line">    :<span class="string">&quot;memory&quot;</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> dest;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><div class="note warning"><p>既然有$movsb$,那我们可以也考虑$movsq$,这样子拷贝数据不就更快了? 比方现在我们要拷贝5个$int(n=20)$,每次1个字节的话需要20次$movsb$, 如果每一次拷贝 8 个字节的话,那么只需要 2 次$movsq$和 1 次$movsb$就可以了.所以,$memcpy$还可以按以下的写法写.</p></div><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">asm_memcpy</span><span class="params">(<span class="keyword">void</span> *dest, <span class="keyword">const</span> <span class="keyword">void</span> *src, <span class="keyword">size_t</span> n)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">long</span> d0, d1, d2; </span><br><span class="line">  __asm__ __volatile__(</span><br><span class="line">      <span class="string">&quot;rep ; movsq # 每次拷贝8个字节, 总共执行 n / 8次\n\t&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="string">&quot;movq %4,%%rcx #剩下的不足8个字节, 换用movsb\n\t&quot;</span></span><br><span class="line">      <span class="string">&quot;rep ; movsb # movsb需要执行(n &amp; 7)次\n\t&quot;</span></span><br><span class="line">       : </span><br><span class="line">      <span class="string">&quot;=&amp;c&quot;</span> (d0),                                                                                   </span><br><span class="line">      <span class="string">&quot;=&amp;D&quot;</span> (d1),</span><br><span class="line">      <span class="string">&quot;=&amp;S&quot;</span> (d2)</span><br><span class="line">      :<span class="string">&quot;0&quot;</span> (n &gt;&gt; <span class="number">3</span>), </span><br><span class="line">      <span class="string">&quot;g&quot;</span> (n &amp; <span class="number">7</span>), </span><br><span class="line">      <span class="string">&quot;1&quot;</span> (dest),</span><br><span class="line">      <span class="string">&quot;2&quot;</span> (src)</span><br><span class="line">      : <span class="string">&quot;memory&quot;</span></span><br><span class="line">      );  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> dest;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-asm-setjmp"><a href="#4-asm-setjmp" class="headerlink" title="$(4)asm_{-}setjmp$"></a>$(4)asm_{-}setjmp$</h3><p>$asm_{-}setjmp$的作用是保存”快照”, 需要保存的信息自然是跟当前的栈帧相关的信息:<br>$rsp(栈顶),rbp(栈底), rbx, r12, r13, r14, r15$, 后面四个寄存器作为被调用者保存寄存器也应当保存.(set_jmp是被调用者)<br>$asm_{-}jmp_{-}buf$是用来存放这些寄存器的结构,它的定义如下(定义方式不唯一):<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _JLEN 7</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span><span class="keyword">uint64_t</span> _jb[_JLEN + <span class="number">1</span>];&#125;asm_jmp_buf[<span class="number">1</span>];</span><br></pre></td></tr></table></figure></p><p>比如我们现在在$main$调用$asm_{-}setjmp$,在执行$call$指令之前,$main$的栈帧如下:<br><img src="/2021/10/30/Lab2/g1.png" alt="逻辑图" style="zoom:100%;"><br>执行$call$指令,首先将$asm_{-}setjmp$的返回地址压栈.然后跳转到$asm_{-}setjmp$.执行$asm_{-}setjmp$之前,栈如下:<br><img src="/2021/10/30/Lab2/g2.png" alt="逻辑图" style="zoom:100%;"></p><div class="note info"><p>现在考虑$asm_{-}setjmp$究竟干了什么?!简单来说:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">asm_setjmp</span><span class="params">(asm_jmp_buf env)</span></span>&#123;</span><br><span class="line">  <span class="comment">// 注意env这个时候是一个指针</span></span><br><span class="line">  <span class="comment">// mov %rsp to env-&gt;_jb[0] 将rsp保存</span></span><br><span class="line">  <span class="comment">// mov M[%rsp] to env-&gt;_jb[1], 将返回地址保存</span></span><br><span class="line">  <span class="comment">// ... </span></span><br><span class="line">  <span class="comment">// mov $0, %rax, 直接调用setjmp的返回值是 0 </span></span><br><span class="line">  <span class="comment">// ret</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></div><p>好了回归正题,我们进入$asm_{-}setjmp$后, 手里握着若干的需要保存的寄存器数据,关键就是获知上面的$env\rightarrow_{-}jb [ 0 ,1,2…]$的地址.<br>$x86-64$的过程调用约定:当函数的入口参数是整数类型或者指针类型并且小于等于6个的时候,无需用栈来传递参数,依次存放在$RDI,RSI\dots$中.这里的env传进来的只是一个指针,因此$env\rightarrow_{-}jb [ 0 ]$的地址就是$R[rdi]$,$env\rightarrow_{-}jb [ 1 ]$的地址存放在$R[rdi] + 8$中,后面类推.</p><p><img src="/2021/10/30/Lab2/g3.png" alt="图3" style="zoom:100%;"></p><p>代码部分实现:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">asm_setjmp</span><span class="params">(asm_jmp_buf env)</span></span>&#123;</span><br><span class="line">  __asm__ __volatile__(</span><br><span class="line">    <span class="string">&quot;movq %%rsp, (%%rdi) # 将rsp保存\n&quot;</span></span><br><span class="line">    <span class="string">&quot;movq (%%rsp), %%rdx # rdx临时存放返回地址\n&quot;</span></span><br><span class="line">    <span class="string">&quot;movq %%rdx, 8(%%rdx) \n&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;TODO&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;ret\n&quot;</span></span><br><span class="line">    :</span><br><span class="line">    :</span><br><span class="line">    );</span><br><span class="line">  <span class="comment">// 之所以需要临时寄存器,是因为并没有&quot;mov 内存, 内存&quot;的指令</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="5-asm-longjmp"><a href="#5-asm-longjmp" class="headerlink" title="$(5)asm_{-}longjmp$"></a>$(5)asm_{-}longjmp$</h3><p>$longjmp$和$setjmp$一般是搭配使用的.<br><div class="note success"><p>$asm_{-}longjmp$做的事情:恢复”快照”,设置val, 并将自己的返回地址设置为对应的$jmp_{-}buf$当中的返回地址.<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">asm_longjmp</span><span class="params">(asm_jmp_buf env, <span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">  <span class="comment">// mov env-&gt;_jb[0] , %rsp</span></span><br><span class="line">  <span class="comment">// mov env-&gt;_jb[1] , M[%rsp]</span></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="comment">// set the val as return value</span></span><br><span class="line">  <span class="comment">// ret</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></div></p><p><font color="red">直接调用$setjmp$的返回值是0</font>.而$longjmp$将自己的返回地址换成$setjmp$的返回地址之后,在$main$看来跟直接调用$setjmp$并无区别,唯一不同的就是返回值.<font color="red">返回值为整型的函数的返回值一般存放在$\%rax|\%eax$中, $main$的视角下,$setjmp$的返回值是$\%eax$</font><br>根据前面讲的内容,val存放在第二个参数寄存器$\%rsi$中,因此<code>movl %esi, %eax</code>就可以解决返回值问题了.</p><div class="note primary"><p>一个简单的理解方式:<br>$asm_{-}longjmp$实际上就是”窃取了”$asm_{-}setjmp$的返回地址, “伪装成”$asm_{-}setjmp$”堂而皇之”地回到调用$asm_{-}setjmp$的函数中,这个过程还通过修改$\%eax$改变了它的返回值.</p></div>]]></content>
      
      
      <categories>
          
          <category> Lab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内联汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PA2.3</title>
      <link href="/2021/10/26/PA2-3/"/>
      <url>/2021/10/26/PA2-3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9663ff99018219f418a91f92f439504555cecf08c1ae739bc4ba98fe4214b834">98c5eac1e431cec725e9b50c1f9552a7c277b5b6439837c31a38c26f9be69e5dbdb275d4d6ff0f0e97f1bb473a2baf5d2e70a9e9fc8e2f40d96a22e19cf945e731eb5d46d00ed818e92cac62bbf087de7652fad7fac50f3b7f860e9873a436618b208842a915315cc4ce4418f3cef8ffee0ad70f9ed25213aabdf66649d40cabfb0870ca2575ef178d54612ad4569c0b083fdf68e0ea5f3c55375d9b5888955908d3e3e726f5af4b244b6d52d7f112ebe25e5fd6231a44a43bfbc9972a85a3c436f9847ac2b8279162727caee9c618ff2c60ffa1f01f80a46ef057964aa844807746882bd07b8937e2e9871bb40f27fff04ab815240e19ba1fbecd60f8fad94a5f909c94c50fa54132c224061dbb971f7540b97b209a8ced43306a268b06e5e7773ee2343e7e4505412ec2dd8cc82ea09fdfad1e50d58d3e227b66b6b9ddef4205a6ed03836d16d8ae633746611b9044b26cec3ba58e2a402f7b68533934c68b4305895bc7a1d6415c224a1ff2cc0b64de2716434f9b13a0b079bf12f65403503642c7eeed29bad35267892e5cfdcdc41b2a96b9381d0c0c8056d0433769cc397873e3240ce0a07b19b8540b414e4d347933a72db1a9944d7b86618dea7c617992f6fe3e86798ff0c0b673308c8804dff16060e1d95445bfddf2d7ec1cbadcd106d116f9e76ace91ce326ea6e21d4243f2146ff7d163e13fa3c08113f4d537a7fa411346f5b0cbb624b60972ed94fed4928a0da2c1b4e2d396148d544f7a62b544328f26cc5f951d5bce8ba4fb30f56185f5cbbcd336b57bb48e1b4715c245e0017757ddd360af60faedbb44596208755da9f53737b640c8bf3f9a89518c38b0d60cb6ef675fcdb86013aa18fc425f14b88af2782928910e8968c69167f36589425e1ce3c46fb6cafbe2c576017500bd0fb0953674991c0b2e3ad460eaac18876459e0b609a2410d2bfdcc2b6b4236edd1b8d5ba06266a35f21d5f1c569d3661d51ba464b092da800ac14e3e0a2f7ab14337950b49cc7d1e14e201923db830deec8cbc60a2a7041a660885a98056233608913005235fd24f20bf41fe331f0683043a077f46b56b3cd695b5e3941679b55774dd01891407bc6b26e6bb48cd8916aae61711654371724b45a9ce187d1f1e217b41e6b0bd405bb3f5892b692f07b32cf5b4e07db59b380b96c7841605c495cc980c21c01942070b4ee9981657fc912cbf802dbe95712ca6af08b710afe072221bf6f709dd3e5381fb7bf4488dbf3afd11425b8239dada5d0aced654db8e7dc60b94547302c2f0fde4f858636bdb91fa1806aa13e55122df8a09b8de1783a95185ca482567b74adc4eefc2c76521d938b6f0995d6c761ad1bc3a6c255e70f9f59ef65c652710b4972d13f4316fbca8e4dbda55cd92d2c74cd2f562dbd3f14d6a9918a65186a9c86464333cc65d330b1333ffe61c453688d3f026721e93fb3db7de532cdbd7a9ea434c68c542d07ce321b44168fdd433a24d6bfea11e64192b787195a699278c09841da8d9e782133381742c68c1220fc1ca1e42c6155c54f31a57fb3e1bbd8476ed53cce70556134b15c80e6adaa5493223e17bf8972d849a3e6131a0770090a90d6a02990477392c59229d623a99f3db59920c59f4662f8ed47fdf5fdc9de1d2c37bbf34d50e426898fba8b9d7ace0c087284d13777ccf4b30eac0af2be763695f6ae4a63e28ae7072bc554fd66a5bf29eef44af0faf2dd1d135574db6a79165974a3c6558d7bdcb26ff53610ecac19b21271b555809c19206a91a420d14549d6d9cc04d326ac519e5f6cccfeb0da0360c7822f0ecab507164475eebdf1b7656e26e0a31a5cfa776d993f8b56e632185b7d51d39e9978ff37619f8d01d2c58a28b3f2d16f530f845732b0e5e95eb8eb41e148781168731a809d943342becc5e6343008713040728f3658d1a7d57320101cf9db2c347e294a03413a129df7181369a3624f868c90c7a975c920ac33c1d6000bb079035fee0e28d4a941303a4e3f5455d63ce20d9f94be9eab978f0d4fb859dedda1e93d6374fcbae70b5b39ee1ebc85140fd05e33df61fdff77c2ed44f47ab170efd38da427167e74388919c490c06a956d4bbf50a6b0ee0ce022df51e6533557aa23e43e19768862c9040ce86cbdfc08ab6aa4c6a4d7857b71b4eed66542b363ce82957d8014c85c075b5dfd1bedbd1b89fab48573afa519b8f759ec261778abf1c48bf97a36c676dfba9fdee9bed93a81f5dc63fdcf5e446ce7ab930dcdc7ba2671d836b17fbd05f81379ca247cce3833852242d6d15ca0ca729495bc0ca322bc8811a80e43a45aca2769c0e00a3851ce6a9526543db282e3187ca3792cc4bab1fbce5b274124f808e72abbaf70568722d7ccd5f42d0fd6b7605347ff326266ff55dac8c3c5158f61ca639612b1087c7e2adf446cf49bb80c836ebe3fb9ea404174987298b1f292f391220a753caa45a4a0a06d81802199bdbf3083e1f8baeedb3088d0908f84ff9f10c84ab7d8f7dd6f5aa6d530b248c4581ba75a37ea0f0fee2c0e402d1d27988e9c99ac4310c037fa71a9466a0b53175b92ec22b6f6c9b42e434464e090b31e2a566884927325187a1f71d34ed6009b0a37a1e5b90b5d10a9f4e8d6238918c1e21f76c83ff3b1d6f7ffdfde2a8c30e010e4f29d364f535ca906bf93767f1c3caf1b9f462cb927e224039e4ea719b2c8a2a009ddf4800ef4526f2e4f014b9682e419e4afaa4ff93ad3cbed2ad743ca0e5f3a833145e3f05863b20ce7ffe619f90fcff836e4559f182813e6b6c55354a74c8043202c21ac59182f97755808c135476920a85cc5eae2a380f3bd070f64544caa7d49dfd5515c100b303835eda5f322187ac949b53d23cfe622eb841dfceb28e139173145eabdcbc0f467813cfbf67ff6c2d371385fac7fffa0f5da6d69bced87b6b086bdd6bfd2687507fa307148584d904eb3f790a39a6160b241b8fbe41192c41dc7ff8994cfc62661f80b2c8d2b942a1c55ab52581813c59b107a7aad1aba310b2826e9701266d023ab3e17cb2ccdcd211f4a2b7027d24f69548afd35bdc149c1b8f7298b2251fc6bf0746e07d2b054e496b84328c90f41000ee9285912dae950debf3c0bfb87e7f948c4c9a6aed2178ac8bee7e188a80fd3cd84ccf6a57fc8cc6f46a5bbe0162d18f997953895d6231f9fafdbe2112ddb3fbaa1d0cc66ea40c7d9286aafe106534dc7c4ae313dbd58285738368cb77ed627fd9acf4f7ff9032ffcfa7165ba720139b12864a370bd2c208969c82fe22dc544ebffeba23fcab05d4d052895d4e1fa524b2ebd56b50cbf53960ac5f8ad84e61522fd683fbcd949d3a554502914713e945f247ca231961fb5c0857a1c3e70cac1b8d59e2ed1e3282f832e8a4b48a9fb74c8bcf2a324edc86d71c943aa99d3f204ca41dfed7a4b8208231b43b8e3d978ca41d0c55ade3ffdb9f7fc178f845f1d21fef2405c1716a7e831c2f97ef85aa05c09ec2b34dbd47d66c3d2a3b64d00c4596ca3d9a731507c9bdedb91bef10414926a0f845ffb9d109443428b7a43868b740b235de6f331cdfbba18f346c240277eb566d26d75ac7017033f20d60adc48d92d86cd2d28ba0803d7c44247d81faf654d81e1999527c761b250ee67781506b71fb633252e8fdcba5639901ea92d0447b956b15e5d06d3390fa9d4b4442e2ed51ade4133f3b06b0ce70d6edc7c9c700ca0b660d7a6822f279a55b33918fc99c5d7d105c5deb092cfcc4c6aab1cdef5b67b173bb57b1e3c6617923c2dada5271703f54fd4fa91cd697eddaea17f23d3a4153e618e3ea8873698c77e384568a868ede77cd79943058b5afc13dba719dba463cbdd2ebe0b43b31c802bdccb48c92769187998cc380deaf0690ec5321cb45e73f8c64c598594531dbcaf78ce2a6047be4279f2acd63f2d22480261249fb953fa477bd414c803ac72ac66417a6b57942009f2a13c0b474de3f480e487f337f97bfd4933a605cb1c6d4002e8d9e24e71adf41f49aaba2971820fc2d3d7cd7a9097f3fab11e5f7d7e89a7a21bf1aac4d87833c9856c531c66645dd0f520b7c6c40b1978ca1cc92830393de463757172b0f388315b71ca3e66d69d56452b9c1b43c570dfc1acf52ece09064358be21f1f44dd79c7fbbdd881a4039eb5de7fdd72a6eae36d7704ef6698d90e1405e95d2acbca347075a851e0441ed1b89263ad7b8842c988be8dbc7b2b4d38b596bef049315027f1a40ad6ca9e9630174ed462b1fef0a70450c5e3a8d8d64c8d3c1f4d7e0e87063c3a89028b3e97be1b2c5a6a84e3dd62ff94257d02706024f518d3e4617882feed75d79636542d1c146f6413cfbc6733f33c8634bfcc9b79d7eff1788faa38be42aff2a862a68fc3b5af59de905a0fa4a87b477c6f04d67d354fd9fb2bdd81d189e785abf99b7b61571bd4930d2014a4673ac6195155db8a3b0e36015caf9adb39bf3954bf8f6618c8648d01ed35a67fe3a6decb677a6426f645d645aaec6f14a1c51260974e8ecd028ce5eeea752e2ddae1e52a4cb2aa8d8161ae622a2459330156080e0ecb0b289c6070126034d8398b300e19278b90a02ea5cb31c9c8399774a374141d736325eaddf1ae76a6777f80c58e944575bfaa50c0af2d101080fe7dffc3f95460a763aae0498e9c343c62f96cc84807c39ffd59ccde05092d301e432cb7adae5d184e7c9ed8af288c3f6cac14d138f98fc8bf3cbeffcb341c604967d44017bf53071a599e32d7d61715e290356e984a3794e9d425898ffe722e813e2fe354e2fe2a1a4b7b2ca77b59f60415f43c2b7b9b1713c00d2f003b90b6bdb19a580e0bc95e4441b77808ecd4db50dbccc1feb24b21676f156e1b5d2c2d20b1fc5aa986c3b3aa31fdf37cdd8fff59d8a44b23d4942adae33e57d5df2bb69a977b79c33eb0b8870d2d52e503e3c876b81af21b96629446b813c44bc91911b22a55f62f451787d0f0e0700693c80eca5463f72ce9eea69ad1637eee0d570512b2ffc4d8e9289a1a1e7ab130aa2db5eac6f1e9e58228dc7cda38ab48154ee3a16dd665aca81e0514b60a1a3b07068dd79ddcc20cc18350b06a26893d2df83ff3fccf5a7f4893a3524576201015a09c8f97532d992115368d59386b25798afc08be16b0af5e27b6f731369c4dfb4a85ceed790a86c8667c290aed5fe17f10dc7b0aab26442bf5fef2124c520fff23c43a55be7debedd33dd04314c2a8025981c4425b18f98dee4a1670c33af14d52a5ab9f29b157d266e2284369bef415fa57d6533d1f04678b92346a778dc9cc9916a208d3c6fc53db5a88592890c792a9a4ec9ba89653e2f8f63576b958af8cecd7e64fb36559e78e8daf8b23a650d233bb850f105c67d0699463cdc95d78908ff6be7c70f2e9537c9e939bd7df5f73b8d3e77e12a6ecb73590a168804e6f5a40c8c1f48861fffa86a0de3907bbb2a01ef3f9f38f4ea0d34b5b500fc19bfdf8214c551ce28b5a6ff80ce6059bdbfb92cddc08928a228b8ff294be97060252bf8691eb1a2249b0a33da314d495a2d983b6a2f49ee7afae9e2ae0ad816d8d68ec6a0a05c1eb7ff97579a8f4f3216eff7aa5cdf7d46b3216d6424951c34b0e0b69303e079cc3bb31f56d9b79892b55a76dd5c3bffb1c7d653c3c9b9c4dc94c354caceff1ed0206d35a48a2703761a1fb7eb32b50dc26e0197ce9d18640ddfc4ccac7a74553a5f6717cb3ab570212b7a922e2aec4ae5d031d5056da147f9be3f6128f0cfd12d44c2f7b4c06d10ae75cf268a9579e85e8e6de89b7d08467a1b89bcf03a6a31e2503a1c88c2ae7ac89d0e33d18119d649f1fa7414f0425934355081fed87ea5a86aae385d9fb57d3472f1e8938e349643cda0625bbe9896df63a35a5a6372e2ec990a3fc68b7a88856e26b878a2d35db898259d2f5477cf5a01339259be01531885e4b422c2402b919eceaaa06a1c1b76daa74f08c8d40e1cd0a0c40cc05baea9ffd635bedc93b7ac1b890cabd0a6a950382f7e21c9a8ec71db5317e56be7883e7e72a5773ca7c2f183d80c77690daaac7c42267ed264006df12a579de60cfc1d2af8eb6f185a516374e670eece33471da827225d4f17005108fa2d6256c40835f38e7b7e88bd0ccd336e4c73f1d67c6713e9c7a1b4e208a28d47ce3ff536883eb0e2485df1a9a2d842b71409c9b64d53e17de92279dd708d3085ad2844f0fdf2c7eb251dc4f2465458ce2874315d87336bc83434ea3bab3168e8e1b91d12809c62f08314c0f5c12ce063d7a0a363f8d1a90eb9b1b4efd34cce5b023f848bad8740a2057bfc7e4a7de88b7de6a8fa33eadae031fb09552edc3d097dd95a7d4673f258179d8e3bbf61018fe1f822a0968072538bb12cb355a24aedcac578cff32c4db5d434d1f2a604204c0b475286564bad97edea92d562ba62b2fea29170becc3c4dda7113aa72cd0d42acffe7fe7aae092ad2405f1dc50ae7f9eb31ec17f5d623e59e9d7dc426f83457e98411517755de82ca403fa68d7cd5ee357a61aa60a6bca407e71fbcceb01d82ba7d2df351ef43a952fcc17adb8db480706c380b8660edf276393220d8bf0dde4ac509aead6cc5924d206c6d5f05d07669cddac8b36bd92286be6bb68924fab4990f6512e9d6556f5cfbdc0401fd959c3a5d005cc9a59e6594c3ffccfcd3a735bd9671c551e0fc1f36fd28881758d748192dd1a1f54318851134d075e2f3e4ac4d02127b67d34b5bce5c7f678b6a646a9e2194a219fb4d5983742eaf21266a80792315f3212f1e83ca337151bd324fe87bbc94445886a6f7dccf9dfcdb8a84d4f4eabb179d9f9110bf3567fb410c6a8d5e906d4967a26b273206dc9f17e677cde36b7517172b091e6119e8341543c7fcd295747f680f25e026a82d12c01aecb07c0847a76e76ea1e474ec937afedc04e5077e1e86bd3f0b94255ec2de65b046fba4a44af031d27973bbda0b4077e55f4c89d35922d786a1b52e7ed9e7dcc9c857b4a6b4da48541397096299e2f24ddff05c8337edb2830f640dda0c34ba87dde65a9f2f951bf43cfda187e7072489889dd68b729ef2a0cc97c6a5d57442070854c58dd2a49c4496f93ee3e6ef782af9cafc7259d32402ba73a877ec7152703513647fab16cdf19a450d219b38e866936919bedaf219c38aa2037ca52d675107cea7d618b4cd2b7508bee7999d7c59828b70033b9b301c90dd95322ee52f9da39630e00ec8d9a35041e3ea08779361c7ffda24e216176c61445d104482e6b808ac093a293b66b27b1d3460679bc604ab0ed00c5e143b2b4f79eefbd0bd68a5a32803213a87e45f3c63e8059d4f1c0788bb668d5f9243e6cc0338efd8377159c498cc8899af9df830fd71f31edeabd364f8253401173318da3b3f65a4e2d3a1e5ceeea3c9f0ee2d6e4a93df3c8e56ed80fe896550bc67abd356b945d012343e4ce123519af7ea37ad761a99215356bc96f6fcede1f8a233355701142e4c8cfb8635a68f61f8fcb98fe998d0ee8b59520a2d98a625931a2ed9bdd9fb5265f81778d64bf325f49fd1e52b00f4dbecd33f0fff01c579bcd6775530bdf168ceea9b5fe9f47c838b895ec645db2b6dc70fa1a7da199bd812c76e0d7a55e57847a8cd2c2737058d4c36eb96fc576ea7d82007f5a9dbdc9c82ed300f39c87c61044437ffde53fa1d9163f83e79af752b24a8d9c6fbbd1bc0eb5d7b5858cd85b2f72c4d2086f8bfc93c4550a4e682a1afe03ad868cb3263b6e06647f8e36ba010306e3d5875dae1b133fa51a147b0e0f45776979dfa506e838271dcf28ca9e5d2814e4dd8412df477543a6f909a290fe580279bfe6392b08164d76c7301604d183274e728be9f32b5a3ec7a3fc187999ebf664d2bc1af45bcf1a687dc1d82aaf61be158d2c352dac9d8aae8df7d023d049c255b51fd11b85cd822b19faa1cfd15a6cb0bea7e35d64994013d5613f2fe469a4df4971b2a21c687c2ba5267344c052a7597384377584f1fc2fb45540bc6e6f616102efb31299665b42eb15df1db3ab537e0d300d965ab315efef4ceb6a8ea3d9b34b282a4962071ac0051d0d40f6e267db8875adfcdb6fced6f0c9dae0fbfd64fad0f5fa81089d4ae4d6132584771efb6cbc73cfb8814d5a788a96e86b31fdd6f1945d72883aa0b58f1e5757fe70b590d2a43fcb7536d4adfb9f8df07d47884b13a2231871472ded089359b6e73603bc81b5034f9f54fda4b6504455ea395ed1a5f26a1da5db176844c1ef6412c82551d13b657c074a1acc7ed97a6a505f5f0ce1b9913801e92e82369141559f75773c739e25a95003607eb2f871a9fc69369fe5aa586a524efc09ad5aae3bdbfedea5ef99f12c579f9e9ec90082d7ae17a09447f100f5474b9dccd7d9844654cbaa4c640bcac4ac2daf6fa051e71fd9e37cbcd9e92729993cb79eb093ba26f58510f10eff97586088fceb375e6ece09f48ac9cb0b41d228ef13c8488c8b0a32c19ebe56526665906f9a9acd00a8275f0f8bfb84733ea8b5f051899039c18f54a251021dcbc7f48aa472eca59e89afcda3b25673561e757a2f04b40ffb7a616c2b21b64b0b28d44e4a862e21af20e9b5b4dc43b0f16d06a9f7688f40f89d14258a40f88c7a72d619d8010bcaea27fcc274ef9058ee62820fa2a6e454b84794224d330d3cf98cb12845842f25f3a69b0853a2dc28f078d4ac44dd1bc3d40a92d82ce7ab07174e1df4dac82a5ac3c866b491698c1784db119b831a4477b9ff4daa3ce729cfcb905b6413ad44c53d8936c94988cebbb6d81ef3ad90b5aef7d1abffee61f2718cf140ea8b3373cc252c6e39c6548648f0d2381e4c015515e06943d90cb7b67f9da571f5960c4cdcdeb1c7bddb5b87b0e20cae9e47b1fe402d0daa49226508de945c8742ebc50c559ec8ffea458c7fb6a802dc5f56bdfdc1a9a6255a3ce5b4927b7679bbdc018353e2af702fcf6bf8381567c9a18d9a2839cb5b7864e1f57f486d681b5268f0b9c509eee4885c29d8247fe9d143050e8904414f683f0a58f1c96b39f1128fe0a8082c23483733e289676d6758991af61a382cf9dd8fbbdb9e8c2040f7072448b506bc7dcc09e2895859db3786362ca13a715c33412e6964619407dcc5f2e3e473125b09618ac4860d41e806a0b269c8ba2e69859c3ff2f1c0f8000d33a05870ee34272fd7b6ff6c5995c7292feab251240bb7bf13744594b123459d3e474abcf47ceb350d6339ccef8984015833524de3c26c29a3ba29cde99058302879b4056f11d20f528461af78c16942de864301c126ae46c4408b15433cf1abeba65f1af9e5ac3f35569b2b0be2e8f226d0afc4a3d92c87fbe12558c609e86ba5b81384da44d663b2c6b8772ccd6ac8df392a7b9d4ed682dd2dac1572bf3b90e0953dce6fc9dc7e0c757951b877a6768a9cf956356f963afe52e126e3c46c9491fabebc8bd598827fbbf04a338e0564a5a85418f4221cab3e5823ee6a23eedccd043e260f5105b762eb96e32dbc1c28444afcf4b35cc73b12e7a6aac2a7c4756720f40f666302acc7122895c3aa673a2fab453ee9bbcde6a79d045f0cef0074d61d5ac3806b63e8c8b0dd301f7daefd317fbf4861c5645fc11fb2c313703120f08a401efa1356e39094012bc5c007057d5bee72d5d47dfd4dd379b772511508824dc0155a703f53a12aac2f58e393c4e7fa4b5fcf83edd41694287ebeeddab444d5bf1c4fda9f963d41ab13341100a1daa97f1052ad7ea25d7405cfab6cd061c40a806eca956bfbbeb690fa936d853ba63b3a704080ef9ee5f72152a1a0df23a78bdbb0ac6c6539c003232c33df50745c20a0ac58c036f2355547538a529ff3b51e1daf82c10296766bbed1f5d733b0e38a8dee2d60682d3e7ed6b25c0e0908d43706906bd492697779c02a276ea3ffc090184e0b2ce37356b257c596e43c066d93e77a75a0fda1621653341e729fe34c9f8d2161073a5828fce79cd83b8f5b8cd4cc82378da09a490463fc1608da6e4e68adacf323f85354dfea381f7b2d975a3b13ea92e5f49b82864f9c1cc28c474cf0dec89331073348a7eec053326a4b6bf078a9030c58bd341fe2f04bd00686a2fd9bcc5e3730d71cdc11b3c700842866ab8dfc370dd9f1ae298ed3dea8b42fb974bee82def60529b456972a10ed7bf672a024690a8deadde49f0620fe321b92a88ec39e89ac6e72baeb644779ed011d5dd0e03ff311faee384d3579be43c9380039be2a6968e6950dc21cfe518728be92b20b446e1a0186fe8f9a1d011bd4a42b9c05848e60f2d32831fe4faeae7ef37fcebb6c9127b55366633ababdc0ff6131be8f39a9de79138674dacc23a26008bc468f058312bc08e05617a13c904dbdf4e4cf988f5d38c23c2220a992b1386fdaf465fabedba4d5235051f44d58bdec6da76902b0ac91208365d2ac5979e2b6f8d1dc4e9de6b042e033633319e8e0eb67700906994a892bb28ae19020f4f00e30b9d780058e5a570a586a83904909592cbcb826b2352bddb216c7eadf39ea85686edad7ed317b55b686aeae965fcd2f78dd3861332ccb17967fe798a07f027542016280730b9f5f90755d177e5a3d228de239f8e24ac67440d465278d2bf44704c1e25c01d08361695d5ca0b70d45c7631cfcc3604f66921aaa37db42d836a3dea1644150ab55adf3a0a6d14893a6f269de5ce2c94c205f830011878e5998bcbc5c67c01aec1f09ed73a1d3778f7ad9bcbd78f076a81943ca3094c2d1c809881e2ff89dc6582de5b0777e306ab4dd8a725c8e7ea9846fa62f255ea31cfad189beb53ebaa09b1552cc666e922afaa185e21e090a2e45b45050c84b34e60320ecf4d52059b13b4dfa75759e97b877cde08f6b17987e436cf071a196561d7d2ce3f7d8b74d8f79c1009475a7b6b44ce24bffe0e9b0ab864330715455e4388beed40fe46e8a7146926aa1d42d8dfc8c6b69265c826b8ac53295c38bbedc9910520da5dc95a97391170877ead919c2396da73830947c2d62724ff029c161c6203c89e0a8e86adfc7cf98f1a72c47199b2101f9616e4312152d5725392fe042183fe077898665dcbcaae6a0c9db39699ac2d285ac519c3c63cf57b3267572725f691bca3866ed080c400a753f2fa2e37ba348b5f15c0b32be68b2cd170a4810a491635110c405b9815f6106ec214918a783550691d949dfd4702378a1b8a3fca8ec65cfbe31f1513bf7db58e255c4329d93d6294d829feea0a8fc63b17f8107e6c670f415f89f8b698378bec4324d1fde15dfbd1db4f77dc8861a6a5f6d4eab71b9b5b2861a65525a2fbe57f4c4d59094549e04fb110f0b24920c272c8ec44e66ad901ebde2f2e9646e7efd1ccac9763951f1f1cf00c27d4c3f696de04271e285bcbb95111c979f962641c7fffb4946c9732e80825bac23449ece55883e5df5c404b8673e8b884ddacd479458f88f26eba98433ca965fa7b609103434dcb6a5602e7165dc83ea2ab96ce010439adb5ef81362c28d26b8365b9d7898abcc81e13d3f35133f2d86c99451c418244ec169c68b3527896b77352e67a1da8a99e4e30a03f082ad6525bf63f23fa613c332beadf91ca123c06b934f71655523012427ea044483a295bc74066045dba49aceb29a4c4459e9f1797a0f7a5bae07d2b96579779f1afae922a0b2336cb3c4f587c3cd32e46d4813a661a6eecbc76fe704176fd469f7d3c1e3254d625d94453294e6f49a70e4c06bd68aabbdb748952d0cdb7143a98e5c8a778220e9f32aa5912f5c6d1707b1a0f3ca376db16e2c7a36c124ec694308e90dda66fbb5498f0c6ee4a18b23fe0eac9aafdd18fe1442af6362d77a12d5156fc59481a2486acfccb7acf71b1df3d30449b43b0f4d79aeef21918a6416601dadc4b54af4fcbefd961d21695056d4036c5ffc4c45877ceead1439dca44d8378598cff983b900f0bb765e79c4c5fd8792d732ef9ca377964a1ca524aabf375d07c57c9ac439712b4ea92e82a5f03dab22a02b9733375069dd86a8a6d1c5934194292616f2ff080efba1fbb06b6148bba35ed7c5ffb9b2175f883ad4717a7e9133e834ef1a74759a58f33f4ff37cf28300dbe80b4891e4387045972b00d4d1054e8d28b75101ab014e291db38c683d77a9584906652b4c1b003746d1f55b447d31e53997718f4f23e4b410b30741a6203e9967441b339ce1ebd18c2b5a3241e5645ecf2e8b0b14ddc174d982b1d8de9b59121555901a4a49fd5e8a8d2ff69fdbf2443ea3eef089a2d3c8744636b69345d4e8b293fae7ccc193cc237b98199e44ec3370ab37ca36dd0b3a4c043b526edc2d7ac2a74ece39f898186632da01be2b6ed9b2bea76dfc59e263c67cac39ff3b122a0009138b3a3d5603c01cad5eba6997a4d2d906f5c156a84f2078f30a51f0ed979ce1c43c280b7afef8123d32754b541345f7298d1b2376c10cf9663b5abbffdfe80b64e528bbcc8e569fc3c37bcdccadecb0821e1ee80eb1d6624d0e4606184eca0cb88e21d9ead59f4b31620499f388ed33241e785a37832a380819feb4b9ccc9cea288c2ca7657b3a7f3786fa187a419fd4ada84119878a596da1179ab40a3e9bc097ff7056c3123058a1953b7af5396849f1baa29e78f5410899463384eb709f938f98a495236545c7a3a4da1c63e4a47702457dcf6a62b62411a38dafbbf1a7ba59da68dd15950f2542e97541c4ee846fd11f5a469cffa8bc88a5e97073dade47b5c5c90febba7fe3070ee37613334907dd474c5c84645789f7d4ce956f355d3b5955e176d8e1e15e4e8f433d0e04009a7dcf70b2d775e87c713eeadedb70ec5dad9106a12b09681314402059722cbd26d6cd54f83b3a9d851e80df9e6f9775d4efadc82815629a80c3b6fddcc80997d95cf4d52e520a984f0178589366adca8fd413ce42fab36a86559522ce1a6797fd89746903051d17674e25593ad45a9afea327736cb4d648bb379e67eeeefd945a32213968a95a823f760d15118c0ad78d68bb0a0bd5cf387cf93dd1c45e2c21095c81eb61c7924ea450df9ffa3c585d4580404c154edf99717f841063a3b54b0bebc78c5e44ffe33cb56b314a9da40be62d584743b07f729853fddb28114271e2aa7ae932fa528f38cb785ca1ca3d3d7256c6cc0038bb815bc3379e6597a4b24502ac787d0e758047702a5f0e76df7988f96e8d3fb2d20acf7c1b3bea4665d475da0a7471bde3440b7668d727ccb3105fe39dcb6e6e420f5f820b45337b497d965bc240660e271a3e872b5b88025b11da4e033cfb3f4993def493e9db23f1a2e039d4855621d53a3e9ee64393509de373fd1b67f5de31413a6ac00083fa168240e6039633c1304cfa9619ad55ea428d54b7030248cb0a33a1b0d0936d02ad5b0038e032bcf7de01c7848713e7fc6326c46fb92fff5840330ce69f63eb4501c31e786e322a089f74a5bc6ce700c9b93e79c935fe2401e6b3dd3101ab3df37723619502514dea0ed4ac8c09caca98a8b26dc4fb4ebaa3537016c4dd6d4f00f2c776eb06db136b9feb6d883708f0adc5cf061c282eb6f8e0441f2466646312c751e630b28805bd98494d55de6b6528b784d1177a76cab544933f7a7bfaef253cb44f2f552fa99d38e98cd8ff28f2e4ac8df4f3c9e657294721b823f65dd9570ff11830883438293c19a6f122f3c4f8b56e74b8c06e8cea76c4325e213c21e0f6a3e29dba904f087845d3810c52b1d1c14e5887cc603ef123f8f3481e52e0834fe81a0b6c667b59a880512b80c75abd5c2e62505c7224265e40c00e3e714a3d791cd198195c3a8db229966f2f6fe25b474a39f787514ffb9e85790a604ace5a1d78c03fca1dbdd0f66f319249f57c46a2a6f4c8def93326256ec5290d7da2398a745b44a5e0c097ecc86167657833e9ef2c85496aa7c56f941ab2f393c44417134b9d956c85acc33b80e8f05c2a684a92d4af8d84861659564197d17653640d2ba096c6e0dd35edbc93ef453b4c14e76ae611099511b5796596404acbfba5f6d2d7b2d244b6e3062572efb006238fec083f2eae4154944c0875b903a49b8c0aaa95be0d77e359737a59ddecab98d9a89b87cedabd4c0b3dd9b90ca622e86e24b9e62ca5179a5a92b03ac0949d5040c03136bdfc371d305fa36124e95e285f8e8c22e834a412969b11ecc36e6d57ec51df67779d4d5c26be530aeb1fd30ad0ea95d4d82eb16b895fcc8c23e88e82b71b2de52bfd20ef1a20920cb5489f655d610cfab4d5471b3cf33f4937594e95164a4fb3e3d4ca6686f961ea10a216b9821b53bc6469ee030844c470138570da1678bd150af419b485541f1b82095d52f3db5a615973bcfb98ac572412b843934a3a0e36e51be986dcd99737187655098936e14b62317533db211705303feeb40b35d19770be86c149eea22c03f7944cde15552f39f357e2cba8de837cde99376ab604a9451556f755657f125838a6083133299726d4d46b69dbe258778e155198a36a84554eceffc26497b74bb07d0f401f0326d21a0e08f3eb6b8029b99e51e057c26e5affad4392994a8414d8cb93252ed5a85c344886a6cc787008e2364907b4708d68c03affade919cb98f71c2fc55ca681dac018c9cb206f52d7301f971c6e1e976b9c9cbee4ba7abe30580667f7426b6a52958a7046ed24947869e00706d3e096fb1b196780cff9199bd9982c06511734b36aaa79df1adfc899a416d6364adb000de5f67bad07f71a023129aa5ee68ff21139749aa7ae0f35ff78cffbff4d61f264f54471727933cacd9c04f2b827f5c735d652379893dee133ba0d634b0b31b8bccdc38f9772de620ab8f7f8bea57c822ccb2f5db42426cc7ee48d4651ab4cb83b418fafd6122fdd64dac80553d160eaab8e7f02322ae4623dc6943aea1963bdbf62d4e59af238372f633b563e44f07572ce9e41a2716ada7fcf64f681bde0ce897aefd837c004803457e8ce9b01ca14e2dc85f491a40ebcfbe422cdc72e04b1cf42dff356fd6116aa5ac984ae83fb222a4b90fe3f26ae850f163e9c91f15e23cc3857ba2c65b067c2e9905767d5ea24e2c0c429549fec6afb1981f3ea035123d6c67ae5681b869fb48043469fea0e63d4ffa762e226e85b98047779ae8d15b1a25d74d13600f6a8576e60d904c9180a0ad81e65128ca9e8546225bc6c8622d559d8095047cb47bc5c82b21d209f9d6f541b2a73df5dd340b1368be83559842e6f1e2c78b0cf59e147d830d85d68d7ccdf44e3a365ec282c9d8f3978b7d1ceb42e9691ac7bdd01e564120f854de982b481fc06d2d07c56eae16e3bbe2912cb39dac59aff1c37a199092d7b907812cbf7706fd06efa58fea3de959b0dd0345d045de05b416e65b5cc1ef31325cdebcb7e3f069ea7c2a873c1405ed7d425d549613d575fd81f880442af3035c1ed5e872ef6dba90c826746891cadd52010fa21987bfe305282d88402016ff60d0aa854a1c6265087f475fcc61327381e907c207e2c56c659fee5658c11df383d6079a45cfe8dd825155c4c70a38879d53a9208fefa2d2fc778702b099e5acfbf0752da140bd465e48b857eb12b293059dd47c19a10616f19354cf1569933db327a3414fe5ea4e0177621dd0ae33e554c656c5648c7521342cba0b78c4d3d52656ce6d73f42c8fb5f2bc0dc12195f251b970e3623089f7201b3a32e8b3121cb345f3bb80ce242eec33375a2dd7647d662d654bf8bbba302bbeb8539f032bb892e350806fd0d99f777df6d1d4f9f6d865782397929ec8f250ece01bc4bb40c44f69f8b6a9130b3aea7e59c4ec352e08e43601b0daa34750a67e27bec716dc23951e890adf564cecc3d62ced981a307e53cf8ef70d8c93aaa31d816b0a262643a38999eb9745b0eadcd63075c325dc9e517f875519fe418b615b6c4de7bdbfd64b745e938519ca955afe956e4a6b19e430b0cf58a6001a73ba14098fa474b9f7e647696fe50db481cef38fc06d1f78c8e4eddfb956da2ecac91cd4cdb56febaf8eaf79e955fc2d217b23381fa6cd3f1de743e43347e64fc59e8834b5a862b0feada03757355c900775172a422fe338e0f1d8d3ae98dbcfdcab9b3555bd301683a8747fdccfd245d66d3eb9ed7d91764be86599e4556a83c741d79565c1c644f36560bf9043d5b650259436bc55db40e0e733c14d74177cb79440020f9b16ca79871a4384fd37856a756493c2f7c840b3c0e847f172535b3cb34de6866c22523f2948bb953a39f5fd39dd1006875754aa4f488919e6783f6b5257d4703f50eb945cbac82a6ba20936adb461ebe8033d12551ba0b8e57f9e0e5f5fe81d2c8b2034b0ee8c286cf93ed7e8964e33f34333ec3ba52d26bd107bec9267d97a2fbc3c4d6d819b99acea8bc6806c2a47ae549cd14953b4444733f09b9ced47260587ce4849b805b91c38a3f95ca4f9958c2e70254872404753f637d5c569f4d3051cb3d784cf9f74fce92dbfdf869d46a8814e36e4f556b16c5082d827202b4aa20dbf8617509b2cc3ba6cae9dac4012d7807180196b8d4a12ba530ea4a0d03f0739ae4a2561c7994fbaaa94d93fecb047500b8268cf23754a25897de3574d901bd3aaeb58e1dc3da0b48552c40579d8c299879d64c613a332c0beb9c864fc5412af45e2866fe8ddef86e308b4846c34b39fbc3ec8e3c8febf107a1a98356df853b72088cc58e7a59d9be640417d3425386ace9777632d7daa82319e041d059f5f567ad40d7d39333b661ee90ec52eaa9f50f9615d01d0bc72327d2d530ab1ce3272a2844caeac3fcbc8f1b01ddda7a1467552e53ed833d401c27b5d08bd9e8e3225868ca337428b6925d17720e906672308158759a7f4ff5424c0cc2db09948abfbadae02706fc52ab90395885e697c11c996b8e9d9268b15fcd465053e50e8328cac313972e18e69a74eafc250e8ee8a42ea853c886048d2dd09eaa8c1cd622f97881c8177182d9cca670bba7618281f8fa0fc74c5646116357001098092dfc8450f6cb29bc644574d38405cfe7bd354a1359065b42f0a5fc81c787e020c7bc8ae9e2b78647b7e6dbfd78e6ba882baf632abae36205939809bfceac87bd7ab012bc64db16c04ef5675e1fac8949139ec989cbf5577ced59d21e042cf0bbe71bc8fde9f8fa30a58f32f4011914c5bcbdec09407141b7d27d9ced4183e584339455cbe60da8c56aec9f3c6b164fc58e82780c0a4e5d0516f703a14f743e47017e083c2f72dafbabad9a91f43c5697163787a46044d8e38d33261c1c6bad36cf7054c04148ea8690f0edd616cf04370fb2dcddc0613f6d62385329e548fd0ae80ef59ed4efc3f83205edd0c9d5f5235b5faeec7b303daa4f145396ec8e601f316c1a9dc7e0ccc5feeb7f2bde8fde80c837c269b2a9e76584dbac73eb9d34df6b7410bf5644cdad01ce86c9459658ab9cb09cb2039471c18799fa45a7d04d1e3a49e2f7246fb7366f2a6f926f0d10454048b45a20bb3dd3c258ab5258e8d3d2dfeb8165954d3d12acbee1ccef10f39bbeb9a056b291bf9b52eed9b75be13fb0947026ebb299121dd4a01475e9be3728e84c30e30a8a6819f690e4b65e437a1bbba30887fc88e6c813afaa8ca95a9c327f0b540f20b77a47fdd453c71a77d6be0594c4db09dcdbd8cb9f7c62a5d64d6bdce9757390aefe9a1d38a296932092990f62819e79678a4dcd0d3cd13b479ece9b45615d75ec013c0058193f7bb117490b2c77493d44164e74ae66d81bf969e62716f666cf0e09d50356ab64b36732e8f43904477ee5f8360f5cc53a621ad0fcfcaf9d79ded141c579ec230480d999d8d3d78f7f36069b21feb89ba307715b21914dbae791e0131ee43585f6bed9e487261d27b4c3397d724219ec2e83906b1ff70df7307250cf50373f6d83f1f944218efcc74bc5bc629c80edae1058742c4b74ebc699ba471732c4fa5fa0aceddb6b319f4a5ff8ece74f9d8d1f6f1b494b1d9f6449d6fdf40749b789da493916d987b6d3b30a9ffdcfc6312c1875ca180345a4138454cc24ad20579e5c4336b407b321756d32e8abb66974e8310d597bd761fb38091859b48a9b27b6a63451d9d1fb544f02bbb44ab5113cf6bf3467e36d926f9d6d3d15f4cd694dbe98d2b1d037a76c92b318a38245f9fcc76cdc85e59b4adfc3b9bbc8ad00ee1fb4395644566b82016a56350abd5ce6675ad4765c27740d0dd34b5952de5895b02549f0e9b881ca55987adc4dff5c50fd054bf27a546b84ef38c7d93f3f8843adb4f9fd84ff3e97e3dadc4fc12f8d9feae3ab2a1958cc1c7e33d654425a822e310efaf7dfbb19937f033fb9b573a3137f96240734970df15a9feede45d5dd2be70f5555ac43c9d7ede621d7c6be7a4c746435eb13deb7f3bf4f3226b592487738762fe92f2ce4d89b0c03f04f3544ef5941f5f198a94d4d694f8d6409d17b4787f92ec35f4afb2bdc3fc308df712b82bf54656d12f77d9f890f9d818ac1e59a6a2bf3574aebb08b0b1dd5e2453f54bccde15ea327e57c3b4d89c8758f5cadd383d7d450f8c5399db1cc7750361f92e6f729aab4702f033e0fd58ea3a76f1fe773ee6dc964400216d6cc86e12823350f805109fab62c1643f0cb895ce0b6fb0fa4c50308118d66bf7f5010b1c080e1e3e37d6de6c8b04d6e7d468340d7e166cb05f39caf2662199340fa92325cf8bb82e1446c69e877f728229d0d566a39d74c5550accad410ee01742e966220547eac553239823bbda53fc3d4f11b4e0e919eb319536f99d7b037bcfa7e8cb4fdbdf611360255cd5f34cbfa09207aea47dca0100a6926d6b01acde3d1d11ae43498ecd233adf43457718930b6855f1c37c7ba16bff0d3c3706fe9657b542cda83d3a573fe6eba2dec40fd310a961fe8bce1fe112d84d176738350242e0167c2f236d5ff306403e85b0b48b5b09c1aecd5ccb296ebb3d9969e06e020626f9ef750a3d3e4c8fdd2c5ff5056be4d6732157392271194f42f1b525b4f81acabdad3b0fa1fb38dd3b8c1480619ba08e3ed46f08f07de75cde42664f7a533ce87c5862c08ae0a035b0b8b8d64e94b83858baf2c8d98f452dd3b5cbdc080507168d7063a8f2ed6cbeeaff58a91156e49324d3660880b10377d946104a5c467b89ca8f513b0af80fc979a307c50ec28875ddffbf55fe784f393450d74d5f9f8a275d45ee02ac29a67444c720b3cff61ecff2ec1d79bdd43c48b822dc7af3f0f39bcc47038e5902a1040505f0fc221935d4e63dd0159a6dd1e7178460e2326706fe58e7dfe6ab2f209f0754a0d46f54b238e9395243ab9db29dec16032ab3e9df554d2a8f9137cf19f112b839ad90f6b0b823ece194a233e0d0c3c3b63cd3d2bf73b9ae30554595dfdd3b4256e9c349d7d7b42417dfadc4e40c9bcb11ab6794444411793633cd379fd071b66b5aa4f1976bb8f857a28950e2517c48deb112a8a7e1fff0e1f0678f1040cb9e4069a781a445f8c4690f5047ccad2dabf890d90dd616d7ccd4ae3a672aed3adb2db649ff661331b600dc045218b36a4e965b3d15e858dfe61c9a63bd3c71dfaf3cbf9b3434fdfdc725f995d02b4de10aaec7b63262284173e2f761963e106f76ea0f0e1ae509795ceccfe4686f414bf2b8788edf76113d33f09ae0512aef2e057fb1946739386f3db3b7e0e8afc2b52f1ddeac47fa3028c5095f0b67d4d556c8837063d902197e6841ca4917218b0220d5af76c474e5b50b3040812e72bc9ec886c0de85fc0aeb336558bd9c1941ced8b3e2f81a728200c72fd9792df44027af81a5bbbc31851b5dbaad94110897bdae8e6eb73c12e0c511967437b6e7a06e9a148b365b3cc43f1373c46dbb6c1c0778c416f6a421801d2fd185676a81d5ad072e14c5b861bfe6da9b4500c4d2fdea0292a8e2903e5cec28e3b4fcdd1d67029dbdd176e1449ec41ca43bc30cc2b543ea4602488342fa91cb93c55da0c758a1719f18ae0a6f4473adb4be98f5ab2e45a5695938d37da7c64f9c44bac5c9f9f11a2c0d2e5d657e78838593babb83b3564092455c06564e700bb46a26049761eda93e0b0273d6bc68c0c66610bc7cd1bafe681e4c0348c28e828ce961dbf2d62eeaf29386ba59521aee30e55bfaa9c92fcecd8c9510616f9737afffc28fce295d5d75e75f1ffaba551da3324590c1304c8a5b5613b7326d0df0a646680409e543da2ca60a73a0cbcc87605a6cd1de81cefd9e9ff7c450cd9f1ecbf68d5a4c0704a4e278168925a5b04e273c3223ae670526d854128f9700d560da6b2279ecc015bc31dfb1f5d7f6a28609edd5da15adf8f4d7fbb7ca66604ebda0b8139cf36edcc0c8c3620b598d9cc97dcfcf8c5b29b25da883381fac9b301b83ab33e1d14d36e88f8a76be427bece19cb65daab1244bea849cf284a93ced011e3e047dac77a7b4df54ed0964bb18bc1cc59bc820c1575c4af5031a52b6e72eb2a9a8f099c1ebed572d20bbc424a8fec04f18b0bae4255f5db00245f255f228ace2a9e4a73ffff04280ff12af57977263fad85569a833f6a39b2109b9c9657fe49abccb2fd358825027bca5e86e8fbf6dbab455f84cc15c2b67e0f56cb73acda2f574a2a62a6f459d53512d9116726b859a7ded1ef4401cedbf3b6b067c13246948eec14d71ff77bd90af82f9f9b42a594f1fc5c0e2ce2504c813c95f3f4d2cda436e9ab147e02c7f7fa087a92e86543fd75104ab1078cf59a82b8eec41d1ab64010b52be8496fadefcd8c77e256ee6d896c8abde171ec4c1d755c64e330db0e96d7e802ae3ebd5b20f1457fc6bd4d6333763c01c12040b209d3e694830362261e27744d4ee6602f166fa71f3f37d53af0c6c05dba6fafddc3beb076546e6ed7dd52902be0f70607250c817eebb6a51744e0c513f99d73988a96a02137e3f4b34a77bfd415dbfecd5b8f16b8fcbf294cb3c3cabf2222ad9226b0c00e2bfa4de032dea521972901a7ec56a03b3977882c60e1637c3f4df229464e60200a2782ad8309b961e56a1aef3502835f69234d47fa73137145fdb297562a30d68ca0b667621901cec95b3f49d0bbcbb6e79d70841b88fe67e625fa51f570440c6f62edca911330b5f06128269e4d045680a44f7112ddde999746be406171198e9e497fa448c34e37744ecf6db6465c0b7d9fb186632ab190a85185019a6d8c2ca0cf8dc8215d67869a8b8c3f230cfb215cdd94ca32738f86279fdfab227b7b9244ba291333679dd3f8739f61434ade783a3a8085e3ea7e0d70fb14898a45e1b8948df80387d8c1d1f262428e3204b439cd087595a9ee003aabeda7dfc68300f320b3095c6c03c38218257f055c47a6d4798441f5c19e6f7fcc1469b134e3e9b183a91f969c6196d806af20537832ca8cb3319ec0a3ebf2fea2e39ef2497fc24c2e9573cdc41a21b4ece69924051a95f1bfe2e8e673e6c59778f3e0af27de960a77dec3b90220d47c05ebdbd6969e235c5a457b387fe92d54234a97ac8793305ef9aa485c84de1035e67e88d2e3f2832e7aefcf9ca294ddc96a09e439e2d65e18415265778bf84b560a8897a05455444c5b0cfa09fa97fdc9b6125ebe313c9459730a55328b7c9fd5f27ec604b8207501c739bcf962de0749b5df38ce7726f41cdef37dc79d7a5fe1c13f85a79a163eb3cd4ee3cb27a010af169b5218a3bb49e0360100d5fc9dd27d9a2f6fc15b3e035be16594487d29f0465e2c2f825df3cbc5fdc1b5677c0e1ef490a4125e2e2d054cf0dff66f3300ae0f446b0916a6c4b46e401931ae1dbe87684cc23a7ab8c31cb17e761800e3c4f502032c7dcf7f13ff831129d5606faa9982fc839bb2101a26b19e2d82bd15aa0bd415c9c7286198a664a983662c4c71ee63a9a385c56cbb53cc1aa2e852ffb85cd9d882a5f86d5232765ebd323d6780cb68b3e1d557b5f66bdcbe287758c27c16871e7d8aeabdb707aa3fcd2e1e06f842d17231fee4b779c3bb5831b94efb0ec4b2e45bf9f11e3633dac5727a11eefc48a8cc331d4bfc0302effe19535234333ac02b96766b14c4f31879643b930def012ccbae6db346a3811ede5883b9641d0a9494df1a0d4020fa21a20010d3135511b95bc8986032423af19860006b5e7c953a9297f003515f451a52a48e4bb21ad4bea4e1ae2e226c247f2c61541c0e31a600e14aa84ae70c472e4e3e9c1399a758054af76a2c8146907da82e875e5d10d0f23b9494759b4f8c2f03c2085d2bfb75a3d03aceaeac9b0d37ae01ef95823224d9dbcd0b6003444830382c069f08026bd5e4941ca9025bf9be57adb71d9cc6313b4550db57d736d3f0dd8404540b6e0564d18ad25f5d0acaa1812fff3d2b11f4f21283f4e45085f20279928b95caaa2cafd819bf52d702fc9fb7b9dcf9eda11205d98bc3b3f0a81c90afcf97d26e1f0cbbcd29674c14e3e3050cab0063f07c1db8577a8105640d4be2c1cbe4a80984707cb175a9394cecff2038b57127ec881799937751826d901e3f82e90f06e29b1ca5d1554b5748defc79538580fced1cc0b68641203296326b5b7a627ce4e9bf01489e9ad2483b28abc7f3bb335afd0a18af0c6b2c6b32b69a4a0c08796fcaf59693329c1f1a33ac20a126a48d9922493048948f9602f7b48c15f12a94c3db6d3d1a6f45e5f7714113b94d8533c5bcdb63be992d5df0845dede1f2f353bd7dfafc5bed6e21d11b71bc691f489fdc0b27a0c02737b0bd4dbcc7976be5b5582422c75be93d5ca2ed5238b90146aa7be91a5e14860b1f115c343c3996e6ed6baa845b20892a1d7ef0aa902edd867eaa2000e0dcbdcab12403bdd9cc0ca11d278072c5134ed19b5cb89ba61cbd56eed0ce379693e42aa81076eb0817c59c49464f771bcf6ed3b8c27ded1afc263ef6adaaef178857254f50bef913ecf1c73f84bf79e8f2ef72feea28448f1291dbb7fcb4237238780b1b0db71123ce321483e2a2e348d6483f502c8dbe75542cd0bfb98f283d225bfd376961668b9dd5858abf07308422dbeddd0cc56df20da61d6358618f58e743acfa378450b635871af4b552181f8548ecba5be6868e8537335fdf9097465ca953cd974a09626ab56cca879c98744953bdcc13dc535a7ef622de2590e2de34ae97345a8b9499dcf015d40822c06473cc3d262f47a78754a0ff52c3210ce05a0138f35b1736a1ad78055e311c8cb8efd2e6f3a7f874061f6b0d70f53119f9e13f5994039162056dcc3c3c707cfee8e710f48612571165c039383bbba338c98fd7d63d1c93fe99d737992adbf7440586b29237dfee766db8cc56d9f4cc9f072be72cff08b2fc9ff448c8740fcdc014d3c629f8e37b23db45a52cfe121fdf000d22dd20e7fe273e02b31927cc4b5f4a101e81d4f2b759dbca2772e00b8cefbe7e7f7e946bcbf763186a3f7ca4bb4394e0d89f40b558b33ab5cb5925bbfaec855bb6ed99938ceebaa0bbc6d6d2ad9ca74c956d19fe86d7ccce7bea8a18a1376f7d972ea420d37e816a03b4d2e6b6e259ee80fbaabbf2e9df8e5261564e745891e51d618650949d8930f75528af4b6e21b871ed2dcf878ff5b64a1c20f77cce47598f1a95582028dbff4aba62f9b955e65bd7601639cce12f9eba39a43ee5df71dd5458d933d72ac70e7f13a3417752e94d39d1f179964b6b23cb315e343027f3f2d609181fc53522b45f4ffde65daf6cf351fe48e514c2edcb91b611356b41a75384276ff9766612e8f587d8d16e64333db5314e9783bd633247f13b0db3fc36a19cd0ac329715449fe7154101503f846bff984e1b878b27256ea8c0fc1338fe8dc58c7fa96691712542de88b993154a11ad97bdf492954667adf4a1551dfeff62f9105329460377401cdbbc2fb2ddb469cd42dca415fb9ee0010a1816b4c0704fb5bfd549d9a21b0ffb3fd45551bd84cbf2a8eaedbb8f1e1217bbd4434e7de275c039d1f883300162168a38156c671fbe68a650be2f4daf237b433b9d1d93279984c72dd1ecdf7eb5029d17b40db0151f6964fa2c23b21e2e910edf660180db9e247088060524d3d62aa67828dc5e2e3da233684179fa83fb18adf9d4fb33a66506b9ef3d75b16236f60bee097b43eb1c36acfe1bbd13a82267cfea1c2008cf63c08011951e39d94e8f88a774571e8833e93f5364e4cacd3f77c6ad6b15ae81d8ed9ce3d6badb86ab17667b980a56d2787b15c0de2f739549f7b6446f63eb07668d5eabba2db790d3d9b12c54253684128f3cb0700826a4921972982f720d4069991029d1b9ccebb30a82e5e9582f68aa4b75ce237743a3858223d5f0e9ba90c20ef93fa6e21498abefb454559b0a0bd3ac1109462aa6dbf998da9d2678d1796fdeaeb011745adff31ed8bf4d760ada229c19b2a7070d451f49a6d3257bb50d552df0cc0db43c49cf256852aaea5dd41b5c7ce4729414f1688029595288a7a43c3b564b658b096160c5617af236f2efb121e089dc45ffe7683553cb886358195b4173c684d6f8543729a23f61885db50ca04f18fa75c4268cea9c44f1d360e4bdba334862815db22a31e2b0da6e3c0ce23b7d6f8488cf9b8ebd7cdedeace134e8e52b298f4e621047ddc1fa9e4f82a3b9d223315e63738cf5c9b769f9a134b4dc0dc0eff0d3ad269fafd4f66b376f97eca0b18dd10ac2d783267d6fb4eb80bcacf24830ca3a080181b0877018ef6343a122714f72af3abe2ec0fb1adcecc8a4ba3dd5e38bdf79ef497d467a898e5476c44ec992479f4778bf9df36831010753e59b1b4edf622ca0fed76408cc576c8ee2801da1dab0b8c0fcd0787d5ce19003297d07c476aac82a8e107dea7db7c87e3bc459ff95514732ba8d6121d57e5e5adb745bbfdef77f3c2043415838b82d2ee83b2ecb68a84fa19f423d5426d5bc366fa2a3be4d47ad4cde9aa5fc7b243d46e9c968e075abe2e4e5b60094297f7df1d5a5bf965d43e6f0ae80a6dff9c2c9d7def66e3f387aa760c5f7e6336c90964ca249bbf513f610613930baefbbac09c7beb5c09c1a1f212ce3ecb4450cbda21a0d1860facaba79a6cdbee325747cdd2a15dffe4482c7def99cb73cf13cefb9af27353e13fb43e6ed65cbb0103cf69f0cb11c02c001114f5aec107aa6fded68af2ec08e83329569c7fa6894c908d044de8d37a8343d056403997168bea931188ec8a4e40fabc085ddc92bd0e57574043eab9e6315ad8e6fc8c1e2671936521b0e0a4c8ae485ab6982a3383451c2424b09698f2f91adfedacaf23aca564b2e9781c9e322c369662bc7568867c7b8129461532805c5222a582bdcd469c20432cf1bf32e8c48e15d83889a0514a3211642272834aaa15d68d8738395d3801d7f24a1f9bc6c69d8eb18fdd4bb72e45d42179f1fa34be8b694a86ecf3cf171bb9f30c3df92ea6163ba411c6b7e075b233cd366b5bf86c2786fc720c7d99909e426efeddad92a7ed5bec163cc1d05d8df9b6b49a7ad08cdaeca719a4927ee2c9b0c54d6f15dd42d5aa3eb88430dfef9d7171941b2c1ecbb71486f258544ee3c42e7bc8c8adb632e7f0fb8c7e8f19dac4781ed3e59002ebd5d79a1a7a4c188d6773421858aeef851a5b05019f3f47401ab987b8075f97cbb2c7fc2087a99bd19f2fafb1f9e7a7cf93fb1156dd99d5635f648e19b5700d0c5d9657e796a8ea20f1f4e846642045eb0da7c3d86164ec39b1a33f8d0f957661fa7a1f62e6603fb1d2bce11c1c70532f3a95e8634f12ff72defe67a6cd6fdd37497a4a0c7ebf0e70f8ac4e790235</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> PA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PA2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第六次OJ</title>
      <link href="/2021/10/24/%E7%AC%AC%E5%85%AD%E6%AC%A1OJ/"/>
      <url>/2021/10/24/%E7%AC%AC%E5%85%AD%E6%AC%A1OJ/</url>
      
        <content type="html"><![CDATA[<h2 id="A-最大内切球"><a href="#A-最大内切球" class="headerlink" title="A. 最大内切球"></a>A. 最大内切球</h2><h3 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h3><p><strong>题目描述</strong></p><p>在三维空间中，线性方程$ax+by+cz\leq d$ 构成一个“半空间”。</p><p>现在给出 $n$ 个这样的线性方程，第 $i$ 个线性方程用$(a_i,b_i,c_i,d_i)$表示.</p><p>求在这 $n$ 个线性方程与限制$\{x\geq 0,y\geq 0, z\geq 0\}$构成的”半空间交“中，内切球的最大半径是多少。</p><p>若这个“半空间交”为空（即上述线性方程组无解），则输出4位小数0.0000。</p><p>如果这个球的半径可以为无穷大，则输出”Infinity”，否则输出一个4位小数，表示最大内切球的半径。<br><span id="more"></span></p><p><strong>输入格式</strong></p><p>第一行一个正整数 $T$，表示测试组数。</p><p>每组测试中，第一行输入一个正整数 $n$，表示线性方程的个数，接下来 $n$​ 行，每行4个整数$a,b,c,d$，表示线性方程$ax+by+cz\leq d$.</p><p>保证对每一组线性方程, $a,b,c$​ 不同时为0。</p><p><strong>输出格式</strong></p><p>共 $T$ 行，每行输出一个保留4位小数的答案，或者$Infinity$。</p><p><strong>样例</strong></p><p><strong>样例输入 1</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">-1</span> <span class="number">-1</span> <span class="number">-1</span> <span class="number">-2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">7</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">-1</span> <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p><strong>样例输出 1</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0.5000</span></span><br><span class="line"><span class="number">0.2113</span></span><br><span class="line"><span class="number">0.5901</span></span><br><span class="line"><span class="number">0.5000</span></span><br><span class="line">Infinity</span><br></pre></td></tr></table></figure><p><strong>数据范围与提示</strong></p><p>保证$1\leq T \leq 150, 1\leq n \leq 100, -100\leq a,b,c,d \leq 100, \sum n \leq 2500$。</p><p>保证对于所有答案不为”Infinity“的答案，答案都$\leq 10^9$。</p><p>良心的助教提供了单纯形的模板：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// m个约束，n个变量</span></span><br><span class="line"><span class="comment">// 第i个约束，sum(a[i][j]*x[j])+a[i][0]&gt;=0</span></span><br><span class="line"><span class="comment">// solve函数返回约束是否有解</span></span><br><span class="line"><span class="comment">// 若有解，则使得目标函数 sum(a[0][j]*x[j]) 最大化</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FOR(i,a,b) for (int i=a;i&lt;=b;++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REP(i,n) FOR(i,1,n)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REP_0N(i,n) FOR(i,0,n)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 505</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 505</span></span><br><span class="line">ld a[<span class="number">1010</span>][<span class="number">10</span>], b[<span class="number">1010</span>][<span class="number">10</span>];</span><br><span class="line">ld x[<span class="number">1050</span>]; </span><br><span class="line"><span class="keyword">int</span> n,m,id[N],tp[N],nn;</span><br><span class="line"><span class="keyword">const</span> ld eps=<span class="number">1e-9</span>;</span><br><span class="line"><span class="keyword">const</span> ld inf=<span class="number">1e12</span>;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pivot</span><span class="params">(<span class="keyword">int</span> r,<span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">swap</span>(id[r+n],id[c]);</span><br><span class="line">    ld t=-a[r][c];</span><br><span class="line">    a[r][c]=<span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">REP_0N</span>(i,n) a[r][i]/=t;</span><br><span class="line">    <span class="built_in">REP_0N</span>(i,m)</span><br><span class="line">    <span class="keyword">if</span> (a[i][c]&amp;&amp;r!=i) &#123;</span><br><span class="line">        t=a[i][c];</span><br><span class="line">        a[i][c]=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">REP_0N</span>(j,n) a[i][j]+=t*a[r][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ld t;</span><br><span class="line">    <span class="built_in">REP</span>(i,n) id[i]=i;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>; ld w=-eps;</span><br><span class="line">        <span class="built_in">REP</span>(k,m) <span class="keyword">if</span> (a[k][<span class="number">0</span>]&lt;w) w=a[i=k][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span> (!i) <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">REP</span>(k,n) <span class="keyword">if</span> (a[i][k]&gt;eps) &#123;j=k; <span class="keyword">break</span>;&#125;</span><br><span class="line">        <span class="keyword">if</span> (!j) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">pivot</span>(i,j);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>; ld w=eps;</span><br><span class="line">        <span class="built_in">REP</span>(k,n) <span class="keyword">if</span> (a[<span class="number">0</span>][k]&gt;w) w=a[<span class="number">0</span>][j=k];</span><br><span class="line">        <span class="keyword">if</span> (!j) <span class="keyword">break</span>;</span><br><span class="line">        w=inf;</span><br><span class="line">        <span class="built_in">REP</span>(k,m) <span class="keyword">if</span> (a[k][j]&lt;-eps&amp;&amp;(t=-a[k][<span class="number">0</span>]/a[k][j])&lt;w) w=t,i=k;</span><br><span class="line">        <span class="keyword">if</span> (!i) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">pivot</span>(i,j);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">FOR</span>(i,n+<span class="number">1</span>,n+m) tp[id[i]]=i-n;</span><br><span class="line">    <span class="built_in">REP</span>(i,n) x[i]=tp[i]?a[tp[i]][<span class="number">0</span>]:<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>假设输入给定的 n 个方程形式为：</p><p>$\begin{cases} a[1, 1] x+ a[1, 2]y + a[1, 3]z\leq a[1, 0]\\a[2, 1] x+ a[2, 2]y + a[2, 3]z\leq a[2, 0] \\\dots \\ \end{cases}$​</p><p>根据给出的==单纯形模板的要求==：</p><p>我们需要将$a[i][j],\ 1\leq j\leq3$取为相反数，记作$b[i][j]$​，那么方程变为</p><p>$\begin{cases} b[1, 1] x+ b[1, 2] y+ b[1, 3]z + a[1, 0]\geq 0\\b[2, 1] x+ b[2, 2]y + b[2, 3]z+ a[2, 0]\geq 0 \\\dots \\ \end{cases}$​​</p><p>这样子就可以直接使用单纯形模板了。</p><p>假定现在的半径为 $radius$​​，设半空间内的某点$(x, y, z)$​​， 根据点到平面的距离公式，我们有：<br>${|ax + by + cz - d|\over\sqrt{a^2 + b^2+c^2} }\geq radius$​</p><p>由于给定条件下$ax + by + cz\leq d$​, 化简之后：</p><p>$-ax -by-cz + d - \sqrt{a^2 + b^2+c^2}\times radius\geq0, \ (1)$​​</p><p>想要知道这个半径所形成的球能否放到我们约束的“半空间”，只需要在原来n个方程的基础上加上 (1) 所形成的 n 个新的约束方程</p><p> ,当然还要注意题目的要求：$x, y, z\geq 0$,根据半径要求：</p><p>$x, y, z\geq radius$</p><p>因此所形成的$2\times n + 3$个限制方程如下：</p><p>$\begin{cases} b[1, 1] x+ b[1, 2] y+ b[1, 3]z + a[1, 0]\geq 0\\b[2, 1] x+ b[2, 2]y + b[2, 3]z+ a[2, 0]\geq 0 \\\dots \\b[n, 1]x +b[n, 2]y + b[n, 3]z+a[n, 0]\geq0\\前n个方程\\b[1,1]x+b[1,2]y+b[1, 3]z+a[1,0]-\sqrt{b_{1,1}^2+b_{1,2}^2+b_{1,3}^2}\times radius\geq0 \\\dots \\由于半径引入的n个方程\\x-radius\geq0\\y-radius\geq0\\z-radius\geq0\end{cases}$</p><p>然后调用单纯形算法就可以判定radius是否合理。==利用这个判定的性质，二分是适合这道题的解法。==</p><p>code:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// m个约束，n个变量</span></span><br><span class="line"><span class="comment">// 第i个约束，sum(a[i][j]*x[j])+a[i][0]&gt;=0</span></span><br><span class="line"><span class="comment">// solve函数返回约束是否有解</span></span><br><span class="line"><span class="comment">// 若有解，则使得目标函数 sum(a[0][j]*x[j]) 最大化</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FOR(i,a,b) for (int i=a;i&lt;=b;++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REP(i,n) FOR(i,1,n)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REP_0N(i,n) FOR(i,0,n)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 505</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 505</span></span><br><span class="line">ld a[<span class="number">1010</span>][<span class="number">10</span>], b[<span class="number">1010</span>][<span class="number">10</span>];</span><br><span class="line">ld x[<span class="number">1050</span>]; </span><br><span class="line"><span class="keyword">int</span> n,m,id[N],tp[N],nn;</span><br><span class="line"><span class="keyword">const</span> ld eps=<span class="number">1e-9</span>;</span><br><span class="line"><span class="keyword">const</span> ld inf=<span class="number">1e12</span>;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pivot</span><span class="params">(<span class="keyword">int</span> r,<span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">swap</span>(id[r+n],id[c]);</span><br><span class="line">    ld t=-a[r][c];</span><br><span class="line">    a[r][c]=<span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">REP_0N</span>(i,n) a[r][i]/=t;</span><br><span class="line">    <span class="built_in">REP_0N</span>(i,m)</span><br><span class="line">    <span class="keyword">if</span> (a[i][c]&amp;&amp;r!=i) &#123;</span><br><span class="line">        t=a[i][c];</span><br><span class="line">        a[i][c]=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">REP_0N</span>(j,n) a[i][j]+=t*a[r][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ld t;</span><br><span class="line">    <span class="built_in">REP</span>(i,n) id[i]=i;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>; ld w=-eps;</span><br><span class="line">        <span class="built_in">REP</span>(k,m) <span class="keyword">if</span> (a[k][<span class="number">0</span>]&lt;w) w=a[i=k][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span> (!i) <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">REP</span>(k,n) <span class="keyword">if</span> (a[i][k]&gt;eps) &#123;j=k; <span class="keyword">break</span>;&#125;</span><br><span class="line">        <span class="keyword">if</span> (!j) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">pivot</span>(i,j);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>; ld w=eps;</span><br><span class="line">        <span class="built_in">REP</span>(k,n) <span class="keyword">if</span> (a[<span class="number">0</span>][k]&gt;w) w=a[<span class="number">0</span>][j=k];</span><br><span class="line">        <span class="keyword">if</span> (!j) <span class="keyword">break</span>;</span><br><span class="line">        w=inf;</span><br><span class="line">        <span class="built_in">REP</span>(k,m) <span class="keyword">if</span> (a[k][j]&lt;-eps&amp;&amp;(t=-a[k][<span class="number">0</span>]/a[k][j])&lt;w) w=t,i=k;</span><br><span class="line">        <span class="keyword">if</span> (!i) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">pivot</span>(i,j);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">FOR</span>(i,n+<span class="number">1</span>,n+m) tp[id[i]]=i-n;</span><br><span class="line">    <span class="built_in">REP</span>(i,n) x[i]=tp[i]?a[tp[i]][<span class="number">0</span>]:<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ld radius, <span class="keyword">int</span> temp_m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>;k &lt;= <span class="number">3</span>; k++)a[i + m][k] = a[i][k];<span class="comment">//新设立的 m 个方程的系数</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//新设立的 m 个方程的常数d - radius * sqrt(a^2 + b^2 + c^2)</span></span><br><span class="line">        a[i + m][<span class="number">0</span>] = a[i][<span class="number">0</span>] - <span class="built_in">sqrt</span>(a[i][<span class="number">1</span>]*a[i][<span class="number">1</span>] + a[i][<span class="number">2</span>]*a[i][<span class="number">2</span>] + a[i][<span class="number">3</span>]*a[i][<span class="number">3</span>])*radius;</span><br><span class="line">    &#125;</span><br><span class="line">    m += temp_m;<span class="comment">//增加了 temp_m + 3个方程 </span></span><br><span class="line">    a[++m][<span class="number">1</span>] = <span class="number">1</span>, a[m][<span class="number">2</span>] = <span class="number">0</span>, a[m][<span class="number">3</span>] = <span class="number">0</span>, a[m][<span class="number">0</span>] = -radius;</span><br><span class="line">    a[++m][<span class="number">1</span>] = <span class="number">0</span>, a[m][<span class="number">2</span>] = <span class="number">1</span>, a[m][<span class="number">3</span>] = <span class="number">0</span>, a[m][<span class="number">0</span>] = -radius;</span><br><span class="line">    a[++m][<span class="number">1</span>] = <span class="number">0</span>, a[m][<span class="number">2</span>] = <span class="number">0</span>, a[m][<span class="number">3</span>] = <span class="number">1</span>, a[m][<span class="number">0</span>] = -radius;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">solve</span>())<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        cin&gt;&gt;m;</span><br><span class="line">        n = <span class="number">3</span>;<span class="comment">//只有三个变量x, y, z</span></span><br><span class="line">        <span class="comment">//输入m个原始约束，并将系数取相反数, b数组用来临时存储a的数据，因为后续单纯形算法可能会改变 a 的部分值</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m; i++)&#123;</span><br><span class="line">            cin&gt;&gt;a[i][<span class="number">1</span>]&gt;&gt;a[i][<span class="number">2</span>]&gt;&gt;a[i][<span class="number">3</span>]&gt;&gt;a[i][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>;k &lt;= <span class="number">3</span>; k++)a[i][k] = b[i][k]= -a[i][k];</span><br><span class="line">            b[i][<span class="number">0</span>] = a[i][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//预处理进行判断：半空间是否存在</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">solve</span>())&#123;</span><br><span class="line">           <span class="built_in">printf</span>(<span class="string">&quot;0.0000\n&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//--------------------------------------------------------------------</span></span><br><span class="line">        ld left = <span class="number">0</span>, right = inf;</span><br><span class="line">        <span class="keyword">int</span> temp_m = m;<span class="comment">//临时存储 m 的值,因为二分每一次check都会修改new_m = old_m*2 + 3</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(right - left &gt; eps)&#123;</span><br><span class="line">            ld medi_radius = (left + right)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">check</span>(medi_radius, temp_m))left = medi_radius;</span><br><span class="line">            <span class="keyword">else</span> right = medi_radius;</span><br><span class="line"></span><br><span class="line">            m -= temp_m + <span class="number">3</span>;<span class="comment">//恢复 m 的值</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//恢复数组a的值，因为单纯形算法可能影响原先数据</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= m; i++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= <span class="number">3</span>; k++)</span><br><span class="line">                a[i][k] = b[i][k];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(left &gt; eps + <span class="number">1e9</span>)cout&lt;&lt;<span class="string">&quot;Infinity&quot;</span>&lt;&lt;endl;<span class="comment">//半空间不是有限空间（此时left = right = inf = 1e12）</span></span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%.4Lf\n&quot;</span>,left); <span class="comment">//有限解,注意long double的输出方式</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-文理分科"><a href="#B-文理分科" class="headerlink" title="B. 文理分科"></a>B. 文理分科</h2><h3 id="题面-1"><a href="#题面-1" class="headerlink" title="题面"></a>题面</h3><p><strong>题目描述</strong></p><p>在高中时候，yjher所在的班级要进行文理分科。他的班级可以用一个 $n\times m$ 的矩阵进行描述，每个格子代表一个同学的座位。每位同学必须从文科和理科中选择一科。同学们在选择科目的时候会获得一个满意值。满意值按如下的方式得到：</p><p>如果第 i 行第 j 列的同学选择了文科，则他将获得$art_{i,j}$的满意值，如果选择理科，将得到$science_{i,j}$ 的满意值。</p><p>如果第 i 行第 j 列的同学选择了文科，并且他相邻（两个格子相邻当且仅当它们拥有一条相同的边）的同学全部选择了文科，则他会更开心，所以会增加 $same_art_{i,j}$的满意值。</p><p>如果第 i 行第 j 列的同学选择了理科，并且他相邻的同学全部选择了理科，则增加$same_science_{i,j}$的满意值。</p><p>yjher想知道，大家应该如何选择，才能使所有人的满意值之和最大。请告诉他这个最大值。</p><p><strong>输入格式</strong></p><p>输入第一行为两个正整数 n,m。</p><p>接下来 n 行 m 整数，第 i 行第 j 个整数表示$art_{i,j}$</p><p>接下来 n 行 m个整数，第 i 行第 j 个整数表示$science_{i,j}$</p><p>接下来 n 行 m整数，第 i 行第 j 个整数表示$same_{-}art_{i,j}$</p><p>接下来 n 行 m 个整数，第 i 行第 j 个整数表示$same_{-}science_{i,j}$</p><p><strong>输出格式</strong></p><p>输出为一个整数，表示最大的满意值之和。</p><p><strong>样例</strong></p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">13 </span><span class="number">2</span> <span class="number">4</span> <span class="number">13</span></span><br><span class="line"><span class="symbol">7 </span><span class="number">13</span> <span class="number">8</span> <span class="number">12</span></span><br><span class="line"><span class="symbol">18 </span><span class="number">17</span> <span class="number">0</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">8 </span><span class="number">13</span> <span class="number">15</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">11 </span><span class="number">3</span> <span class="number">8</span> <span class="number">11</span></span><br><span class="line"><span class="symbol">11 </span><span class="number">18</span> <span class="number">6</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span> <span class="number">4</span> </span><br><span class="line"><span class="symbol">4 </span><span class="number">2</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">1</span> <span class="number">0</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">2</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">2</span> <span class="number">4</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><p><strong>数据范围与提示</strong></p><p>$n,m\leq 100$,读入数据均$\geq 0,\leq 500$</p><p>1 表示选择文科，0 表示选择理科，样例方案如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">152</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p><strong>解法：网络流</strong></p><p>现在先不考虑由于临近的同学选择相同的科目而带来的收益。<br>建立如下网络图：<img src="/2021/10/24/%E7%AC%AC%E5%85%AD%E6%AC%A1OJ/image-20211019203309059.png" alt></p><p>对这个网络调用最大流算法，根据<strong>最小割最大流定理</strong>，这样子求出来的==满意值总和实际上是最小值， 割掉的边实际上是不选的科目==。</p><p>所求满意值最大值为$\sum (art_{i,j}+science_{i, j}) - max_{-}flow$​</p><p><code>----------------------------------------------------------------------------------------------</code></p><p>现考虑由于临近同学选科情况带来的满意值：</p><p>新加入5号点和9号点作为1号的虚拟节点。5 与1,2,3,4的之间边的容量为 $inf$​​ .</p><p>1, 2, 3,4与9之间边的容量为 $inf$<br><img src="/2021/10/24/%E7%AC%AC%E5%85%AD%E6%AC%A1OJ/image-20211020093816755.png" alt><br>具体分析由于邻近选科情况的满意值：</p><p>假如1号同学==最后选择了文科==，那么根据前面的分析，这里<strong>割掉的边应该是$1\longrightarrow T$</strong>​​</p><ul><li><p>如果与之相邻的2, 3, 4 同学最后选择的也是文科，那么$2, 3,4 \longrightarrow T$​的边均被割断， $S\longrightarrow 5$​不可能被割断（采用反证法：$cut(L, R)， S\in L, T\in R, \ $​如果s -&gt; 5被割断了，那么$5\in R$​, 而$1, 2, 3,4 \in L$​, $cut(L, R) = inf$​, 意味着容量为 inf 的边被割断了，这显然不行)，所以$maxflow$​不包括$same_{-}art_{1, 1}$​​</p><p>最后用$\sum (art_{i,j}+science_{i, j} +same_{-}art_{i,j}  +same_{-}sci_{i, j}) - max_{-}flow$​​​​ 时==没有减去$S\longrightarrow 5$​​​​​的边权==，最大满意值也就将1, 2, 3 , 4选择文科时 ,1 号同学所带来的附加满意值计算在内了。 </p><p>按照这个分析，这个时候$9\longrightarrow T$是应该被割掉的边，因为此时 1 并未与邻近的2, 3, 4一起选择理科。那事实是否如此？</p><p>确实如此，记$cut(L, R)， S\in L, T\in R$​, 那么 9 号要么在L，要么在R。</p><p>假设$9\in R$​​​, 因为$1,2, 3,4 \in L$​, 此时$cut(L, R) = inf$​​​​，因为该cut割掉了2, 3, 4与 9 的容量为 inf 的边，这与容量为 inf 的边无法割断矛盾， 因此符合事实。 所以$9\in L$​, 所以$9\longrightarrow T$​被割断。</p></li><li><p>如果2， 3， 4未必都选文科，根据以上分析，$S\longrightarrow 5$​的边和$9\longrightarrow T$​​都会被割断。</p><p>证明：（反证），不妨设 4 号最终选择了理科，那么$4\longrightarrow T$没有被割断（==割掉的边实际上是不选的科目==），这时如果$S\longrightarrow 5$没有被割断，那么增广路径$S\longrightarrow 5\longrightarrow 4 \longrightarrow T$存在，与最大流终止条件矛盾，9号类似。</p></li></ul><p><code>---------------------------------------------------------------------------------</code></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max_edge_num = <span class="number">400000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Max_point_num = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> id[<span class="number">200</span>][<span class="number">200</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> S = <span class="number">0</span>, T;</span><br><span class="line"><span class="keyword">int</span> tot_point_num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;, dy[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//快读</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> X=<span class="number">0</span>,w=<span class="number">1</span>;<span class="keyword">char</span> ch=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123; <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)w=<span class="number">-1</span>;ch=<span class="built_in">getchar</span>(); &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123; X=(X&lt;&lt;<span class="number">1</span>)+(X&lt;&lt;<span class="number">3</span>)+ch-<span class="string">&#x27;0&#x27;</span>;ch=<span class="built_in">getchar</span>(); &#125;</span><br><span class="line">    <span class="keyword">return</span> X*w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//链式前向星建图</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to, next, capacity;</span><br><span class="line">&#125;edges[Max_edge_num];</span><br><span class="line"><span class="keyword">int</span> total_edge_num = <span class="number">0</span>;<span class="comment">//总的点数</span></span><br><span class="line"><span class="keyword">int</span> head[Max_point_num];</span><br><span class="line"><span class="comment">//分析边数数目：原图的点最多有100*100个，与S和T形成20000条边，新点至多有20000个，每一个新点至多6条边，至多120000条边</span></span><br><span class="line"><span class="comment">//这样子至多有：140000*2（注意双向加边）条边，有约30000个点</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//给每一个二维的点赋唯一的编号</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_id</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//建图加边</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_edge</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> end, <span class="keyword">int</span> capacity)</span></span>&#123;</span><br><span class="line">    edges[total_edge_num].to = end;</span><br><span class="line">    edges[total_edge_num].next = head[start];</span><br><span class="line">    edges[total_edge_num].capacity = capacity;</span><br><span class="line">    head[start] = total_edge_num;</span><br><span class="line">    ++total_edge_num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ISAP模块</span></span><br><span class="line"><span class="comment">//------------------------------------------------------------------------------</span></span><br><span class="line"><span class="keyword">int</span> d[Max_point_num],  cur_edge[Max_point_num], numd[Max_point_num], pre[Max_point_num];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ISAP</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//三个数组初始化 </span></span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">0</span>, <span class="keyword">sizeof</span> d); </span><br><span class="line"><span class="built_in">memset</span>(numd, <span class="number">0</span>, <span class="keyword">sizeof</span> numd);</span><br><span class="line"><span class="built_in">memset</span>(pre, <span class="number">-1</span>, <span class="keyword">sizeof</span> pre);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= tot_point_num; i++)cur_edge[i] = head[i];<span class="comment">//初始化当前弧（当前边）数组 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">numd[<span class="number">0</span>] = tot_point_num; </span><br><span class="line"><span class="keyword">int</span> max_flow = <span class="number">0</span>;<span class="comment">//存储最大流 </span></span><br><span class="line"><span class="keyword">int</span> u = S;</span><br><span class="line"><span class="keyword">while</span>(d[S] &lt; tot_point_num)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> neck, i; </span><br><span class="line"><span class="comment">//找到增广路径 </span></span><br><span class="line"><span class="keyword">if</span>(u == T)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> min_flow = inf;</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据（*）寻找增广路径 </span></span><br><span class="line"><span class="keyword">for</span>(i = S; i != T; i = edges[cur_edge[i]].to)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(min_flow &gt; edges[cur_edge[i]].capacity)</span><br><span class="line">&#123;</span><br><span class="line">min_flow = edges[cur_edge[i]].capacity;</span><br><span class="line">neck = i;<span class="comment">//找到瓶颈节点  </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改增广路径上各边的容量:正向边减min_flow，反向边加min_flow </span></span><br><span class="line"><span class="keyword">for</span>(i = S; i != T; i = edges[cur_edge[i]].to)</span><br><span class="line">&#123;</span><br><span class="line">edges[cur_edge[i]].capacity -= min_flow;</span><br><span class="line">edges[cur_edge[i] ^ <span class="number">1</span>].capacity += min_flow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">max_flow += min_flow;</span><br><span class="line"><span class="comment">//cout&lt;&lt;max_flow&lt;&lt;endl;</span></span><br><span class="line">u = neck;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//从瓶颈点继续寻找增广路 </span></span><br><span class="line"><span class="keyword">for</span>(i = cur_edge[u]; i != <span class="number">-1</span>; i = edges[i].next)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(edges[i].capacity &gt; <span class="number">0</span> &amp;&amp; d[u] == d[edges[i].to] + <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//找到可行出点 </span></span><br><span class="line">cur_edge[u] = i;</span><br><span class="line">pre[edges[i].to] = u;</span><br><span class="line">u = edges[i].to;</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">-1</span>)<span class="comment">//找不到下一个点了</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">numd[d[u]]--; </span><br><span class="line"><span class="keyword">if</span>(numd[d[u]] == <span class="number">0</span>)<span class="keyword">break</span>;<span class="comment">//算法终止</span></span><br><span class="line"></span><br><span class="line">cur_edge[u] = head[u];<span class="comment">//从头再来</span></span><br><span class="line"><span class="keyword">int</span> h = tot_point_num - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = head[u]; i != <span class="number">-1</span>; i = edges[i].next)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(edges[i].capacity &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">h = <span class="built_in">min</span>(h, d[edges[i].to]);</span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line">d[u] = h + <span class="number">1</span>;<span class="comment">//当d[u] = n时说明u点已经退出残留网络</span></span><br><span class="line">numd[d[u]]++;</span><br><span class="line"><span class="keyword">if</span>(u != S)u = pre[u];<span class="comment">//回溯到上一个顶点</span></span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">continue</span>;<span class="comment">//找得到下一个出点就继续找，可省略这句 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> max_flow;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">memset</span>(head, <span class="number">0xff</span>, <span class="keyword">sizeof</span> head);<span class="comment">//初始化为 -1</span></span><br><span class="line">    T = n*m + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//预处理点的id</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= m; j++)&#123;</span><br><span class="line">            id[i][j] = <span class="built_in">get_id</span>(i, j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//输入第一个矩阵</span></span><br><span class="line">    <span class="keyword">int</span> art_i_j;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)&#123;</span><br><span class="line">            art_i_j = <span class="built_in">read</span>();</span><br><span class="line"></span><br><span class="line">            sum += art_i_j;</span><br><span class="line">            <span class="built_in">add_edge</span>(S, id[i][j], art_i_j);</span><br><span class="line">            <span class="built_in">add_edge</span>(id[i][j], S, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输入第二个矩阵</span></span><br><span class="line">    <span class="keyword">int</span> science_i_j;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)&#123;</span><br><span class="line">            science_i_j = <span class="built_in">read</span>();</span><br><span class="line"></span><br><span class="line">            sum += science_i_j;</span><br><span class="line">            <span class="built_in">add_edge</span>(id[i][j], T, science_i_j);</span><br><span class="line">            <span class="built_in">add_edge</span>(T, id[i][j] , <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输入后两个矩阵</span></span><br><span class="line">    <span class="keyword">int</span> new_node_id = n * m + <span class="number">1</span>; <span class="comment">//新点的id从此数 + 1开始</span></span><br><span class="line">    <span class="keyword">int</span> same_art_i_j;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)&#123;</span><br><span class="line">            same_art_i_j = <span class="built_in">read</span>();</span><br><span class="line"></span><br><span class="line">            sum += same_art_i_j;</span><br><span class="line">            new_node_id++;</span><br><span class="line">            <span class="built_in">add_edge</span>(S, new_node_id, same_art_i_j);<span class="comment">//加一条从源点S到新点的边，权值为same_art_i_j</span></span><br><span class="line">            <span class="built_in">add_edge</span>(new_node_id, S, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">add_edge</span>(new_node_id, id[i][j], inf);</span><br><span class="line">            <span class="built_in">add_edge</span>(id[i][j], new_node_id, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//枚举4个方向合理的邻居并且加边</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> dir = <span class="number">0</span>; dir &lt; <span class="number">4</span>; dir++)&#123;</span><br><span class="line">                <span class="keyword">int</span> neighbor_x = i + dx[dir], neighbor_y = j + dy[dir];</span><br><span class="line">                <span class="keyword">if</span>(neighbor_x &lt;= <span class="number">0</span> || neighbor_x &gt; n || neighbor_y &lt;= <span class="number">0</span> || neighbor_y &gt; m)<span class="keyword">continue</span>;<span class="comment">//不合法邻居</span></span><br><span class="line">                <span class="built_in">add_edge</span>(new_node_id, id[neighbor_x][neighbor_y], inf);</span><br><span class="line">                <span class="built_in">add_edge</span>(id[neighbor_x][neighbor_y], new_node_id, <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> same_science_i_j;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)&#123;</span><br><span class="line">            same_science_i_j = <span class="built_in">read</span>();</span><br><span class="line">            </span><br><span class="line">            sum += same_science_i_j;</span><br><span class="line"></span><br><span class="line">            new_node_id++;</span><br><span class="line">            <span class="built_in">add_edge</span>(new_node_id, T, same_science_i_j);<span class="comment">//加一条从新点到汇点 T 的边</span></span><br><span class="line">            <span class="built_in">add_edge</span>(T, new_node_id, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">add_edge</span>(id[i][j], new_node_id, inf);</span><br><span class="line">            <span class="built_in">add_edge</span>(new_node_id, id[i][j], <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> dir = <span class="number">0</span>; dir &lt; <span class="number">4</span>; dir++)&#123;</span><br><span class="line">                <span class="keyword">int</span> neighbor_x = i + dx[dir], neighbor_y = j + dy[dir];</span><br><span class="line">                <span class="keyword">if</span>(neighbor_x &lt;= <span class="number">0</span> || neighbor_x &gt; n || neighbor_y &lt;= <span class="number">0</span> || neighbor_y &gt; m)<span class="keyword">continue</span>;<span class="comment">//不合法邻居</span></span><br><span class="line">                <span class="built_in">add_edge</span>(id[neighbor_x][neighbor_y], new_node_id, inf);</span><br><span class="line">                <span class="built_in">add_edge</span>(new_node_id, id[neighbor_x][neighbor_y], <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    tot_point_num = new_node_id;</span><br><span class="line">    cout&lt;&lt;sum - <span class="built_in">ISAP</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-Did-you-just-say-……-Acesrc"><a href="#C-Did-you-just-say-……-Acesrc" class="headerlink" title="C. Did you just say …… Acesrc?"></a>C. Did you just say …… Acesrc?</h2><h3 id="题面-2"><a href="#题面-2" class="headerlink" title="题面"></a>题面</h3><p>在最新推出的爆款游戏《Acesrc的奇妙冒险》中，你需要协助我们机智帅气的主人公Acesrc解决下面的问题:</p><p>一个梯图$(ladder\ graph)L(n)$一个由$2N$个顶点以及$3N−2$条边组成的平面图。它和如下$2\times N$的格点图是同构的。</p><p><img src="http://roundgod.com/resources/wcy-2.png" alt="http://roundgod.com/resources/wcy-2.png"></p><p>你希望删掉$L(n)$中一些边的集合(可能为空)，并保证剩下的图仍然是联通的。计算你有多少种合法的删除的方案。请输出答案对$10^9+7$取模后的结果。</p><p>如果你能做出这道题，Acesrc便会不再做人，成为唯一A皇。对了,你刚才说了Acesrc,……对吧?</p><p><strong>输入格式</strong></p><p>输入仅包含一行，一个正整数N。</p><p><strong>输出格式</strong></p><p>输出仅包含一行，合法的删除的方案数对$10^9+7$取模后的结果。</p><p><strong>样例</strong></p><p><strong>样例输入1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p><strong>样例输出1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>样例输入2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1024</span><br></pre></td></tr></table></figure><p><strong>样例输出2</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">399356307</span><br></pre></td></tr></table></figure><p><strong>数据范围与提示</strong></p><p>对于$50\%$的数据，有$1\leq N\leq 10^7$。</p><p>对于$100\%%$的数据，有$1\leq N\leq 10^{18}$。</p><h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><p><img src="/2021/10/24/%E7%AC%AC%E5%85%AD%E6%AC%A1OJ/image-20211020154943537.png" alt><br>记$g[i]$表示一个$2\times i$​​​的梯图最右侧两个点（上图的 i 和i + i）==不连通，并且整个图只有两个连通分支==的方案数。</p><p>记$f[i]$为$2\times i$的梯图最右侧两个点是连通且整个图只有一个连通分支的方案数。</p><p>考虑状态转移如下：</p><p>$f[i] = 4f[i-1]+g[i-1]$​</p><p>解释：</p><ul><li>在$f[i-1]$的基础上，考虑最后一个格子三条边的情况：</li></ul><p><img src="/2021/10/24/%E7%AC%AC%E5%85%AD%E6%AC%A1OJ/image-20211020162606799.png" alt="image-20211020162606799"></p><p>这四种加边情况都可以保证最后整个图是连通的。</p><ul><li>在$g[i-1]$​的基础上，只能加上图的第一种情况。</li></ul><p>$g[i] = 2f[i-1]+g[i-1]$</p><p>解释：</p><ul><li>在$f[i-1]$​​的基础上，考虑最后一个格子三条边的情况（有两种情况,分别是加上边,加下边）：</li></ul><p><img src="/2021/10/24/%E7%AC%AC%E5%85%AD%E6%AC%A1OJ/image-20211020165138823.png" alt></p><ul><li>在$g[i-1]$的基础上，考虑最后一个格子三条边的情况（只有一种情况,加上边和下边）：</li></ul><p><img src="/2021/10/24/%E7%AC%AC%E5%85%AD%E6%AC%A1OJ/image-20211020165254450.png" alt></p><p>构造矩阵</p><p>$Relation_{-}Matrix = \left(\begin{matrix}4&amp;1\\2&amp;1\end{matrix}\right)$​​</p><p>$\because f[1] = 1, g[1] = 1$​,</p><p>$\therefore \left(\begin{matrix}4&amp;1\\2&amp;1\end{matrix}\right)\left(\begin{matrix}f[1]\\g[1]\end{matrix}\right)=\left(\begin{matrix}f[2]\\g[2]\end{matrix}\right)$</p><p>$ \left(\begin{matrix}4&amp;1\\2&amp;1\end{matrix}\right)^2\left(\begin{matrix}f[1]\\g[1]\end{matrix}\right)=\left(\begin{matrix}4&amp;1\\2&amp;1\end{matrix}\right)\left(\begin{matrix}f[2]\\g[2]\end{matrix}\right) = \left(\begin{matrix}f[3]\\g[3]\end{matrix}\right)$</p><p>$\dots$</p><p>$ \left(\begin{matrix}4&amp;1\\2&amp;1\end{matrix}\right)^{n-1} \left(\begin{matrix}f[1]\\g[1]\end{matrix}\right) =  \left(\begin{matrix}f[n]\\g[n]\end{matrix}\right)$</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</span><br><span class="line">ll n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">matrix</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> row, col;</span><br><span class="line">    ll data[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">memset</span>(data, <span class="number">0</span>, <span class="keyword">sizeof</span> data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_row_col</span><span class="params">(matrix &amp;m, <span class="keyword">int</span> row, <span class="keyword">int</span> col)</span></span>&#123;</span><br><span class="line">    m.col = col; m.row = row;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//矩阵乘法</span></span><br><span class="line"><span class="function">matrix <span class="title">matrix_multipy</span><span class="params">(matrix &amp;A, matrix &amp;B)</span></span>&#123;</span><br><span class="line">    matrix ret;</span><br><span class="line">    ret.<span class="built_in">init</span>();</span><br><span class="line">    <span class="built_in">set_row_col</span>(ret, A.row, B.col);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= A.row; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= B.col; j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>;k &lt;= A.col; k++)</span><br><span class="line">              ret.data[i][j] = (ret.data[i][j] + A.data[i][k]*B.data[k][j]%mod)%mod;</span><br><span class="line">              <span class="comment">//注意不要写 += ，否则结果可能超过mod，还得再取一次模</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始矩阵(f[1], g[1])^T</span></span><br><span class="line">    matrix original_matrix;</span><br><span class="line">    original_matrix.<span class="built_in">init</span>();</span><br><span class="line">    <span class="built_in">set_row_col</span>(original_matrix, <span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">    original_matrix.data[<span class="number">1</span>][<span class="number">1</span>] = original_matrix.data[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//递推矩阵(4, 1, 2, 1)</span></span><br><span class="line">    matrix Relation_Matrix;</span><br><span class="line">    Relation_Matrix.<span class="built_in">init</span>();</span><br><span class="line">    <span class="built_in">set_row_col</span>(Relation_Matrix, <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">    Relation_Matrix.data[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">4</span>, Relation_Matrix.data[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">    Relation_Matrix.data[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">2</span>, Relation_Matrix.data[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//用Re_pow存储关系矩阵的 n - 1 次方</span></span><br><span class="line">    n -= <span class="number">1</span>;</span><br><span class="line">    matrix Re_pow;</span><br><span class="line">    Re_pow.<span class="built_in">init</span>();</span><br><span class="line">    <span class="built_in">set_row_col</span>(Re_pow, <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">    Re_pow.data[<span class="number">1</span>][<span class="number">1</span>] = Re_pow.data[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">1</span>;<span class="comment">//Re_pow初始化为单位矩阵</span></span><br><span class="line">    <span class="comment">// 矩阵快速幂加速矩阵乘法</span></span><br><span class="line">    <span class="keyword">while</span>( n )&#123;</span><br><span class="line">        <span class="keyword">if</span>( n &amp; <span class="number">1</span> )Re_pow = <span class="built_in">matrix_multipy</span>(Re_pow, Relation_Matrix);</span><br><span class="line">        Relation_Matrix = <span class="built_in">matrix_multipy</span>(Relation_Matrix, Relation_Matrix);</span><br><span class="line">        n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用递推矩阵的n - 1次方乘以Original_matrix</span></span><br><span class="line">    matrix ret = <span class="built_in">matrix_multipy</span>(Re_pow, original_matrix);</span><br><span class="line">    cout&lt;&lt;ret.data[<span class="number">1</span>][<span class="number">1</span>];<span class="comment">//即f[n]</span></span><br><span class="line">    <span class="comment">// ret.data[1][2]此时为g[n]</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第6次OJ </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
